{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\n\nclass AnimatedTransform extends AnimatedWithChildren {\n  constructor(transforms) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n    });\n\n    super.__makeNative();\n  }\n\n  __getValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        } else {\n          result[key] = value;\n        }\n      }\n\n      return result;\n    });\n  }\n\n  __getAnimatedValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getAnimatedValue();\n        } else {\n          // All transform components needed to recompose matrix\n          result[key] = value;\n        }\n      }\n\n      return result;\n    });\n  }\n\n  __attach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n\n    super.__detach();\n  }\n\n  __getNativeConfig() {\n    var transConfigs = [];\n\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag()\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value)\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs\n    };\n  }\n\n}\n\nexport default AnimatedTransform;","map":{"version":3,"names":["AnimatedNode","AnimatedWithChildren","NativeAnimatedHelper","AnimatedTransform","constructor","transforms","_transforms","__makeNative","forEach","transform","key","value","__getValue","map","result","__getAnimatedValue","__attach","__addChild","__detach","__removeChild","__getNativeConfig","transConfigs","push","type","property","nodeTag","__getNativeTag","transformDataType","validateTransform"],"sources":["/Users/ilkwon_choi/Downloads/Alcohol/FrontEnd/alcohol-app/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedTransform.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\n\nclass AnimatedTransform extends AnimatedWithChildren {\n  constructor(transforms) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n    });\n\n    super.__makeNative();\n  }\n\n  __getValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        } else {\n          result[key] = value;\n        }\n      }\n\n      return result;\n    });\n  }\n\n  __getAnimatedValue() {\n    return this._transforms.map(transform => {\n      var result = {};\n\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getAnimatedValue();\n        } else {\n          // All transform components needed to recompose matrix\n          result[key] = value;\n        }\n      }\n\n      return result;\n    });\n  }\n\n  __attach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach() {\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n\n    super.__detach();\n  }\n\n  __getNativeConfig() {\n    var transConfigs = [];\n\n    this._transforms.forEach(transform => {\n      for (var key in transform) {\n        var value = transform[key];\n\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag()\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value)\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs\n    };\n  }\n\n}\n\nexport default AnimatedTransform;"],"mappings":"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"},"metadata":{},"sourceType":"module"}