{"ast":null,"code":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyFunction = require(\"./emptyFunction\");\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nfunction printWarning(format) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  var argIndex = 0;\n  var message = 'Warning: ' + format.replace(/%s/g, function () {\n    return args[argIndex++];\n  });\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n  try {\n    // --- Welcome to debugging React ---\n    // This error was thrown as a convenience so that you can use this stack\n    // to find the callsite that caused this warning to fire.\n    throw new Error(message);\n  } catch (x) {}\n}\nvar warning = process.env.NODE_ENV !== \"production\" ? function (condition, format) {\n  if (format === undefined) {\n    throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n  }\n  if (!condition) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n    printWarning.apply(void 0, [format].concat(args));\n  }\n} : emptyFunction;\nmodule.exports = warning;","map":{"version":3,"names":["emptyFunction","require","printWarning","format","_len","arguments","length","args","Array","_key","argIndex","message","replace","console","error","Error","x","warning","process","env","NODE_ENV","condition","undefined","_len2","_key2","apply","concat","module","exports"],"sources":["C:/Users/dlfrn/Downloads/myToyProj/toyProject/FrontEnd/alcohol-app/node_modules/fbjs/lib/warning.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyFunction = require(\"./emptyFunction\");\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\n\nfunction printWarning(format) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var argIndex = 0;\n  var message = 'Warning: ' + format.replace(/%s/g, function () {\n    return args[argIndex++];\n  });\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    // --- Welcome to debugging React ---\n    // This error was thrown as a convenience so that you can use this stack\n    // to find the callsite that caused this warning to fire.\n    throw new Error(message);\n  } catch (x) {}\n}\n\nvar warning = process.env.NODE_ENV !== \"production\" ? function (condition, format) {\n  if (format === undefined) {\n    throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n  }\n\n  if (!condition) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    printWarning.apply(void 0, [format].concat(args));\n  }\n} : emptyFunction;\nmodule.exports = warning;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,YAAYA,CAACC,MAAM,EAAE;EAC5B,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;IAC1GF,IAAI,CAACE,IAAI,GAAG,CAAC,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;EAClC;EAEA,IAAIC,QAAQ,GAAG,CAAC;EAChB,IAAIC,OAAO,GAAG,WAAW,GAAGR,MAAM,CAACS,OAAO,CAAC,KAAK,EAAE,YAAY;IAC5D,OAAOL,IAAI,CAACG,QAAQ,EAAE,CAAC;EACzB,CAAC,CAAC;EAEF,IAAI,OAAOG,OAAO,KAAK,WAAW,EAAE;IAClCA,OAAO,CAACC,KAAK,CAACH,OAAO,CAAC;EACxB;EAEA,IAAI;IACF;IACA;IACA;IACA,MAAM,IAAII,KAAK,CAACJ,OAAO,CAAC;EAC1B,CAAC,CAAC,OAAOK,CAAC,EAAE,CAAC;AACf;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG,UAAUC,SAAS,EAAElB,MAAM,EAAE;EACjF,IAAIA,MAAM,KAAKmB,SAAS,EAAE;IACxB,MAAM,IAAIP,KAAK,CAAC,2DAA2D,GAAG,kBAAkB,CAAC;EACnG;EAEA,IAAI,CAACM,SAAS,EAAE;IACd,KAAK,IAAIE,KAAK,GAAGlB,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACe,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,EAAEC,KAAK,EAAE,EAAE;MACjHjB,IAAI,CAACiB,KAAK,GAAG,CAAC,CAAC,GAAGnB,SAAS,CAACmB,KAAK,CAAC;IACpC;IAEAtB,YAAY,CAACuB,KAAK,CAAC,KAAK,CAAC,EAAE,CAACtB,MAAM,CAAC,CAACuB,MAAM,CAACnB,IAAI,CAAC,CAAC;EACnD;AACF,CAAC,GAAGP,aAAa;AACjB2B,MAAM,CAACC,OAAO,GAAGX,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}