{"ast":null,"code":"import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport Batchinator from '../Batchinator';\nimport FillRateHelper from '../FillRateHelper';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport View from '../../../exports/View';\nimport ViewabilityHelper from '../ViewabilityHelper';\nvar flattenStyle = StyleSheet.flatten;\nimport infoLog from '../infoLog';\nimport invariant from 'fbjs/lib/invariant';\nimport { keyExtractor as defaultKeyExtractor, computeWindowedRenderLimits } from '../VirtualizeUtils';\nimport * as React from 'react';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n// horizontalOrDefault(this.props.horizontal)\n\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n} // initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\n\n\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n} // maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\n\n\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n} // onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\n\n\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n} // scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\n\n\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n} // windowSizeOrDefault(this.props.windowSize)\n\n\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\n\n\nclass VirtualizedList extends React.PureComponent {\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n    var frame = this._getFrameMetricsApprox(veryLast);\n\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  } // scrollToIndex may be janky without getItemLayout prop\n\n\n  scrollToIndex(params) {\n    var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index\n      });\n      return;\n    }\n\n    var frame = this._getFrameMetricsApprox(index);\n\n    var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  } // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n\n\n  scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n\n\n  scrollToOffset(params) {\n    var animated = params.animated,\n        offset = params.offset;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n\n\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey() {\n    var _this$context;\n\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  }\n\n  _getListKey() {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo() {\n    var _this$context2;\n\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n    };\n  }\n\n  hasMore() {\n    return this._hasMore;\n  }\n\n  constructor(_props) {\n    var _this$props$updateCel;\n\n    super(_props);\n\n    this._getScrollMetrics = () => {\n      return this._scrollMetrics;\n    };\n\n    this._getOutermostParentListRef = () => {\n      if (this._isNestedWithSameOrientation()) {\n        return this.context.getOutermostParentListRef();\n      } else {\n        return this;\n      }\n    };\n\n    this._getNestedChildState = key => {\n      var existingChildData = this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    this._registerAsNestedChild = childList => {\n      // Register the mapping between this child key and the cellKey for its cell\n      var childListsInCell = this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = this._nestedChildLists.get(childList.key);\n\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          // We're called from the child's componentDidMount, so it's safe to\n          // read the child's props here (albeit weird).\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n\n      this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    this._unregisterAsNestedChild = childList => {\n      this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    this._onUpdateSeparators = (keys, newProps) => {\n      keys.forEach(key => {\n        var ref = key != null && this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\n\n    this._averageCellLength = 0;\n    this._cellKeysToChildListKeys = new Map();\n    this._cellRefs = {};\n    this._frames = {};\n    this._footerLength = 0;\n    this._hasDoneInitialScroll = false;\n    this._hasInteracted = false;\n    this._hasMore = false;\n    this._hasWarned = {};\n    this._headerLength = 0;\n    this._hiPriInProgress = false;\n    this._highestMeasuredFrameIndex = 0;\n    this._indicesToKeys = new Map();\n    this._nestedChildLists = new Map();\n    this._offsetFromParentVirtualizedList = 0;\n    this._prevParentOffset = 0;\n    this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    this._scrollRef = null;\n    this._sentEndForContentLength = 0;\n    this._totalCellLength = 0;\n    this._totalCellsMeasured = 0;\n    this._viewabilityTuples = [];\n\n    this._captureScrollRef = ref => {\n      this._scrollRef = ref;\n    };\n\n    this._defaultRenderScrollComponent = props => {\n      var onRefresh = props.onRefresh;\n\n      if (this._isNestedWithSameOrientation()) {\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return (\n          /*#__PURE__*/\n          // $FlowFixMe[prop-missing] Invalid prop usage\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl, {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n\n    this._onCellUnmount = cellKey => {\n      var curr = this._frames[cellKey];\n\n      if (curr) {\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n\n    this._onLayout = e => {\n      if (this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        this.measureLayoutRelativeToContainingList();\n      } else {\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\n      }\n\n      this.props.onLayout && this.props.onLayout(e);\n\n      this._scheduleCellsToRenderUpdate();\n\n      this._maybeCallOnEndReached();\n    };\n\n    this._onLayoutEmpty = e => {\n      this.props.onLayout && this.props.onLayout(e);\n    };\n\n    this._onLayoutFooter = e => {\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\n    };\n\n    this._onLayoutHeader = e => {\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\n    };\n\n    this._onContentSizeChange = (width, height) => {\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasDoneInitialScroll) {\n        if (this.props.contentOffset == null) {\n          this.scrollToIndex({\n            animated: false,\n            index: this.props.initialScrollIndex\n          });\n        }\n\n        this._hasDoneInitialScroll = true;\n      }\n\n      if (this.props.onContentSizeChange) {\n        this.props.onContentSizeChange(width, height);\n      }\n\n      this._scrollMetrics.contentLength = this._selectLength({\n        height,\n        width\n      });\n\n      this._scheduleCellsToRenderUpdate();\n\n      this._maybeCallOnEndReached();\n    };\n\n    this._convertParentScrollMetrics = metrics => {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList; // Child's visible length is the same as its parent's\n\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - this._scrollMetrics.offset;\n      var contentLength = this._scrollMetrics.contentLength;\n      return {\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset\n      };\n    };\n\n    this._onScroll = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (this.props.onScroll) {\n        this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - this._scrollMetrics.offset;\n\n      if (this._isNestedWithSameOrientation()) {\n        if (this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n\n        var _this$_convertParentS = this._convertParentScrollMetrics({\n          visibleLength,\n          offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt,\n          prevDt: this._scrollMetrics.dt,\n          contentLength\n        });\n        this._hasWarned.perf = true;\n      }\n\n      this._scrollMetrics = {\n        contentLength,\n        dt,\n        dOffset,\n        offset,\n        timestamp,\n        velocity,\n        visibleLength\n      };\n\n      this._updateViewableItems(this.props.data);\n\n      if (!this.props) {\n        return;\n      }\n\n      this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        this._fillRateHelper.activate();\n      }\n\n      this._computeBlankness();\n\n      this._scheduleCellsToRenderUpdate();\n    };\n\n    this._onScrollBeginDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      this._hasInteracted = true;\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n\n    this._onScrollEndDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollEndDrag(e);\n      });\n\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\n      }\n\n      this._computeBlankness();\n\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n\n    this._onMomentumScrollBegin = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollBegin(e);\n      });\n\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n\n    this._onMomentumScrollEnd = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollEnd(e);\n      });\n\n      this._scrollMetrics.velocity = 0;\n\n      this._computeBlankness();\n\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n\n    this._updateCellsToRender = () => {\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          getItemCount = _this$props3.getItemCount,\n          _onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(_onEndReachedThreshold);\n\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n      this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      this.setState(state => {\n        var newState;\n        var _this$_scrollMetrics = this._scrollMetrics,\n            contentLength = _this$_scrollMetrics.contentLength,\n            offset = _this$_scrollMetrics.offset,\n            visibleLength = _this$_scrollMetrics.visibleLength;\n\n        if (!isVirtualizationDisabled) {\n          // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n          // and wipe out the initialNumToRender rendered elements.\n          // So let's wait until the scroll view metrics have been set up. And until then,\n          // we will trust the initialNumToRender suggestion\n          if (visibleLength > 0 && contentLength > 0) {\n            // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n            // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n            // So let's wait until we've scrolled the view to the right place. And until then,\n            // we will trust the initialScrollIndex suggestion.\n            if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(this.props.data, this.props.getItemCount, maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch), windowSizeOrDefault(this.props.windowSize), state, this._getFrameMetricsApprox, this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch) : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last; // If some cell in the new state has a child list in it, we should only render\n          // up through that item, so that we give that list a chance to render.\n          // Otherwise there's churn from multiple child lists mounting and un-mounting\n          // their items.\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false; // For each cell, need to check whether any child list in it has more elements to render\n\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n\n              var childList = this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore) {\n              // $FlowFixMe[incompatible-use] The newState definitely exists past \"if (newState &&\"\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n\n        return newState;\n      });\n    };\n\n    this._createViewToken = (index, isViewable) => {\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          getItem = _this$props4.getItem;\n      var item = getItem(data, index);\n      return {\n        index,\n        item,\n        key: this._keyExtractor(item, index),\n        isViewable\n      };\n    };\n\n    this._getFrameMetricsApprox = index => {\n      var frame = this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var getItemLayout = this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: this._averageCellLength,\n          offset: this._averageCellLength * index\n        };\n      }\n    };\n\n    this._getFrameMetrics = index => {\n      var _this$props5 = this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount,\n          getItemLayout = _this$props5.getItemLayout;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && this._frames[this._keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n      /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.63 was deployed. To see the error\n       * delete this comment and run Flow. */\n\n\n      return frame;\n    };\n\n    invariant( // $FlowFixMe[prop-missing]\n    !_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(_props.windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n        onViewableItemsChanged: pair.onViewableItemsChanged\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        // $FlowFixMe[incompatible-call]\n        onViewableItemsChanged: this.props.onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last: Math.min(this.props.getItemCount(this.props.data), (this.props.initialScrollIndex || 0) + initialNumToRenderOrDefault(this.props.initialNumToRender)) - 1\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      var storedState = this.context.getNestedChildState(this._getListKey());\n\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    // For issue https://github.com/necolas/react-native-web/issues/995\n\n\n    this.invertedWheelEventHandler = ev => {\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\n        var node = this._scrollRef.getScrollableNode();\n\n        if (this.props.horizontal) {\n          node.scrollLeft -= ev.deltaX || ev.wheelDeltaX;\n        } else {\n          node.scrollTop -= ev.deltaY || ev.wheelDeltaY;\n        }\n\n        ev.preventDefault();\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo\n      });\n    } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n    this.setupWebWheelHandler();\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames\n        }\n      });\n    }\n\n    this._updateViewableItems(null);\n\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n\n    this._fillRateHelper.deactivateAndFlush(); // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n    this.teardownWebWheelHandler();\n  } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n  setupWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n    } else {\n      setTimeout(() => this.setupWebWheelHandler(), 50);\n      return;\n    }\n  } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n  teardownWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n    }\n  }\n\n  static getDerivedStateFromProps(newProps, prevState) {\n    var data = newProps.data,\n        getItemCount = newProps.getItemCount;\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(newProps.maxToRenderPerBatch); // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n\n    return {\n      first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n    };\n  }\n\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this = this;\n\n    var _this$props6 = this.props,\n        CellRendererComponent = _this$props6.CellRendererComponent,\n        ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n        data = _this$props6.data,\n        getItem = _this$props6.getItem,\n        getItemCount = _this$props6.getItemCount,\n        horizontal = _this$props6.horizontal;\n    var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n\n    var _loop = function _loop(ii) {\n      var item = getItem(data, ii);\n\n      var key = _this._keyExtractor(item, ii);\n\n      _this._indicesToKeys.set(ii, key);\n\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, {\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        cellKey: key,\n        fillRateHelper: _this._fillRateHelper,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this._onUpdateSeparators,\n        onLayout: e => _this._onCellLayout(e, key, ii),\n        onUnmount: _this._onCellUnmount,\n        parentProps: _this.props,\n        ref: _ref => {\n          _this._cellRefs[key] = _ref;\n        }\n      }));\n      prevCellKey = key;\n    };\n\n    for (var ii = first; ii <= last; ii++) {\n      _loop(ii);\n    }\n  }\n\n  _isVirtualizationDisabled() {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n  }\n\n  _keyExtractor(item, index) {\n    if (this.props.keyExtractor != null) {\n      return this.props.keyExtractor(item, index);\n    }\n\n    var key = defaultKeyExtractor(item, index);\n\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n\n    return key;\n  }\n\n  render() {\n    if (__DEV__) {\n      var flatStyles = flattenStyle(this.props.contentContainerStyle);\n\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n    }\n\n    var _this$props7 = this.props,\n        ListEmptyComponent = _this$props7.ListEmptyComponent,\n        ListFooterComponent = _this$props7.ListFooterComponent,\n        ListHeaderComponent = _this$props7.ListHeaderComponent;\n    var _this$props8 = this.props,\n        data = _this$props8.data,\n        horizontal = _this$props8.horizontal;\n\n    var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n\n      var element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListHeaderComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle)\n      }, // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      element)));\n    }\n\n    var itemCount = this.props.getItemCount(data);\n\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n\n      var spacerKey = this._getSpacerKey(!horizontal);\n\n      var lastInitialIndex = this.props.initialScrollIndex ? -1 : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n      var _this$state = this.state,\n          first = _this$state.first,\n          last = _this$state.last;\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n      var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        var insertedStickySpacer = false;\n\n        if (stickyIndicesFromProps.size > 0) {\n          var stickyOffset = ListHeaderComponent ? 1 : 0; // See if there are any sticky headers in the virtualized space that we need to render.\n\n          for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n              var stickyBlock = this._getFrameMetricsApprox(ii);\n\n              var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_lead\",\n                style: {\n                  [spacerKey]: leadSpace\n                }\n              }));\n\n              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n              var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_trail\",\n                style: {\n                  [spacerKey]: trailSpace\n                }\n              }));\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n\n        if (!insertedStickySpacer) {\n          var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n          var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n          cells.push( /*#__PURE__*/React.createElement(View, {\n            key: \"$lead_spacer\",\n            style: {\n              [spacerKey]: firstSpace\n            }\n          }));\n        }\n      }\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        var lastFrame = this._getFrameMetricsApprox(last); // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n\n\n        var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n        var endFrame = this._getFrameMetricsApprox(end);\n\n        var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n        cells.push( /*#__PURE__*/React.createElement(View, {\n          key: \"$tail_spacer\",\n          style: {\n            [spacerKey]: tailSpacerLength\n          }\n        }));\n      }\n    } else if (ListEmptyComponent) {\n      var _element = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListEmptyComponent, null);\n\n      cells.push( /*#__PURE__*/React.cloneElement(_element, {\n        key: '$empty',\n        onLayout: event => {\n          this._onLayoutEmpty(event);\n\n          if (_element.props.onLayout) {\n            _element.props.onLayout(event);\n          }\n        },\n        style: StyleSheet.compose(inversionStyle, _element.props.style)\n      }));\n    }\n\n    if (ListFooterComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListFooterComponent, null);\n\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle)\n      }, // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element2)));\n    }\n\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n\n    this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n        debugInfo: this._getDebugInfo()\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }*/\n\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n        data = _this$props9.data,\n        extraData = _this$props9.extraData;\n\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    } // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n\n\n    var hiPriInProgress = this._hiPriInProgress;\n\n    this._scheduleCellsToRenderUpdate(); // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n\n\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n  }\n\n  _onCellLayout(e, cellKey, index) {\n    var layout = e.nativeEvent.layout;\n    var next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true\n    };\n    var curr = this._frames[cellKey];\n\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n\n    this._updateViewableItems(this.props.data);\n  }\n\n  _triggerRemeasureForChildListsInCell(cellKey) {\n    var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n\n    if (childListKeys) {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n        var childKey = _step2.value;\n\n        var childList = this._nestedChildLists.get(childKey);\n\n        childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList() {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      } // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n\n\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({\n          x,\n          y\n        });\n        this._scrollMetrics.contentLength = this._selectLength({\n          width,\n          height\n        });\n\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\n\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\n\n        if (metricsChanged) {\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset; // If metrics of the scrollView changed, then we triggered remeasure for child list\n          // to ensure VirtualizedList has the right information.\n\n          this._cellKeysToChildListKeys.forEach(childListKeys => {\n            if (childListKeys) {\n              for (var _iterator3 = _createForOfIteratorHelperLoose(childListKeys), _step3; !(_step3 = _iterator3()).done;) {\n                var childKey = _step3.value;\n\n                var childList = this._nestedChildLists.get(childKey);\n\n                childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n              }\n            }\n          });\n        }\n      }, error => {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  }\n\n  _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  }\n\n  _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n\n\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n\n    var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n    var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\n      key: 'f' + ii,\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n        top: f.offset * normalize,\n        height: f.length * normalize\n      }]\n    })), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  }\n\n  _selectLength(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    var _this$props10 = this.props,\n        data = _this$props10.data,\n        getItemCount = _this$props10.getItemCount,\n        onEndReached = _this$props10.onEndReached,\n        onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n    var threshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n\n    if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd\n      });\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _scheduleCellsToRenderUpdate() {\n    var _this$state2 = this.state,\n        first = _this$state2.first,\n        last = _this$state2.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n    var scrollingThreshold = onEndReachedThreshold * visibleLength / 2; // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n\n    if (first > 0) {\n      var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n      hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n    } // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n\n\n    if (last < itemCount - 1) {\n      var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n    } // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n\n\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true; // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._updateCellsToRender();\n\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _updateViewableItems(data) {\n    var getItemCount = this.props.getItemCount;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(getItemCount(data), this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, this.state);\n    });\n  }\n\n}\n\nVirtualizedList.contextType = VirtualizedListContext;\n\nclass CellRenderer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: this.props.item\n      }\n    };\n    this._separators = {\n      highlight: () => {\n        var _this$props11 = this.props,\n            cellKey = _this$props11.cellKey,\n            prevCellKey = _this$props11.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: () => {\n        var _this$props12 = this.props,\n            cellKey = _this$props12.cellKey,\n            prevCellKey = _this$props12.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: (select, newProps) => {\n        var _this$props13 = this.props,\n            cellKey = _this$props13.cellKey,\n            prevCellKey = _this$props13.prevCellKey;\n        this.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(props, prevState) {\n    return {\n      separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n        leadingItem: props.item\n      })\n    };\n  } // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n\n\n  updateSeparatorProps(newProps) {\n    this.setState(state => ({\n      separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return /*#__PURE__*/React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n\n    invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n  }\n\n  render() {\n    var _this$props14 = this.props,\n        CellRendererComponent = _this$props14.CellRendererComponent,\n        ItemSeparatorComponent = _this$props14.ItemSeparatorComponent,\n        fillRateHelper = _this$props14.fillRateHelper,\n        horizontal = _this$props14.horizontal,\n        item = _this$props14.item,\n        index = _this$props14.index,\n        inversionStyle = _this$props14.inversionStyle,\n        parentProps = _this$props14.parentProps;\n    var renderItem = parentProps.renderItem,\n        getItemLayout = parentProps.getItemLayout,\n        ListItemComponent = parentProps.ListItemComponent;\n\n    var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n    var onLayout =\n    /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the\n     * error delete this comment and run Flow. */\n    getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout; // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n\n    var itemSeparator = ItemSeparatorComponent && /*#__PURE__*/React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n    var result = !CellRendererComponent ?\n    /*#__PURE__*/\n\n    /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *\n      This comment suppresses an error found when Flow v0.89 was deployed. *\n      To see the error, delete this comment and run Flow. */\n    React.createElement(View, {\n      style: cellStyle,\n      onLayout: onLayout\n    }, element, itemSeparator) : /*#__PURE__*/React.createElement(CellRendererComponent, _extends({}, this.props, {\n      style: cellStyle,\n      onLayout: onLayout\n    }), element, itemSeparator);\n    return /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n      cellKey: this.props.cellKey\n    }, result);\n  }\n\n}\n\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n\n  return trace;\n}\n\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;","map":{"version":3,"names":["_createForOfIteratorHelperLoose","_extends","_objectSpread","Batchinator","FillRateHelper","findNodeHandle","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","flatten","infoLog","invariant","keyExtractor","defaultKeyExtractor","computeWindowedRenderLimits","React","VirtualizedListCellContextProvider","VirtualizedListContext","VirtualizedListContextProvider","__DEV__","process","env","NODE_ENV","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onEndReachedThresholdOrDefault","onEndReachedThreshold","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","VirtualizedList","PureComponent","scrollToEnd","params","animated","veryLast","props","getItemCount","data","frame","_getFrameMetricsApprox","offset","Math","max","length","_footerLength","_scrollMetrics","visibleLength","_scrollRef","scrollTo","console","warn","x","y","scrollToIndex","_this$props","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","scrollToItem","item","_this$props2","getItem","itemCount","_index","scrollToOffset","recordInteraction","_nestedChildLists","forEach","childList","ref","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","flashScrollIndicators","getScrollResponder","getScrollableNode","getScrollRef","setNativeProps","_getCellKey","_this$context","context","cellKey","_getListKey","listKey","_getDebugInfo","_this$context2","parent","debugInfo","hasMore","_hasMore","constructor","_props","_this$props$updateCel","_getScrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","getOutermostParentListRef","_getNestedChildState","key","existingChildData","get","state","_registerAsNestedChild","childListsInCell","_cellKeysToChildListKeys","Set","add","set","error","describeNestedLists","_hasInteracted","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","Map","_frames","_hasDoneInitialScroll","_hasWarned","_headerLength","_hiPriInProgress","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","timestamp","velocity","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","createElement","_props$refreshing","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_triggerRemeasureForChildListsInCell","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","_this$_convertParentS","perf","prevDt","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","_this$props3","_onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_this$_scrollMetrics","distanceFromEnd","renderAhead","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","_iterator","_step","done","childKey","value","_createViewToken","isViewable","_this$props4","_keyExtractor","_getFrameMetrics","_this$props5","__isNative","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","storedState","getNestedChildState","frames","invertedWheelEventHandler","ev","inverted","node","scrollLeft","deltaX","wheelDeltaX","scrollTop","deltaY","wheelDeltaY","preventDefault","componentDidMount","registerAsNestedChild","parentDebugInfo","setupWebWheelHandler","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","teardownWebWheelHandler","addEventListener","setTimeout","removeEventListener","getDerivedStateFromProps","prevState","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this","_this$props6","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","_loop","has","CellRenderer","undefined","fillRateHelper","onUpdateSeparators","_onCellLayout","onUnmount","parentProps","_ref","disableVirtualization","nestedContext","String","type","displayName","render","flatStyles","contentContainerStyle","flexWrap","_this$props7","ListEmptyComponent","ListFooterComponent","_this$props8","styles","horizontallyInverted","verticallyInverted","element","isValidElement","style","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_this$state","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","_initBlock","firstSpace","lastFrame","endFrame","tailSpacerLength","_element","cloneElement","event","_element2","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","getScrollMetrics","renderScrollComponent","ret","debug","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props9","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","_iterator2","_step2","measureLayout","scrollMetrics","metricsChanged","_iterator3","_step3","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props10","onEndReached","_this$_scrollMetrics2","threshold","_this$state2","_this$_scrollMetrics3","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","contextType","Component","arguments","separatorProps","highlighted","leadingItem","_separators","highlight","_this$props11","unhighlight","_this$props12","updateProps","select","_this$props13","_renderElement","renderItem","ListItemComponent","separators","_this$props14","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","result","trace","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor"],"sources":["/Users/ilkwon_choi/Downloads/Alcohol/FrontEnd/alcohol-app/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js"],"sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport Batchinator from '../Batchinator';\nimport FillRateHelper from '../FillRateHelper';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport View from '../../../exports/View';\nimport ViewabilityHelper from '../ViewabilityHelper';\nvar flattenStyle = StyleSheet.flatten;\nimport infoLog from '../infoLog';\nimport invariant from 'fbjs/lib/invariant';\nimport { keyExtractor as defaultKeyExtractor, computeWindowedRenderLimits } from '../VirtualizeUtils';\nimport * as React from 'react';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n} // initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\n\n\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n} // maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\n\n\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n} // onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\n\n\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n} // scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\n\n\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n} // windowSizeOrDefault(this.props.windowSize)\n\n\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\n\n\nclass VirtualizedList extends React.PureComponent {\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n    var frame = this._getFrameMetricsApprox(veryLast);\n\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  } // scrollToIndex may be janky without getItemLayout prop\n\n\n  scrollToIndex(params) {\n    var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index\n      });\n      return;\n    }\n\n    var frame = this._getFrameMetricsApprox(index);\n\n    var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  } // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n\n\n  scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n\n\n  scrollToOffset(params) {\n    var animated = params.animated,\n        offset = params.offset;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n\n\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey() {\n    var _this$context;\n\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  }\n\n  _getListKey() {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo() {\n    var _this$context2;\n\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n    };\n  }\n\n  hasMore() {\n    return this._hasMore;\n  }\n\n  constructor(_props) {\n    var _this$props$updateCel;\n\n    super(_props);\n\n    this._getScrollMetrics = () => {\n      return this._scrollMetrics;\n    };\n\n    this._getOutermostParentListRef = () => {\n      if (this._isNestedWithSameOrientation()) {\n        return this.context.getOutermostParentListRef();\n      } else {\n        return this;\n      }\n    };\n\n    this._getNestedChildState = key => {\n      var existingChildData = this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    this._registerAsNestedChild = childList => {\n      // Register the mapping between this child key and the cellKey for its cell\n      var childListsInCell = this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = this._nestedChildLists.get(childList.key);\n\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          // We're called from the child's componentDidMount, so it's safe to\n          // read the child's props here (albeit weird).\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n\n      this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    this._unregisterAsNestedChild = childList => {\n      this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    this._onUpdateSeparators = (keys, newProps) => {\n      keys.forEach(key => {\n        var ref = key != null && this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\n\n    this._averageCellLength = 0;\n    this._cellKeysToChildListKeys = new Map();\n    this._cellRefs = {};\n    this._frames = {};\n    this._footerLength = 0;\n    this._hasDoneInitialScroll = false;\n    this._hasInteracted = false;\n    this._hasMore = false;\n    this._hasWarned = {};\n    this._headerLength = 0;\n    this._hiPriInProgress = false;\n    this._highestMeasuredFrameIndex = 0;\n    this._indicesToKeys = new Map();\n    this._nestedChildLists = new Map();\n    this._offsetFromParentVirtualizedList = 0;\n    this._prevParentOffset = 0;\n    this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    this._scrollRef = null;\n    this._sentEndForContentLength = 0;\n    this._totalCellLength = 0;\n    this._totalCellsMeasured = 0;\n    this._viewabilityTuples = [];\n\n    this._captureScrollRef = ref => {\n      this._scrollRef = ref;\n    };\n\n    this._defaultRenderScrollComponent = props => {\n      var onRefresh = props.onRefresh;\n\n      if (this._isNestedWithSameOrientation()) {\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return (\n          /*#__PURE__*/\n          // $FlowFixMe[prop-missing] Invalid prop usage\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl, {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n\n    this._onCellUnmount = cellKey => {\n      var curr = this._frames[cellKey];\n\n      if (curr) {\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n\n    this._onLayout = e => {\n      if (this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        this.measureLayoutRelativeToContainingList();\n      } else {\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\n      }\n\n      this.props.onLayout && this.props.onLayout(e);\n\n      this._scheduleCellsToRenderUpdate();\n\n      this._maybeCallOnEndReached();\n    };\n\n    this._onLayoutEmpty = e => {\n      this.props.onLayout && this.props.onLayout(e);\n    };\n\n    this._onLayoutFooter = e => {\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\n    };\n\n    this._onLayoutHeader = e => {\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\n    };\n\n    this._onContentSizeChange = (width, height) => {\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasDoneInitialScroll) {\n        if (this.props.contentOffset == null) {\n          this.scrollToIndex({\n            animated: false,\n            index: this.props.initialScrollIndex\n          });\n        }\n\n        this._hasDoneInitialScroll = true;\n      }\n\n      if (this.props.onContentSizeChange) {\n        this.props.onContentSizeChange(width, height);\n      }\n\n      this._scrollMetrics.contentLength = this._selectLength({\n        height,\n        width\n      });\n\n      this._scheduleCellsToRenderUpdate();\n\n      this._maybeCallOnEndReached();\n    };\n\n    this._convertParentScrollMetrics = metrics => {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList; // Child's visible length is the same as its parent's\n\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - this._scrollMetrics.offset;\n      var contentLength = this._scrollMetrics.contentLength;\n      return {\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset\n      };\n    };\n\n    this._onScroll = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (this.props.onScroll) {\n        this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - this._scrollMetrics.offset;\n\n      if (this._isNestedWithSameOrientation()) {\n        if (this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n\n        var _this$_convertParentS = this._convertParentScrollMetrics({\n          visibleLength,\n          offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt,\n          prevDt: this._scrollMetrics.dt,\n          contentLength\n        });\n        this._hasWarned.perf = true;\n      }\n\n      this._scrollMetrics = {\n        contentLength,\n        dt,\n        dOffset,\n        offset,\n        timestamp,\n        velocity,\n        visibleLength\n      };\n\n      this._updateViewableItems(this.props.data);\n\n      if (!this.props) {\n        return;\n      }\n\n      this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        this._fillRateHelper.activate();\n      }\n\n      this._computeBlankness();\n\n      this._scheduleCellsToRenderUpdate();\n    };\n\n    this._onScrollBeginDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      this._hasInteracted = true;\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n\n    this._onScrollEndDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollEndDrag(e);\n      });\n\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\n      }\n\n      this._computeBlankness();\n\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n\n    this._onMomentumScrollBegin = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollBegin(e);\n      });\n\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n\n    this._onMomentumScrollEnd = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollEnd(e);\n      });\n\n      this._scrollMetrics.velocity = 0;\n\n      this._computeBlankness();\n\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n\n    this._updateCellsToRender = () => {\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          getItemCount = _this$props3.getItemCount,\n          _onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(_onEndReachedThreshold);\n\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n      this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      this.setState(state => {\n        var newState;\n        var _this$_scrollMetrics = this._scrollMetrics,\n            contentLength = _this$_scrollMetrics.contentLength,\n            offset = _this$_scrollMetrics.offset,\n            visibleLength = _this$_scrollMetrics.visibleLength;\n\n        if (!isVirtualizationDisabled) {\n          // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n          // and wipe out the initialNumToRender rendered elements.\n          // So let's wait until the scroll view metrics have been set up. And until then,\n          // we will trust the initialNumToRender suggestion\n          if (visibleLength > 0 && contentLength > 0) {\n            // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n            // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n            // So let's wait until we've scrolled the view to the right place. And until then,\n            // we will trust the initialScrollIndex suggestion.\n            if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(this.props.data, this.props.getItemCount, maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch), windowSizeOrDefault(this.props.windowSize), state, this._getFrameMetricsApprox, this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch) : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last; // If some cell in the new state has a child list in it, we should only render\n          // up through that item, so that we give that list a chance to render.\n          // Otherwise there's churn from multiple child lists mounting and un-mounting\n          // their items.\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false; // For each cell, need to check whether any child list in it has more elements to render\n\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n\n              var childList = this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore) {\n              // $FlowFixMe[incompatible-use] The newState definitely exists past \"if (newState &&\"\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n\n        return newState;\n      });\n    };\n\n    this._createViewToken = (index, isViewable) => {\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          getItem = _this$props4.getItem;\n      var item = getItem(data, index);\n      return {\n        index,\n        item,\n        key: this._keyExtractor(item, index),\n        isViewable\n      };\n    };\n\n    this._getFrameMetricsApprox = index => {\n      var frame = this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var getItemLayout = this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: this._averageCellLength,\n          offset: this._averageCellLength * index\n        };\n      }\n    };\n\n    this._getFrameMetrics = index => {\n      var _this$props5 = this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount,\n          getItemLayout = _this$props5.getItemLayout;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && this._frames[this._keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n      /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.63 was deployed. To see the error\n       * delete this comment and run Flow. */\n\n\n      return frame;\n    };\n\n    invariant( // $FlowFixMe[prop-missing]\n    !_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(_props.windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n        onViewableItemsChanged: pair.onViewableItemsChanged\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        // $FlowFixMe[incompatible-call]\n        onViewableItemsChanged: this.props.onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last: Math.min(this.props.getItemCount(this.props.data), (this.props.initialScrollIndex || 0) + initialNumToRenderOrDefault(this.props.initialNumToRender)) - 1\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      var storedState = this.context.getNestedChildState(this._getListKey());\n\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    // For issue https://github.com/necolas/react-native-web/issues/995\n\n\n    this.invertedWheelEventHandler = ev => {\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\n        var node = this._scrollRef.getScrollableNode();\n\n        if (this.props.horizontal) {\n          node.scrollLeft -= ev.deltaX || ev.wheelDeltaX;\n        } else {\n          node.scrollTop -= ev.deltaY || ev.wheelDeltaY;\n        }\n\n        ev.preventDefault();\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo\n      });\n    } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n    this.setupWebWheelHandler();\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames\n        }\n      });\n    }\n\n    this._updateViewableItems(null);\n\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n\n    this._fillRateHelper.deactivateAndFlush(); // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n    this.teardownWebWheelHandler();\n  } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n  setupWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n    } else {\n      setTimeout(() => this.setupWebWheelHandler(), 50);\n      return;\n    }\n  } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n  teardownWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n    }\n  }\n\n  static getDerivedStateFromProps(newProps, prevState) {\n    var data = newProps.data,\n        getItemCount = newProps.getItemCount;\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(newProps.maxToRenderPerBatch); // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n\n    return {\n      first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n    };\n  }\n\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this = this;\n\n    var _this$props6 = this.props,\n        CellRendererComponent = _this$props6.CellRendererComponent,\n        ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n        data = _this$props6.data,\n        getItem = _this$props6.getItem,\n        getItemCount = _this$props6.getItemCount,\n        horizontal = _this$props6.horizontal;\n    var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n\n    var _loop = function _loop(ii) {\n      var item = getItem(data, ii);\n\n      var key = _this._keyExtractor(item, ii);\n\n      _this._indicesToKeys.set(ii, key);\n\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, {\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        cellKey: key,\n        fillRateHelper: _this._fillRateHelper,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this._onUpdateSeparators,\n        onLayout: e => _this._onCellLayout(e, key, ii),\n        onUnmount: _this._onCellUnmount,\n        parentProps: _this.props,\n        ref: _ref => {\n          _this._cellRefs[key] = _ref;\n        }\n      }));\n      prevCellKey = key;\n    };\n\n    for (var ii = first; ii <= last; ii++) {\n      _loop(ii);\n    }\n  }\n\n  _isVirtualizationDisabled() {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n  }\n\n  _keyExtractor(item, index) {\n    if (this.props.keyExtractor != null) {\n      return this.props.keyExtractor(item, index);\n    }\n\n    var key = defaultKeyExtractor(item, index);\n\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n\n    return key;\n  }\n\n  render() {\n    if (__DEV__) {\n      var flatStyles = flattenStyle(this.props.contentContainerStyle);\n\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n    }\n\n    var _this$props7 = this.props,\n        ListEmptyComponent = _this$props7.ListEmptyComponent,\n        ListFooterComponent = _this$props7.ListFooterComponent,\n        ListHeaderComponent = _this$props7.ListHeaderComponent;\n    var _this$props8 = this.props,\n        data = _this$props8.data,\n        horizontal = _this$props8.horizontal;\n\n    var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n\n      var element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListHeaderComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle)\n      }, // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      element)));\n    }\n\n    var itemCount = this.props.getItemCount(data);\n\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n\n      var spacerKey = this._getSpacerKey(!horizontal);\n\n      var lastInitialIndex = this.props.initialScrollIndex ? -1 : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n      var _this$state = this.state,\n          first = _this$state.first,\n          last = _this$state.last;\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n      var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        var insertedStickySpacer = false;\n\n        if (stickyIndicesFromProps.size > 0) {\n          var stickyOffset = ListHeaderComponent ? 1 : 0; // See if there are any sticky headers in the virtualized space that we need to render.\n\n          for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n              var stickyBlock = this._getFrameMetricsApprox(ii);\n\n              var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_lead\",\n                style: {\n                  [spacerKey]: leadSpace\n                }\n              }));\n\n              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n              var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_trail\",\n                style: {\n                  [spacerKey]: trailSpace\n                }\n              }));\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n\n        if (!insertedStickySpacer) {\n          var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n          var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n          cells.push( /*#__PURE__*/React.createElement(View, {\n            key: \"$lead_spacer\",\n            style: {\n              [spacerKey]: firstSpace\n            }\n          }));\n        }\n      }\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        var lastFrame = this._getFrameMetricsApprox(last); // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n\n\n        var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n        var endFrame = this._getFrameMetricsApprox(end);\n\n        var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n        cells.push( /*#__PURE__*/React.createElement(View, {\n          key: \"$tail_spacer\",\n          style: {\n            [spacerKey]: tailSpacerLength\n          }\n        }));\n      }\n    } else if (ListEmptyComponent) {\n      var _element = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListEmptyComponent, null);\n\n      cells.push( /*#__PURE__*/React.cloneElement(_element, {\n        key: '$empty',\n        onLayout: event => {\n          this._onLayoutEmpty(event);\n\n          if (_element.props.onLayout) {\n            _element.props.onLayout(event);\n          }\n        },\n        style: StyleSheet.compose(inversionStyle, _element.props.style)\n      }));\n    }\n\n    if (ListFooterComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListFooterComponent, null);\n\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle)\n      }, // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element2)));\n    }\n\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n\n    this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n        debugInfo: this._getDebugInfo()\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }*/\n\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n        data = _this$props9.data,\n        extraData = _this$props9.extraData;\n\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    } // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n\n\n    var hiPriInProgress = this._hiPriInProgress;\n\n    this._scheduleCellsToRenderUpdate(); // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n\n\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n  }\n\n  _onCellLayout(e, cellKey, index) {\n    var layout = e.nativeEvent.layout;\n    var next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true\n    };\n    var curr = this._frames[cellKey];\n\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n\n    this._updateViewableItems(this.props.data);\n  }\n\n  _triggerRemeasureForChildListsInCell(cellKey) {\n    var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n\n    if (childListKeys) {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n        var childKey = _step2.value;\n\n        var childList = this._nestedChildLists.get(childKey);\n\n        childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList() {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      } // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n\n\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({\n          x,\n          y\n        });\n        this._scrollMetrics.contentLength = this._selectLength({\n          width,\n          height\n        });\n\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\n\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\n\n        if (metricsChanged) {\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset; // If metrics of the scrollView changed, then we triggered remeasure for child list\n          // to ensure VirtualizedList has the right information.\n\n          this._cellKeysToChildListKeys.forEach(childListKeys => {\n            if (childListKeys) {\n              for (var _iterator3 = _createForOfIteratorHelperLoose(childListKeys), _step3; !(_step3 = _iterator3()).done;) {\n                var childKey = _step3.value;\n\n                var childList = this._nestedChildLists.get(childKey);\n\n                childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n              }\n            }\n          });\n        }\n      }, error => {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  }\n\n  _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  }\n\n  _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n\n\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n\n    var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n    var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\n      key: 'f' + ii,\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n        top: f.offset * normalize,\n        height: f.length * normalize\n      }]\n    })), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  }\n\n  _selectLength(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    var _this$props10 = this.props,\n        data = _this$props10.data,\n        getItemCount = _this$props10.getItemCount,\n        onEndReached = _this$props10.onEndReached,\n        onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n    var threshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n\n    if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd\n      });\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _scheduleCellsToRenderUpdate() {\n    var _this$state2 = this.state,\n        first = _this$state2.first,\n        last = _this$state2.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n    var scrollingThreshold = onEndReachedThreshold * visibleLength / 2; // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n\n    if (first > 0) {\n      var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n      hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n    } // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n\n\n    if (last < itemCount - 1) {\n      var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n    } // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n\n\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true; // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._updateCellsToRender();\n\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _updateViewableItems(data) {\n    var getItemCount = this.props.getItemCount;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(getItemCount(data), this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, this.state);\n    });\n  }\n\n}\n\nVirtualizedList.contextType = VirtualizedListContext;\n\nclass CellRenderer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: this.props.item\n      }\n    };\n    this._separators = {\n      highlight: () => {\n        var _this$props11 = this.props,\n            cellKey = _this$props11.cellKey,\n            prevCellKey = _this$props11.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: () => {\n        var _this$props12 = this.props,\n            cellKey = _this$props12.cellKey,\n            prevCellKey = _this$props12.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: (select, newProps) => {\n        var _this$props13 = this.props,\n            cellKey = _this$props13.cellKey,\n            prevCellKey = _this$props13.prevCellKey;\n        this.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(props, prevState) {\n    return {\n      separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n        leadingItem: props.item\n      })\n    };\n  } // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n\n\n  updateSeparatorProps(newProps) {\n    this.setState(state => ({\n      separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return /*#__PURE__*/React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n\n    invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n  }\n\n  render() {\n    var _this$props14 = this.props,\n        CellRendererComponent = _this$props14.CellRendererComponent,\n        ItemSeparatorComponent = _this$props14.ItemSeparatorComponent,\n        fillRateHelper = _this$props14.fillRateHelper,\n        horizontal = _this$props14.horizontal,\n        item = _this$props14.item,\n        index = _this$props14.index,\n        inversionStyle = _this$props14.inversionStyle,\n        parentProps = _this$props14.parentProps;\n    var renderItem = parentProps.renderItem,\n        getItemLayout = parentProps.getItemLayout,\n        ListItemComponent = parentProps.ListItemComponent;\n\n    var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n    var onLayout =\n    /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the\n     * error delete this comment and run Flow. */\n    getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout; // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n\n    var itemSeparator = ItemSeparatorComponent && /*#__PURE__*/React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n    var result = !CellRendererComponent ?\n    /*#__PURE__*/\n\n    /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *\n      This comment suppresses an error found when Flow v0.89 was deployed. *\n      To see the error, delete this comment and run Flow. */\n    React.createElement(View, {\n      style: cellStyle,\n      onLayout: onLayout\n    }, element, itemSeparator) : /*#__PURE__*/React.createElement(CellRendererComponent, _extends({}, this.props, {\n      style: cellStyle,\n      onLayout: onLayout\n    }), element, itemSeparator);\n    return /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n      cellKey: this.props.cellKey\n    }, result);\n  }\n\n}\n\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n\n  return trace;\n}\n\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;"],"mappings":"AAAA,OAAOA,+BAAP,MAA4C,uDAA5C;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,IAAIC,YAAY,GAAGH,UAAU,CAACI,OAA9B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,YAAY,IAAIC,mBAAzB,EAA8CC,2BAA9C,QAAiF,oBAAjF;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kCAAT,EAA6CC,sBAA7C,EAAqEC,8BAArE,QAA2G,6BAA3G;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAvC;;AAEA,IAAIC,gBAAgB,GAAG,KAAvB;AACA,IAAIC,yBAAyB,GAAG,EAAhC;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,mBAAT,CAA6BC,UAA7B,EAAyC;EACvC,OAAOA,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+CA,UAA/C,GAA4D,KAAnE;AACD,C,CAAC;;;AAGF,SAASC,2BAAT,CAAqCC,kBAArC,EAAyD;EACvD,OAAOA,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+DA,kBAA/D,GAAoF,EAA3F;AACD,C,CAAC;;;AAGF,SAASC,4BAAT,CAAsCC,mBAAtC,EAA2D;EACzD,OAAOA,mBAAmB,KAAK,IAAxB,IAAgCA,mBAAmB,KAAK,KAAK,CAA7D,GAAiEA,mBAAjE,GAAuF,EAA9F;AACD,C,CAAC;;;AAGF,SAASC,8BAAT,CAAwCC,qBAAxC,EAA+D;EAC7D,OAAOA,qBAAqB,KAAK,IAA1B,IAAkCA,qBAAqB,KAAK,KAAK,CAAjE,GAAqEA,qBAArE,GAA6F,CAApG;AACD,C,CAAC;;;AAGF,SAASC,4BAAT,CAAsCC,mBAAtC,EAA2D;EACzD,OAAOA,mBAAmB,KAAK,IAAxB,IAAgCA,mBAAmB,KAAK,KAAK,CAA7D,GAAiEA,mBAAjE,GAAuF,EAA9F;AACD,C,CAAC;;;AAGF,SAASC,mBAAT,CAA6BC,UAA7B,EAAyC;EACvC,OAAOA,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+CA,UAA/C,GAA4D,EAAnE;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,MAAMC,eAAN,SAA8BtB,KAAK,CAACuB,aAApC,CAAkD;EAChD;EACAC,WAAW,CAACC,MAAD,EAAS;IAClB,IAAIC,QAAQ,GAAGD,MAAM,GAAGA,MAAM,CAACC,QAAV,GAAqB,IAA1C;IACA,IAAIC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,IAAnC,IAA2C,CAA1D;;IAEA,IAAIC,KAAK,GAAG,KAAKC,sBAAL,CAA4BL,QAA5B,CAAZ;;IAEA,IAAIM,MAAM,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYJ,KAAK,CAACE,MAAN,GAAeF,KAAK,CAACK,MAArB,GAA8B,KAAKC,aAAnC,GAAmD,KAAKC,cAAL,CAAoBC,aAAnF,CAAb;;IAEA,IAAI,KAAKC,UAAL,IAAmB,IAAvB,EAA6B;MAC3B;IACD;;IAED,IAAI,KAAKA,UAAL,CAAgBC,QAAhB,IAA4B,IAAhC,EAAsC;MACpCC,OAAO,CAACC,IAAR,CAAa,0EAA0E,iEAA1E,GAA8I,4DAA3J;MACA;IACD;;IAED,KAAKH,UAAL,CAAgBC,QAAhB,CAAyB/B,mBAAmB,CAAC,KAAKkB,KAAL,CAAWjB,UAAZ,CAAnB,GAA6C;MACpEiC,CAAC,EAAEX,MADiE;MAEpEP;IAFoE,CAA7C,GAGrB;MACFmB,CAAC,EAAEZ,MADD;MAEFP;IAFE,CAHJ;EAOD,CA1B+C,CA0B9C;;;EAGFoB,aAAa,CAACrB,MAAD,EAAS;IACpB,IAAIsB,WAAW,GAAG,KAAKnB,KAAvB;IAAA,IACIE,IAAI,GAAGiB,WAAW,CAACjB,IADvB;IAAA,IAEInB,UAAU,GAAGoC,WAAW,CAACpC,UAF7B;IAAA,IAGIkB,YAAY,GAAGkB,WAAW,CAAClB,YAH/B;IAAA,IAIImB,aAAa,GAAGD,WAAW,CAACC,aAJhC;IAAA,IAKIC,qBAAqB,GAAGF,WAAW,CAACE,qBALxC;IAMA,IAAIvB,QAAQ,GAAGD,MAAM,CAACC,QAAtB;IAAA,IACIwB,KAAK,GAAGzB,MAAM,CAACyB,KADnB;IAAA,IAEIC,UAAU,GAAG1B,MAAM,CAAC0B,UAFxB;IAAA,IAGIC,YAAY,GAAG3B,MAAM,CAAC2B,YAH1B;IAIAxD,SAAS,CAACsD,KAAK,IAAI,CAAV,EAAa,iDAAiDA,KAAjD,GAAyD,mBAAtE,CAAT;IACAtD,SAAS,CAACiC,YAAY,CAACC,IAAD,CAAZ,IAAsB,CAAvB,EAA0B,6CAA6CD,YAAY,CAACC,IAAD,CAAzD,GAAkE,mBAA5F,CAAT;IACAlC,SAAS,CAACsD,KAAK,GAAGrB,YAAY,CAACC,IAAD,CAArB,EAA6B,iDAAiDoB,KAAjD,GAAyD,kBAAzD,IAA+ErB,YAAY,CAACC,IAAD,CAAZ,GAAqB,CAApG,CAA7B,CAAT;;IAEA,IAAI,CAACkB,aAAD,IAAkBE,KAAK,GAAG,KAAKG,0BAAnC,EAA+D;MAC7DzD,SAAS,CAAC,CAAC,CAACqD,qBAAH,EAA0B,8FAA8F,yFAAxH,CAAT;MACAA,qBAAqB,CAAC;QACpBK,iBAAiB,EAAE,KAAKC,kBADJ;QAEpBC,yBAAyB,EAAE,KAAKH,0BAFZ;QAGpBH;MAHoB,CAAD,CAArB;MAKA;IACD;;IAED,IAAInB,KAAK,GAAG,KAAKC,sBAAL,CAA4BkB,KAA5B,CAAZ;;IAEA,IAAIjB,MAAM,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYJ,KAAK,CAACE,MAAN,GAAe,CAACmB,YAAY,IAAI,CAAjB,KAAuB,KAAKd,cAAL,CAAoBC,aAApB,GAAoCR,KAAK,CAACK,MAAjE,CAA3B,KAAwGe,UAAU,IAAI,CAAtH,CAAb;;IAEA,IAAI,KAAKX,UAAL,IAAmB,IAAvB,EAA6B;MAC3B;IACD;;IAED,IAAI,KAAKA,UAAL,CAAgBC,QAAhB,IAA4B,IAAhC,EAAsC;MACpCC,OAAO,CAACC,IAAR,CAAa,0EAA0E,iEAA1E,GAA8I,4DAA3J;MACA;IACD;;IAED,KAAKH,UAAL,CAAgBC,QAAhB,CAAyB9B,UAAU,GAAG;MACpCiC,CAAC,EAAEX,MADiC;MAEpCP;IAFoC,CAAH,GAG/B;MACFmB,CAAC,EAAEZ,MADD;MAEFP;IAFE,CAHJ;EAOD,CA1E+C,CA0E9C;EACF;;;EAGA+B,YAAY,CAAChC,MAAD,EAAS;IACnB,IAAIiC,IAAI,GAAGjC,MAAM,CAACiC,IAAlB;IACA,IAAIC,YAAY,GAAG,KAAK/B,KAAxB;IAAA,IACIE,IAAI,GAAG6B,YAAY,CAAC7B,IADxB;IAAA,IAEI8B,OAAO,GAAGD,YAAY,CAACC,OAF3B;IAAA,IAGI/B,YAAY,GAAG8B,YAAY,CAAC9B,YAHhC;IAIA,IAAIgC,SAAS,GAAGhC,YAAY,CAACC,IAAD,CAA5B;;IAEA,KAAK,IAAIgC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGD,SAA9B,EAAyCC,MAAM,EAA/C,EAAmD;MACjD,IAAIF,OAAO,CAAC9B,IAAD,EAAOgC,MAAP,CAAP,KAA0BJ,IAA9B,EAAoC;QAClC,KAAKZ,aAAL,CAAmB9D,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKyC,MAAL,CAAd,EAA4B,EAA5B,EAAgC;UAC9DyB,KAAK,EAAEY;QADuD,CAAhC,CAAhC;QAGA;MACD;IACF;EACF;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAGEC,cAAc,CAACtC,MAAD,EAAS;IACrB,IAAIC,QAAQ,GAAGD,MAAM,CAACC,QAAtB;IAAA,IACIO,MAAM,GAAGR,MAAM,CAACQ,MADpB;;IAGA,IAAI,KAAKO,UAAL,IAAmB,IAAvB,EAA6B;MAC3B;IACD;;IAED,IAAI,KAAKA,UAAL,CAAgBC,QAAhB,IAA4B,IAAhC,EAAsC;MACpCC,OAAO,CAACC,IAAR,CAAa,0EAA0E,iEAA1E,GAA8I,4DAA3J;MACA;IACD;;IAED,KAAKH,UAAL,CAAgBC,QAAhB,CAAyB/B,mBAAmB,CAAC,KAAKkB,KAAL,CAAWjB,UAAZ,CAAnB,GAA6C;MACpEiC,CAAC,EAAEX,MADiE;MAEpEP;IAFoE,CAA7C,GAGrB;MACFmB,CAAC,EAAEZ,MADD;MAEFP;IAFE,CAHJ;EAOD;;EAEDsC,iBAAiB,GAAG;IAClB,KAAKC,iBAAL,CAAuBC,OAAvB,CAA+BC,SAAS,IAAI;MAC1CA,SAAS,CAACC,GAAV,IAAiBD,SAAS,CAACC,GAAV,CAAcJ,iBAAd,EAAjB;IACD,CAFD;;IAIA,KAAKK,kBAAL,CAAwBH,OAAxB,CAAgCI,CAAC,IAAI;MACnCA,CAAC,CAACC,iBAAF,CAAoBP,iBAApB;IACD,CAFD;;IAIA,KAAKQ,oBAAL,CAA0B,KAAK5C,KAAL,CAAWE,IAArC;EACD;;EAED2C,qBAAqB,GAAG;IACtB,IAAI,KAAKjC,UAAL,IAAmB,IAAvB,EAA6B;MAC3B;IACD;;IAED,KAAKA,UAAL,CAAgBiC,qBAAhB;EACD;EACD;AACF;AACA;AACA;AACA;;;EAGEC,kBAAkB,GAAG;IACnB,IAAI,KAAKlC,UAAL,IAAmB,KAAKA,UAAL,CAAgBkC,kBAAvC,EAA2D;MACzD,OAAO,KAAKlC,UAAL,CAAgBkC,kBAAhB,EAAP;IACD;EACF;;EAEDC,iBAAiB,GAAG;IAClB,IAAI,KAAKnC,UAAL,IAAmB,KAAKA,UAAL,CAAgBmC,iBAAvC,EAA0D;MACxD,OAAO,KAAKnC,UAAL,CAAgBmC,iBAAhB,EAAP;IACD,CAFD,MAEO;MACL,OAAOxF,cAAc,CAAC,KAAKqD,UAAN,CAArB;IACD;EACF;;EAEDoC,YAAY,GAAG;IACb,IAAI,KAAKpC,UAAL,IAAmB,KAAKA,UAAL,CAAgBoC,YAAvC,EAAqD;MACnD,OAAO,KAAKpC,UAAL,CAAgBoC,YAAhB,EAAP;IACD,CAFD,MAEO;MACL,OAAO,KAAKpC,UAAZ;IACD;EACF;;EAEDqC,cAAc,CAACjD,KAAD,EAAQ;IACpB,IAAI,KAAKY,UAAT,EAAqB;MACnB,KAAKA,UAAL,CAAgBqC,cAAhB,CAA+BjD,KAA/B;IACD;EACF;;EAEDkD,WAAW,GAAG;IACZ,IAAIC,aAAJ;;IAEA,OAAO,CAAC,CAACA,aAAa,GAAG,KAAKC,OAAtB,KAAkC,IAAlC,GAAyC,KAAK,CAA9C,GAAkDD,aAAa,CAACE,OAAjE,KAA6E,UAApF;EACD;;EAEDC,WAAW,GAAG;IACZ,OAAO,KAAKtD,KAAL,CAAWuD,OAAX,IAAsB,KAAKL,WAAL,EAA7B;EACD;;EAEDM,aAAa,GAAG;IACd,IAAIC,cAAJ;;IAEA,OAAO;MACLF,OAAO,EAAE,KAAKD,WAAL,EADJ;MAELD,OAAO,EAAE,KAAKH,WAAL,EAFJ;MAGLnE,UAAU,EAAED,mBAAmB,CAAC,KAAKkB,KAAL,CAAWjB,UAAZ,CAH1B;MAIL2E,MAAM,EAAE,CAACD,cAAc,GAAG,KAAKL,OAAvB,KAAmC,IAAnC,GAA0C,KAAK,CAA/C,GAAmDK,cAAc,CAACE;IAJrE,CAAP;EAMD;;EAEDC,OAAO,GAAG;IACR,OAAO,KAAKC,QAAZ;EACD;;EAEDC,WAAW,CAACC,MAAD,EAAS;IAClB,IAAIC,qBAAJ;;IAEA,MAAMD,MAAN;;IAEA,KAAKE,iBAAL,GAAyB,MAAM;MAC7B,OAAO,KAAKvD,cAAZ;IACD,CAFD;;IAIA,KAAKwD,0BAAL,GAAkC,MAAM;MACtC,IAAI,KAAKC,4BAAL,EAAJ,EAAyC;QACvC,OAAO,KAAKf,OAAL,CAAagB,yBAAb,EAAP;MACD,CAFD,MAEO;QACL,OAAO,IAAP;MACD;IACF,CAND;;IAQA,KAAKC,oBAAL,GAA4BC,GAAG,IAAI;MACjC,IAAIC,iBAAiB,GAAG,KAAKlC,iBAAL,CAAuBmC,GAAvB,CAA2BF,GAA3B,CAAxB;;MAEA,OAAOC,iBAAiB,IAAIA,iBAAiB,CAACE,KAA9C;IACD,CAJD;;IAMA,KAAKC,sBAAL,GAA8BnC,SAAS,IAAI;MACzC;MACA,IAAIoC,gBAAgB,GAAG,KAAKC,wBAAL,CAA8BJ,GAA9B,CAAkCjC,SAAS,CAACc,OAA5C,KAAwD,IAAIwB,GAAJ,EAA/E;MACAF,gBAAgB,CAACG,GAAjB,CAAqBvC,SAAS,CAAC+B,GAA/B;;MAEA,KAAKM,wBAAL,CAA8BG,GAA9B,CAAkCxC,SAAS,CAACc,OAA5C,EAAqDsB,gBAArD;;MAEA,IAAIJ,iBAAiB,GAAG,KAAKlC,iBAAL,CAAuBmC,GAAvB,CAA2BjC,SAAS,CAAC+B,GAArC,CAAxB;;MAEA,IAAIC,iBAAiB,IAAIA,iBAAiB,CAAC/B,GAAlB,KAA0B,IAAnD,EAAyD;QACvD1B,OAAO,CAACkE,KAAR,CAAc,6DAA6D,sEAA7D,GAAsI,qEAAtI,GAA8MC,mBAAmB,CAAC7H,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKmF,SAAL,CAAd,EAA+B,EAA/B,EAAmC;UAC9R;UACA;UACAxD,UAAU,EAAE,CAAC,CAACwD,SAAS,CAACC,GAAV,CAAcxC,KAAd,CAAoBjB;QAH4P,CAAnC,CAAd,CAA/O;MAKD;;MAED,KAAKsD,iBAAL,CAAuB0C,GAAvB,CAA2BxC,SAAS,CAAC+B,GAArC,EAA0C;QACxC9B,GAAG,EAAED,SAAS,CAACC,GADyB;QAExCiC,KAAK,EAAE;MAFiC,CAA1C;;MAKA,IAAI,KAAKS,cAAT,EAAyB;QACvB3C,SAAS,CAACC,GAAV,CAAcJ,iBAAd;MACD;IACF,CAzBD;;IA2BA,KAAK+C,wBAAL,GAAgC5C,SAAS,IAAI;MAC3C,KAAKF,iBAAL,CAAuB0C,GAAvB,CAA2BxC,SAAS,CAAC+B,GAArC,EAA0C;QACxC9B,GAAG,EAAE,IADmC;QAExCiC,KAAK,EAAElC,SAAS,CAACkC;MAFuB,CAA1C;IAID,CALD;;IAOA,KAAKW,mBAAL,GAA2B,CAACC,IAAD,EAAOC,QAAP,KAAoB;MAC7CD,IAAI,CAAC/C,OAAL,CAAagC,GAAG,IAAI;QAClB,IAAI9B,GAAG,GAAG8B,GAAG,IAAI,IAAP,IAAe,KAAKiB,SAAL,CAAejB,GAAf,CAAzB;QACA9B,GAAG,IAAIA,GAAG,CAACgD,oBAAJ,CAAyBF,QAAzB,CAAP;MACD,CAHD;IAID,CALD;;IAOA,KAAKG,aAAL,GAAqBC,UAAU,IAAIA,UAAU,GAAG,QAAH,GAAc,OAA3D;;IAEA,KAAK/D,kBAAL,GAA0B,CAA1B;IACA,KAAKiD,wBAAL,GAAgC,IAAIe,GAAJ,EAAhC;IACA,KAAKJ,SAAL,GAAiB,EAAjB;IACA,KAAKK,OAAL,GAAe,EAAf;IACA,KAAKnF,aAAL,GAAqB,CAArB;IACA,KAAKoF,qBAAL,GAA6B,KAA7B;IACA,KAAKX,cAAL,GAAsB,KAAtB;IACA,KAAKrB,QAAL,GAAgB,KAAhB;IACA,KAAKiC,UAAL,GAAkB,EAAlB;IACA,KAAKC,aAAL,GAAqB,CAArB;IACA,KAAKC,gBAAL,GAAwB,KAAxB;IACA,KAAKvE,0BAAL,GAAkC,CAAlC;IACA,KAAKwE,cAAL,GAAsB,IAAIN,GAAJ,EAAtB;IACA,KAAKtD,iBAAL,GAAyB,IAAIsD,GAAJ,EAAzB;IACA,KAAKO,gCAAL,GAAwC,CAAxC;IACA,KAAKC,iBAAL,GAAyB,CAAzB;IACA,KAAKzF,cAAL,GAAsB;MACpB0F,aAAa,EAAE,CADK;MAEpBC,OAAO,EAAE,CAFW;MAGpBC,EAAE,EAAE,EAHgB;MAIpBjG,MAAM,EAAE,CAJY;MAKpBkG,SAAS,EAAE,CALS;MAMpBC,QAAQ,EAAE,CANU;MAOpB7F,aAAa,EAAE;IAPK,CAAtB;IASA,KAAKC,UAAL,GAAkB,IAAlB;IACA,KAAK6F,wBAAL,GAAgC,CAAhC;IACA,KAAKC,gBAAL,GAAwB,CAAxB;IACA,KAAKC,mBAAL,GAA2B,CAA3B;IACA,KAAKlE,kBAAL,GAA0B,EAA1B;;IAEA,KAAKmE,iBAAL,GAAyBpE,GAAG,IAAI;MAC9B,KAAK5B,UAAL,GAAkB4B,GAAlB;IACD,CAFD;;IAIA,KAAKqE,6BAAL,GAAqC7G,KAAK,IAAI;MAC5C,IAAI8G,SAAS,GAAG9G,KAAK,CAAC8G,SAAtB;;MAEA,IAAI,KAAK3C,4BAAL,EAAJ,EAAyC;QACvC;QACA,OAAO,aAAa/F,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0BqC,KAA1B,CAApB;MACD,CAHD,MAGO,IAAI8G,SAAJ,EAAe;QACpB,IAAIE,iBAAJ;;QAEAhJ,SAAS,CAAC,OAAOgC,KAAK,CAACiH,UAAb,KAA4B,SAA7B,EAAwC,sFAAsFC,IAAI,CAACC,SAAL,CAAe,CAACH,iBAAiB,GAAGhH,KAAK,CAACiH,UAA3B,MAA2C,IAA3C,IAAmDD,iBAAiB,KAAK,KAAK,CAA9E,GAAkFA,iBAAlF,GAAsG,WAArH,CAAtF,GAA0N,GAAlQ,CAAT;QACA;UACE;UACA;UACA5I,KAAK,CAAC2I,aAAN,CAAoBtJ,UAApB,EAAgCN,QAAQ,CAAC,EAAD,EAAK6C,KAAL,EAAY;YAClDoH,cAAc,EAAEpH,KAAK,CAACoH,cAAN,IAAwB,IAAxB,GAA+B,aAAahJ,KAAK,CAAC2I,aAAN,CAAoBvJ,cAApB,EAAoC;cAC9FyJ,UAAU,EAAEjH,KAAK,CAACiH,UAD4E;cAE9FH,SAAS,EAAEA,SAFmF;cAG9FO,kBAAkB,EAAErH,KAAK,CAACqH;YAHoE,CAApC,CAA5C,GAIXrH,KAAK,CAACoH;UALuC,CAAZ,CAAxC;QAHF;MAWD,CAfM,MAeA;QACL;QACA,OAAO,aAAahJ,KAAK,CAAC2I,aAAN,CAAoBtJ,UAApB,EAAgCuC,KAAhC,CAApB;MACD;IACF,CAzBD;;IA2BA,KAAKsH,cAAL,GAAsBjE,OAAO,IAAI;MAC/B,IAAIkE,IAAI,GAAG,KAAK3B,OAAL,CAAavC,OAAb,CAAX;;MAEA,IAAIkE,IAAJ,EAAU;QACR,KAAK3B,OAAL,CAAavC,OAAb,IAAwBjG,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKmK,IAAL,CAAd,EAA0B,EAA1B,EAA8B;UACjEC,QAAQ,EAAE;QADuD,CAA9B,CAArC;MAGD;IACF,CARD;;IAUA,KAAKC,SAAL,GAAiBC,CAAC,IAAI;MACpB,IAAI,KAAKvD,4BAAL,EAAJ,EAAyC;QACvC;QACA;QACA,KAAKwD,qCAAL;MACD,CAJD,MAIO;QACL,KAAKjH,cAAL,CAAoBC,aAApB,GAAoC,KAAKiH,aAAL,CAAmBF,CAAC,CAACG,WAAF,CAAcC,MAAjC,CAApC;MACD;;MAED,KAAK9H,KAAL,CAAW+H,QAAX,IAAuB,KAAK/H,KAAL,CAAW+H,QAAX,CAAoBL,CAApB,CAAvB;;MAEA,KAAKM,4BAAL;;MAEA,KAAKC,sBAAL;IACD,CAdD;;IAgBA,KAAKC,cAAL,GAAsBR,CAAC,IAAI;MACzB,KAAK1H,KAAL,CAAW+H,QAAX,IAAuB,KAAK/H,KAAL,CAAW+H,QAAX,CAAoBL,CAApB,CAAvB;IACD,CAFD;;IAIA,KAAKS,eAAL,GAAuBT,CAAC,IAAI;MAC1B,KAAKU,oCAAL,CAA0C,KAAKC,iBAAL,EAA1C;;MAEA,KAAK5H,aAAL,GAAqB,KAAKmH,aAAL,CAAmBF,CAAC,CAACG,WAAF,CAAcC,MAAjC,CAArB;IACD,CAJD;;IAMA,KAAKQ,eAAL,GAAuBZ,CAAC,IAAI;MAC1B,KAAK3B,aAAL,GAAqB,KAAK6B,aAAL,CAAmBF,CAAC,CAACG,WAAF,CAAcC,MAAjC,CAArB;IACD,CAFD;;IAIA,KAAKS,oBAAL,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC7C,IAAID,KAAK,GAAG,CAAR,IAAaC,MAAM,GAAG,CAAtB,IAA2B,KAAKzI,KAAL,CAAW0I,kBAAX,IAAiC,IAA5D,IAAoE,KAAK1I,KAAL,CAAW0I,kBAAX,GAAgC,CAApG,IAAyG,CAAC,KAAK7C,qBAAnH,EAA0I;QACxI,IAAI,KAAK7F,KAAL,CAAW2I,aAAX,IAA4B,IAAhC,EAAsC;UACpC,KAAKzH,aAAL,CAAmB;YACjBpB,QAAQ,EAAE,KADO;YAEjBwB,KAAK,EAAE,KAAKtB,KAAL,CAAW0I;UAFD,CAAnB;QAID;;QAED,KAAK7C,qBAAL,GAA6B,IAA7B;MACD;;MAED,IAAI,KAAK7F,KAAL,CAAW4I,mBAAf,EAAoC;QAClC,KAAK5I,KAAL,CAAW4I,mBAAX,CAA+BJ,KAA/B,EAAsCC,MAAtC;MACD;;MAED,KAAK/H,cAAL,CAAoB0F,aAApB,GAAoC,KAAKwB,aAAL,CAAmB;QACrDa,MADqD;QAErDD;MAFqD,CAAnB,CAApC;;MAKA,KAAKR,4BAAL;;MAEA,KAAKC,sBAAL;IACD,CAxBD;;IA0BA,KAAKY,2BAAL,GAAmCC,OAAO,IAAI;MAC5C;MACA,IAAIzI,MAAM,GAAGyI,OAAO,CAACzI,MAAR,GAAiB,KAAK6F,gCAAnC,CAF4C,CAEyB;;MAErE,IAAIvF,aAAa,GAAGmI,OAAO,CAACnI,aAA5B;MACA,IAAI0F,OAAO,GAAGhG,MAAM,GAAG,KAAKK,cAAL,CAAoBL,MAA3C;MACA,IAAI+F,aAAa,GAAG,KAAK1F,cAAL,CAAoB0F,aAAxC;MACA,OAAO;QACLzF,aADK;QAELyF,aAFK;QAGL/F,MAHK;QAILgG;MAJK,CAAP;IAMD,CAbD;;IAeA,KAAK0C,SAAL,GAAiBrB,CAAC,IAAI;MACpB,KAAKrF,iBAAL,CAAuBC,OAAvB,CAA+BC,SAAS,IAAI;QAC1CA,SAAS,CAACC,GAAV,IAAiBD,SAAS,CAACC,GAAV,CAAcuG,SAAd,CAAwBrB,CAAxB,CAAjB;MACD,CAFD;;MAIA,IAAI,KAAK1H,KAAL,CAAWgJ,QAAf,EAAyB;QACvB,KAAKhJ,KAAL,CAAWgJ,QAAX,CAAoBtB,CAApB;MACD;;MAED,IAAInB,SAAS,GAAGmB,CAAC,CAACuB,SAAlB;;MAEA,IAAItI,aAAa,GAAG,KAAKiH,aAAL,CAAmBF,CAAC,CAACG,WAAF,CAAcqB,iBAAjC,CAApB;;MAEA,IAAI9C,aAAa,GAAG,KAAKwB,aAAL,CAAmBF,CAAC,CAACG,WAAF,CAAcsB,WAAjC,CAApB;;MAEA,IAAI9I,MAAM,GAAG,KAAK+I,aAAL,CAAmB1B,CAAC,CAACG,WAAF,CAAcc,aAAjC,CAAb;;MAEA,IAAItC,OAAO,GAAGhG,MAAM,GAAG,KAAKK,cAAL,CAAoBL,MAA3C;;MAEA,IAAI,KAAK8D,4BAAL,EAAJ,EAAyC;QACvC,IAAI,KAAKzD,cAAL,CAAoB0F,aAApB,KAAsC,CAA1C,EAA6C;UAC3C;UACA;UACA;QACD;;QAED,IAAIiD,qBAAqB,GAAG,KAAKR,2BAAL,CAAiC;UAC3DlI,aAD2D;UAE3DN;QAF2D,CAAjC,CAA5B;;QAKAM,aAAa,GAAG0I,qBAAqB,CAAC1I,aAAtC;QACAyF,aAAa,GAAGiD,qBAAqB,CAACjD,aAAtC;QACA/F,MAAM,GAAGgJ,qBAAqB,CAAChJ,MAA/B;QACAgG,OAAO,GAAGgD,qBAAqB,CAAChD,OAAhC;MACD;;MAED,IAAIC,EAAE,GAAG,KAAK5F,cAAL,CAAoB6F,SAApB,GAAgCjG,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYgG,SAAS,GAAG,KAAK7F,cAAL,CAAoB6F,SAA5C,CAAhC,GAAyF,CAAlG;MACA,IAAIC,QAAQ,GAAGH,OAAO,GAAGC,EAAzB;;MAEA,IAAIA,EAAE,GAAG,GAAL,IAAY,KAAK5F,cAAL,CAAoB4F,EAApB,GAAyB,GAArC,IAA4CF,aAAa,GAAG,IAAIzF,aAAhE,IAAiF,CAAC,KAAKmF,UAAL,CAAgBwD,IAAtG,EAA4G;QAC1GvL,OAAO,CAAC,oFAAoF,sFAApF,GAA6K,iDAA9K,EAAiO;UACtOuI,EADsO;UAEtOiD,MAAM,EAAE,KAAK7I,cAAL,CAAoB4F,EAF0M;UAGtOF;QAHsO,CAAjO,CAAP;QAKA,KAAKN,UAAL,CAAgBwD,IAAhB,GAAuB,IAAvB;MACD;;MAED,KAAK5I,cAAL,GAAsB;QACpB0F,aADoB;QAEpBE,EAFoB;QAGpBD,OAHoB;QAIpBhG,MAJoB;QAKpBkG,SALoB;QAMpBC,QANoB;QAOpB7F;MAPoB,CAAtB;;MAUA,KAAKiC,oBAAL,CAA0B,KAAK5C,KAAL,CAAWE,IAArC;;MAEA,IAAI,CAAC,KAAKF,KAAV,EAAiB;QACf;MACD;;MAED,KAAKiI,sBAAL;;MAEA,IAAIzB,QAAQ,KAAK,CAAjB,EAAoB;QAClB,KAAKgD,eAAL,CAAqBC,QAArB;MACD;;MAED,KAAKC,iBAAL;;MAEA,KAAK1B,4BAAL;IACD,CA1ED;;IA4EA,KAAK2B,kBAAL,GAA0BjC,CAAC,IAAI;MAC7B,KAAKrF,iBAAL,CAAuBC,OAAvB,CAA+BC,SAAS,IAAI;QAC1CA,SAAS,CAACC,GAAV,IAAiBD,SAAS,CAACC,GAAV,CAAcmH,kBAAd,CAAiCjC,CAAjC,CAAjB;MACD,CAFD;;MAIA,KAAKjF,kBAAL,CAAwBH,OAAxB,CAAgCsH,KAAK,IAAI;QACvCA,KAAK,CAACjH,iBAAN,CAAwBP,iBAAxB;MACD,CAFD;;MAIA,KAAK8C,cAAL,GAAsB,IAAtB;MACA,KAAKlF,KAAL,CAAW6J,iBAAX,IAAgC,KAAK7J,KAAL,CAAW6J,iBAAX,CAA6BnC,CAA7B,CAAhC;IACD,CAXD;;IAaA,KAAKoC,gBAAL,GAAwBpC,CAAC,IAAI;MAC3B,KAAKrF,iBAAL,CAAuBC,OAAvB,CAA+BC,SAAS,IAAI;QAC1CA,SAAS,CAACC,GAAV,IAAiBD,SAAS,CAACC,GAAV,CAAcsH,gBAAd,CAA+BpC,CAA/B,CAAjB;MACD,CAFD;;MAIA,IAAIlB,QAAQ,GAAGkB,CAAC,CAACG,WAAF,CAAcrB,QAA7B;;MAEA,IAAIA,QAAJ,EAAc;QACZ,KAAK9F,cAAL,CAAoB8F,QAApB,GAA+B,KAAK4C,aAAL,CAAmB5C,QAAnB,CAA/B;MACD;;MAED,KAAKkD,iBAAL;;MAEA,KAAK1J,KAAL,CAAW+J,eAAX,IAA8B,KAAK/J,KAAL,CAAW+J,eAAX,CAA2BrC,CAA3B,CAA9B;IACD,CAdD;;IAgBA,KAAKsC,sBAAL,GAA8BtC,CAAC,IAAI;MACjC,KAAKrF,iBAAL,CAAuBC,OAAvB,CAA+BC,SAAS,IAAI;QAC1CA,SAAS,CAACC,GAAV,IAAiBD,SAAS,CAACC,GAAV,CAAcwH,sBAAd,CAAqCtC,CAArC,CAAjB;MACD,CAFD;;MAIA,KAAK1H,KAAL,CAAWiK,qBAAX,IAAoC,KAAKjK,KAAL,CAAWiK,qBAAX,CAAiCvC,CAAjC,CAApC;IACD,CAND;;IAQA,KAAKwC,oBAAL,GAA4BxC,CAAC,IAAI;MAC/B,KAAKrF,iBAAL,CAAuBC,OAAvB,CAA+BC,SAAS,IAAI;QAC1CA,SAAS,CAACC,GAAV,IAAiBD,SAAS,CAACC,GAAV,CAAc0H,oBAAd,CAAmCxC,CAAnC,CAAjB;MACD,CAFD;;MAIA,KAAKhH,cAAL,CAAoB8F,QAApB,GAA+B,CAA/B;;MAEA,KAAKkD,iBAAL;;MAEA,KAAK1J,KAAL,CAAWmK,mBAAX,IAAkC,KAAKnK,KAAL,CAAWmK,mBAAX,CAA+BzC,CAA/B,CAAlC;IACD,CAVD;;IAYA,KAAK0C,oBAAL,GAA4B,MAAM;MAChC,IAAIC,YAAY,GAAG,KAAKrK,KAAxB;MAAA,IACIE,IAAI,GAAGmK,YAAY,CAACnK,IADxB;MAAA,IAEID,YAAY,GAAGoK,YAAY,CAACpK,YAFhC;MAAA,IAGIqK,sBAAsB,GAAGD,YAAY,CAAChL,qBAH1C;MAIA,IAAIA,qBAAqB,GAAGD,8BAA8B,CAACkL,sBAAD,CAA1D;;MAEA,IAAIC,wBAAwB,GAAG,KAAKC,yBAAL,EAA/B;;MAEA,KAAK5H,oBAAL,CAA0B1C,IAA1B;;MAEA,IAAI,CAACA,IAAL,EAAW;QACT;MACD;;MAED,KAAKuK,QAAL,CAAchG,KAAK,IAAI;QACrB,IAAIiG,QAAJ;QACA,IAAIC,oBAAoB,GAAG,KAAKjK,cAAhC;QAAA,IACI0F,aAAa,GAAGuE,oBAAoB,CAACvE,aADzC;QAAA,IAEI/F,MAAM,GAAGsK,oBAAoB,CAACtK,MAFlC;QAAA,IAGIM,aAAa,GAAGgK,oBAAoB,CAAChK,aAHzC;;QAKA,IAAI,CAAC4J,wBAAL,EAA+B;UAC7B;UACA;UACA;UACA;UACA,IAAI5J,aAAa,GAAG,CAAhB,IAAqByF,aAAa,GAAG,CAAzC,EAA4C;YAC1C;YACA;YACA;YACA;YACA,IAAI,CAAC,KAAKpG,KAAL,CAAW0I,kBAAZ,IAAkC,KAAKhI,cAAL,CAAoBL,MAA1D,EAAkE;cAChEqK,QAAQ,GAAGvM,2BAA2B,CAAC,KAAK6B,KAAL,CAAWE,IAAZ,EAAkB,KAAKF,KAAL,CAAWC,YAA7B,EAA2Cf,4BAA4B,CAAC,KAAKc,KAAL,CAAWb,mBAAZ,CAAvE,EAAyGK,mBAAmB,CAAC,KAAKQ,KAAL,CAAWP,UAAZ,CAA5H,EAAqJgF,KAArJ,EAA4J,KAAKrE,sBAAjK,EAAyL,KAAKM,cAA9L,CAAtC;YACD;UACF;QACF,CAdD,MAcO;UACL,IAAIkK,eAAe,GAAGxE,aAAa,GAAGzF,aAAhB,GAAgCN,MAAtD;UACA,IAAIwK,WAAW,GAAGD,eAAe,GAAGvL,qBAAqB,GAAGsB,aAA1C,GAA0DzB,4BAA4B,CAAC,KAAKc,KAAL,CAAWb,mBAAZ,CAAtF,GAAyH,CAA3I;UACAuL,QAAQ,GAAG;YACTI,KAAK,EAAE,CADE;YAETC,IAAI,EAAEzK,IAAI,CAAC0K,GAAL,CAASvG,KAAK,CAACsG,IAAN,GAAaF,WAAtB,EAAmC5K,YAAY,CAACC,IAAD,CAAZ,GAAqB,CAAxD;UAFG,CAAX;QAID;;QAED,IAAIwK,QAAQ,IAAI,KAAKrI,iBAAL,CAAuB4I,IAAvB,GAA8B,CAA9C,EAAiD;UAC/C,IAAIC,QAAQ,GAAGR,QAAQ,CAACI,KAAxB;UACA,IAAIK,OAAO,GAAGT,QAAQ,CAACK,IAAvB,CAF+C,CAElB;UAC7B;UACA;UACA;;UAEA,KAAK,IAAIK,EAAE,GAAGF,QAAd,EAAwBE,EAAE,IAAID,OAA9B,EAAuCC,EAAE,EAAzC,EAA6C;YAC3C,IAAIC,eAAe,GAAG,KAAKpF,cAAL,CAAoBzB,GAApB,CAAwB4G,EAAxB,CAAtB;;YAEA,IAAIE,aAAa,GAAGD,eAAe,IAAI,KAAKzG,wBAAL,CAA8BJ,GAA9B,CAAkC6G,eAAlC,CAAvC;;YAEA,IAAI,CAACC,aAAL,EAAoB;cAClB;YACD;;YAED,IAAIC,gBAAgB,GAAG,KAAvB,CAT2C,CASb;;YAE9B,KAAK,IAAIC,SAAS,GAAGtO,+BAA+B,CAACoO,aAAD,CAA/C,EAAgEG,KAArE,EAA4E,CAAC,CAACA,KAAK,GAAGD,SAAS,EAAlB,EAAsBE,IAAnG,GAA0G;cACxG,IAAIC,QAAQ,GAAGF,KAAK,CAACG,KAArB;;cAEA,IAAIrJ,SAAS,GAAG,KAAKF,iBAAL,CAAuBmC,GAAvB,CAA2BmH,QAA3B,CAAhB;;cAEA,IAAIpJ,SAAS,IAAIA,SAAS,CAACC,GAAvB,IAA8BD,SAAS,CAACC,GAAV,CAAcoB,OAAd,EAAlC,EAA2D;gBACzD2H,gBAAgB,GAAG,IAAnB;gBACA;cACD;YACF;;YAED,IAAIA,gBAAJ,EAAsB;cACpB;cACAb,QAAQ,CAACK,IAAT,GAAgBK,EAAhB;cACA;YACD;UACF;QACF;;QAED,IAAIV,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,CAACI,KAAT,KAAmBrG,KAAK,CAACqG,KAA7C,IAAsDJ,QAAQ,CAACK,IAAT,KAAkBtG,KAAK,CAACsG,IAAlF,EAAwF;UACtFL,QAAQ,GAAG,IAAX;QACD;;QAED,OAAOA,QAAP;MACD,CAxED;IAyED,CAxFD;;IA0FA,KAAKmB,gBAAL,GAAwB,CAACvK,KAAD,EAAQwK,UAAR,KAAuB;MAC7C,IAAIC,YAAY,GAAG,KAAK/L,KAAxB;MAAA,IACIE,IAAI,GAAG6L,YAAY,CAAC7L,IADxB;MAAA,IAEI8B,OAAO,GAAG+J,YAAY,CAAC/J,OAF3B;MAGA,IAAIF,IAAI,GAAGE,OAAO,CAAC9B,IAAD,EAAOoB,KAAP,CAAlB;MACA,OAAO;QACLA,KADK;QAELQ,IAFK;QAGLwC,GAAG,EAAE,KAAK0H,aAAL,CAAmBlK,IAAnB,EAAyBR,KAAzB,CAHA;QAILwK;MAJK,CAAP;IAMD,CAXD;;IAaA,KAAK1L,sBAAL,GAA8BkB,KAAK,IAAI;MACrC,IAAInB,KAAK,GAAG,KAAK8L,gBAAL,CAAsB3K,KAAtB,CAAZ;;MAEA,IAAInB,KAAK,IAAIA,KAAK,CAACmB,KAAN,KAAgBA,KAA7B,EAAoC;QAClC;QACA,OAAOnB,KAAP;MACD,CAHD,MAGO;QACL,IAAIiB,aAAa,GAAG,KAAKpB,KAAL,CAAWoB,aAA/B;QACApD,SAAS,CAAC,CAACoD,aAAF,EAAiB,oFAAjB,CAAT;QACA,OAAO;UACLZ,MAAM,EAAE,KAAKmB,kBADR;UAELtB,MAAM,EAAE,KAAKsB,kBAAL,GAA0BL;QAF7B,CAAP;MAID;IACF,CAdD;;IAgBA,KAAK2K,gBAAL,GAAwB3K,KAAK,IAAI;MAC/B,IAAI4K,YAAY,GAAG,KAAKlM,KAAxB;MAAA,IACIE,IAAI,GAAGgM,YAAY,CAAChM,IADxB;MAAA,IAEI8B,OAAO,GAAGkK,YAAY,CAAClK,OAF3B;MAAA,IAGI/B,YAAY,GAAGiM,YAAY,CAACjM,YAHhC;MAAA,IAIImB,aAAa,GAAG8K,YAAY,CAAC9K,aAJjC;MAKApD,SAAS,CAACiC,YAAY,CAACC,IAAD,CAAZ,GAAqBoB,KAAtB,EAA6B,+CAA+CA,KAA5E,CAAT;MACA,IAAIQ,IAAI,GAAGE,OAAO,CAAC9B,IAAD,EAAOoB,KAAP,CAAlB;;MAEA,IAAInB,KAAK,GAAG2B,IAAI,IAAI,KAAK8D,OAAL,CAAa,KAAKoG,aAAL,CAAmBlK,IAAnB,EAAyBR,KAAzB,CAAb,CAApB;;MAEA,IAAI,CAACnB,KAAD,IAAUA,KAAK,CAACmB,KAAN,KAAgBA,KAA9B,EAAqC;QACnC,IAAIF,aAAJ,EAAmB;UACjBjB,KAAK,GAAGiB,aAAa,CAAClB,IAAD,EAAOoB,KAAP,CAArB;QACD;MACF;MACD;AACN;AACA;;;MAGM,OAAOnB,KAAP;IACD,CAtBD;;IAwBAnC,SAAS,EAAE;IACX,CAAC+F,MAAM,CAACiF,QAAR,IAAoB,CAACjF,MAAM,CAACiF,QAAP,CAAgBmD,UAD5B,EACwC,+FAA+F,wDADvI,CAAT;IAEAnO,SAAS,CAACwB,mBAAmB,CAACuE,MAAM,CAACtE,UAAR,CAAnB,GAAyC,CAA1C,EAA6C,yFAA7C,CAAT;IACA,KAAK+J,eAAL,GAAuB,IAAIlM,cAAJ,CAAmB,KAAK2O,gBAAxB,CAAvB;IACA,KAAKG,2BAAL,GAAmC,IAAI/O,WAAJ,CAAgB,KAAK+M,oBAArB,EAA2C,CAACpG,qBAAqB,GAAG,KAAKhE,KAAL,CAAWqM,yBAApC,MAAmE,IAAnE,IAA2ErI,qBAAqB,KAAK,KAAK,CAA1G,GAA8GA,qBAA9G,GAAsI,EAAjL,CAAnC;;IAEA,IAAI,KAAKhE,KAAL,CAAWsM,8BAAf,EAA+C;MAC7C,KAAK7J,kBAAL,GAA0B,KAAKzC,KAAL,CAAWsM,8BAAX,CAA0CC,GAA1C,CAA8CC,IAAI,KAAK;QAC/E7J,iBAAiB,EAAE,IAAI/E,iBAAJ,CAAsB4O,IAAI,CAACC,iBAA3B,CAD4D;QAE/EC,sBAAsB,EAAEF,IAAI,CAACE;MAFkD,CAAL,CAAlD,CAA1B;IAID,CALD,MAKO,IAAI,KAAK1M,KAAL,CAAW0M,sBAAf,EAAuC;MAC5C,KAAKjK,kBAAL,CAAwBkK,IAAxB,CAA6B;QAC3BhK,iBAAiB,EAAE,IAAI/E,iBAAJ,CAAsB,KAAKoC,KAAL,CAAWyM,iBAAjC,CADQ;QAE3B;QACAC,sBAAsB,EAAE,KAAK1M,KAAL,CAAW0M;MAHR,CAA7B;IAKD;;IAED,IAAIE,YAAY,GAAG;MACjB9B,KAAK,EAAE,KAAK9K,KAAL,CAAW0I,kBAAX,IAAiC,CADvB;MAEjBqC,IAAI,EAAEzK,IAAI,CAAC0K,GAAL,CAAS,KAAKhL,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,IAAnC,CAAT,EAAmD,CAAC,KAAKF,KAAL,CAAW0I,kBAAX,IAAiC,CAAlC,IAAuC1J,2BAA2B,CAAC,KAAKgB,KAAL,CAAWf,kBAAZ,CAArH,IAAwJ;IAF7I,CAAnB;;IAKA,IAAI,KAAKkF,4BAAL,EAAJ,EAAyC;MACvC,IAAI0I,WAAW,GAAG,KAAKzJ,OAAL,CAAa0J,mBAAb,CAAiC,KAAKxJ,WAAL,EAAjC,CAAlB;;MAEA,IAAIuJ,WAAJ,EAAiB;QACfD,YAAY,GAAGC,WAAf;QACA,KAAKpI,KAAL,GAAaoI,WAAb;QACA,KAAKjH,OAAL,GAAeiH,WAAW,CAACE,MAA3B;MACD;IACF,CA7fiB,CA6fhB;IACF;;;IAGA,KAAKC,yBAAL,GAAiCC,EAAE,IAAI;MACrC,IAAI,KAAKjN,KAAL,CAAWkN,QAAX,IAAuB,KAAKtM,UAA5B,IAA0C,KAAKA,UAAL,CAAgBmC,iBAA9D,EAAiF;QAC/E,IAAIoK,IAAI,GAAG,KAAKvM,UAAL,CAAgBmC,iBAAhB,EAAX;;QAEA,IAAI,KAAK/C,KAAL,CAAWjB,UAAf,EAA2B;UACzBoO,IAAI,CAACC,UAAL,IAAmBH,EAAE,CAACI,MAAH,IAAaJ,EAAE,CAACK,WAAnC;QACD,CAFD,MAEO;UACLH,IAAI,CAACI,SAAL,IAAkBN,EAAE,CAACO,MAAH,IAAaP,EAAE,CAACQ,WAAlC;QACD;;QAEDR,EAAE,CAACS,cAAH;MACD;IACF,CAZD;;IAcA,KAAKjJ,KAAL,GAAamI,YAAb;EACD;;EAEDe,iBAAiB,GAAG;IAClB,IAAI,KAAKxJ,4BAAL,EAAJ,EAAyC;MACvC,KAAKf,OAAL,CAAawK,qBAAb,CAAmC;QACjCvK,OAAO,EAAE,KAAKH,WAAL,EADwB;QAEjCoB,GAAG,EAAE,KAAKhB,WAAL,EAF4B;QAGjCd,GAAG,EAAE,IAH4B;QAIjC;QACA;QACA;QACA;QACAqL,eAAe,EAAE,KAAKzK,OAAL,CAAaO;MARG,CAAnC;IAUD,CAZiB,CAYhB;;;IAGF,KAAKmK,oBAAL;EACD;;EAEDC,oBAAoB,GAAG;IACrB,IAAI,KAAK5J,4BAAL,EAAJ,EAAyC;MACvC,KAAKf,OAAL,CAAa4K,uBAAb,CAAqC;QACnC1J,GAAG,EAAE,KAAKhB,WAAL,EAD8B;QAEnCmB,KAAK,EAAE;UACLqG,KAAK,EAAE,KAAKrG,KAAL,CAAWqG,KADb;UAELC,IAAI,EAAE,KAAKtG,KAAL,CAAWsG,IAFZ;UAGLgC,MAAM,EAAE,KAAKnH;QAHR;MAF4B,CAArC;IAQD;;IAED,KAAKhD,oBAAL,CAA0B,IAA1B;;IAEA,KAAKwJ,2BAAL,CAAiC6B,OAAjC,CAAyC;MACvCC,KAAK,EAAE;IADgC,CAAzC;;IAIA,KAAKzL,kBAAL,CAAwBH,OAAxB,CAAgCsH,KAAK,IAAI;MACvCA,KAAK,CAACjH,iBAAN,CAAwBsL,OAAxB;IACD,CAFD;;IAIA,KAAKzE,eAAL,CAAqB2E,kBAArB,GAtBqB,CAsBsB;;;IAG3C,KAAKC,uBAAL;EACD,CA9wB+C,CA8wB9C;;;EAGFN,oBAAoB,GAAG;IACrB,IAAI,KAAKlN,UAAL,IAAmB,KAAKA,UAAL,CAAgBmC,iBAAvC,EAA0D;MACxD,KAAKnC,UAAL,CAAgBmC,iBAAhB,GAAoCsL,gBAApC,CAAqD,OAArD,EAA8D,KAAKrB,yBAAnE;IACD,CAFD,MAEO;MACLsB,UAAU,CAAC,MAAM,KAAKR,oBAAL,EAAP,EAAoC,EAApC,CAAV;MACA;IACD;EACF,CAxxB+C,CAwxB9C;;;EAGFM,uBAAuB,GAAG;IACxB,IAAI,KAAKxN,UAAL,IAAmB,KAAKA,UAAL,CAAgBmC,iBAAvC,EAA0D;MACxD,KAAKnC,UAAL,CAAgBmC,iBAAhB,GAAoCwL,mBAApC,CAAwD,OAAxD,EAAiE,KAAKvB,yBAAtE;IACD;EACF;;EAE8B,OAAxBwB,wBAAwB,CAAClJ,QAAD,EAAWmJ,SAAX,EAAsB;IACnD,IAAIvO,IAAI,GAAGoF,QAAQ,CAACpF,IAApB;IAAA,IACID,YAAY,GAAGqF,QAAQ,CAACrF,YAD5B;IAEA,IAAId,mBAAmB,GAAGD,4BAA4B,CAACoG,QAAQ,CAACnG,mBAAV,CAAtD,CAHmD,CAGmC;IACtF;;IAEA,OAAO;MACL2L,KAAK,EAAExK,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAAC0K,GAAL,CAASyD,SAAS,CAAC3D,KAAnB,EAA0B7K,YAAY,CAACC,IAAD,CAAZ,GAAqB,CAArB,GAAyBf,mBAAnD,CAAZ,CADF;MAEL4L,IAAI,EAAEzK,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAAC0K,GAAL,CAASyD,SAAS,CAAC1D,IAAnB,EAAyB9K,YAAY,CAACC,IAAD,CAAZ,GAAqB,CAA9C,CAAZ;IAFD,CAAP;EAID;;EAEDwO,UAAU,CAACC,KAAD,EAAQC,mBAAR,EAA6BC,sBAA7B,EAAqD/D,KAArD,EAA4DC,IAA5D,EAAkE+D,cAAlE,EAAkF;IAC1F,IAAIC,KAAK,GAAG,IAAZ;;IAEA,IAAIC,YAAY,GAAG,KAAKhP,KAAxB;IAAA,IACIiP,qBAAqB,GAAGD,YAAY,CAACC,qBADzC;IAAA,IAEIC,sBAAsB,GAAGF,YAAY,CAACE,sBAF1C;IAAA,IAGIhP,IAAI,GAAG8O,YAAY,CAAC9O,IAHxB;IAAA,IAII8B,OAAO,GAAGgN,YAAY,CAAChN,OAJ3B;IAAA,IAKI/B,YAAY,GAAG+O,YAAY,CAAC/O,YALhC;IAAA,IAMIlB,UAAU,GAAGiQ,YAAY,CAACjQ,UAN9B;IAOA,IAAIoQ,YAAY,GAAG,KAAKnP,KAAL,CAAWoP,mBAAX,GAAiC,CAAjC,GAAqC,CAAxD;IACA,IAAIC,GAAG,GAAGpP,YAAY,CAACC,IAAD,CAAZ,GAAqB,CAA/B;IACA,IAAIoP,WAAJ;IACAvE,IAAI,GAAGzK,IAAI,CAAC0K,GAAL,CAASqE,GAAT,EAActE,IAAd,CAAP;;IAEA,IAAIwE,KAAK,GAAG,SAASA,KAAT,CAAenE,EAAf,EAAmB;MAC7B,IAAItJ,IAAI,GAAGE,OAAO,CAAC9B,IAAD,EAAOkL,EAAP,CAAlB;;MAEA,IAAI9G,GAAG,GAAGyK,KAAK,CAAC/C,aAAN,CAAoBlK,IAApB,EAA0BsJ,EAA1B,CAAV;;MAEA2D,KAAK,CAAC9I,cAAN,CAAqBlB,GAArB,CAAyBqG,EAAzB,EAA6B9G,GAA7B;;MAEA,IAAIuK,sBAAsB,CAACW,GAAvB,CAA2BpE,EAAE,GAAG+D,YAAhC,CAAJ,EAAmD;QACjDP,mBAAmB,CAACjC,IAApB,CAAyBgC,KAAK,CAACnO,MAA/B;MACD;;MAEDmO,KAAK,CAAChC,IAAN,EAAY,aAAavO,KAAK,CAAC2I,aAAN,CAAoB0I,YAApB,EAAkC;QACzDR,qBAAqB,EAAEA,qBADkC;QAEzDC,sBAAsB,EAAE9D,EAAE,GAAGiE,GAAL,GAAWH,sBAAX,GAAoCQ,SAFH;QAGzDrM,OAAO,EAAEiB,GAHgD;QAIzDqL,cAAc,EAAEZ,KAAK,CAACvF,eAJmC;QAKzDzK,UAAU,EAAEA,UAL6C;QAMzDuC,KAAK,EAAE8J,EANkD;QAOzD0D,cAAc,EAAEA,cAPyC;QAQzDhN,IAAI,EAAEA,IARmD;QASzDwC,GAAG,EAAEA,GAToD;QAUzDgL,WAAW,EAAEA,WAV4C;QAWzDM,kBAAkB,EAAEb,KAAK,CAAC3J,mBAX+B;QAYzD2C,QAAQ,EAAEL,CAAC,IAAIqH,KAAK,CAACc,aAAN,CAAoBnI,CAApB,EAAuBpD,GAAvB,EAA4B8G,EAA5B,CAZ0C;QAazD0E,SAAS,EAAEf,KAAK,CAACzH,cAbwC;QAczDyI,WAAW,EAAEhB,KAAK,CAAC/O,KAdsC;QAezDwC,GAAG,EAAEwN,IAAI,IAAI;UACXjB,KAAK,CAACxJ,SAAN,CAAgBjB,GAAhB,IAAuB0L,IAAvB;QACD;MAjBwD,CAAlC,CAAzB;MAmBAV,WAAW,GAAGhL,GAAd;IACD,CA/BD;;IAiCA,KAAK,IAAI8G,EAAE,GAAGN,KAAd,EAAqBM,EAAE,IAAIL,IAA3B,EAAiCK,EAAE,EAAnC,EAAuC;MACrCmE,KAAK,CAACnE,EAAD,CAAL;IACD;EACF;;EAEDZ,yBAAyB,GAAG;IAC1B,OAAO,KAAKxK,KAAL,CAAWiQ,qBAAX,IAAoC,KAA3C;EACD;;EAED9L,4BAA4B,GAAG;IAC7B,IAAI+L,aAAa,GAAG,KAAK9M,OAAzB;IACA,OAAO,CAAC,EAAE8M,aAAa,IAAI,CAAC,CAACA,aAAa,CAACnR,UAAhB,KAA+BD,mBAAmB,CAAC,KAAKkB,KAAL,CAAWjB,UAAZ,CAArE,CAAR;EACD;;EAEDiN,aAAa,CAAClK,IAAD,EAAOR,KAAP,EAAc;IACzB,IAAI,KAAKtB,KAAL,CAAW/B,YAAX,IAA2B,IAA/B,EAAqC;MACnC,OAAO,KAAK+B,KAAL,CAAW/B,YAAX,CAAwB6D,IAAxB,EAA8BR,KAA9B,CAAP;IACD;;IAED,IAAIgD,GAAG,GAAGpG,mBAAmB,CAAC4D,IAAD,EAAOR,KAAP,CAA7B;;IAEA,IAAIgD,GAAG,KAAK6L,MAAM,CAAC7O,KAAD,CAAlB,EAA2B;MACzB1C,gBAAgB,GAAG,IAAnB;;MAEA,IAAIkD,IAAI,CAACsO,IAAL,IAAatO,IAAI,CAACsO,IAAL,CAAUC,WAA3B,EAAwC;QACtCxR,yBAAyB,GAAGiD,IAAI,CAACsO,IAAL,CAAUC,WAAtC;MACD;IACF;;IAED,OAAO/L,GAAP;EACD;;EAEDgM,MAAM,GAAG;IACP,IAAI9R,OAAJ,EAAa;MACX,IAAI+R,UAAU,GAAG1S,YAAY,CAAC,KAAKmC,KAAL,CAAWwQ,qBAAZ,CAA7B;;MAEA,IAAID,UAAU,IAAI,IAAd,IAAsBA,UAAU,CAACE,QAAX,KAAwB,MAAlD,EAA0D;QACxD3P,OAAO,CAACC,IAAR,CAAa,+EAA+E,sDAA5F;MACD;IACF;;IAED,IAAI2P,YAAY,GAAG,KAAK1Q,KAAxB;IAAA,IACI2Q,kBAAkB,GAAGD,YAAY,CAACC,kBADtC;IAAA,IAEIC,mBAAmB,GAAGF,YAAY,CAACE,mBAFvC;IAAA,IAGIxB,mBAAmB,GAAGsB,YAAY,CAACtB,mBAHvC;IAIA,IAAIyB,YAAY,GAAG,KAAK7Q,KAAxB;IAAA,IACIE,IAAI,GAAG2Q,YAAY,CAAC3Q,IADxB;IAAA,IAEInB,UAAU,GAAG8R,YAAY,CAAC9R,UAF9B;;IAIA,IAAIwL,wBAAwB,GAAG,KAAKC,yBAAL,EAA/B;;IAEA,IAAIsE,cAAc,GAAG,KAAK9O,KAAL,CAAWkN,QAAX,GAAsBpO,mBAAmB,CAAC,KAAKkB,KAAL,CAAWjB,UAAZ,CAAnB,GAA6C+R,MAAM,CAACC,oBAApD,GAA2ED,MAAM,CAACE,kBAAxG,GAA6H,IAAlJ;IACA,IAAIrC,KAAK,GAAG,EAAZ;IACA,IAAIE,sBAAsB,GAAG,IAAIhK,GAAJ,CAAQ,KAAK7E,KAAL,CAAW4O,mBAAnB,CAA7B;IACA,IAAIA,mBAAmB,GAAG,EAA1B;;IAEA,IAAIQ,mBAAJ,EAAyB;MACvB,IAAIP,sBAAsB,CAACW,GAAvB,CAA2B,CAA3B,CAAJ,EAAmC;QACjCZ,mBAAmB,CAACjC,IAApB,CAAyB,CAAzB;MACD;;MAED,IAAIsE,OAAO,GAAG,aAAa7S,KAAK,CAAC8S,cAAN,CAAqB9B,mBAArB,IAA4CA,mBAA5C;MAC3B;MACA;MACA;MACAhR,KAAK,CAAC2I,aAAN,CAAoBqI,mBAApB,EAAyC,IAAzC,CAJA;MAKAT,KAAK,CAAChC,IAAN,EAAY,aAAavO,KAAK,CAAC2I,aAAN,CAAoB1I,kCAApB,EAAwD;QAC/EgF,OAAO,EAAE,KAAKH,WAAL,KAAqB,SADiD;QAE/EoB,GAAG,EAAE;MAF0E,CAAxD,EAGtB,aAAalG,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;QACxCoK,QAAQ,EAAE,KAAKO,eADyB;QAExC6I,KAAK,EAAEzT,UAAU,CAAC0T,OAAX,CAAmBtC,cAAnB,EAAmC,KAAK9O,KAAL,CAAWqR,wBAA9C;MAFiC,CAA1B,EAGb;MACHJ,OAJgB,CAHS,CAAzB;IAQD;;IAED,IAAIhP,SAAS,GAAG,KAAKjC,KAAL,CAAWC,YAAX,CAAwBC,IAAxB,CAAhB;;IAEA,IAAI+B,SAAS,GAAG,CAAhB,EAAmB;MACjBrD,gBAAgB,GAAG,KAAnB;MACAC,yBAAyB,GAAG,EAA5B;;MAEA,IAAIyS,SAAS,GAAG,KAAK7L,aAAL,CAAmB,CAAC1G,UAApB,CAAhB;;MAEA,IAAIwS,gBAAgB,GAAG,KAAKvR,KAAL,CAAW0I,kBAAX,GAAgC,CAAC,CAAjC,GAAqC1J,2BAA2B,CAAC,KAAKgB,KAAL,CAAWf,kBAAZ,CAA3B,GAA6D,CAAzH;MACA,IAAIuS,WAAW,GAAG,KAAK/M,KAAvB;MAAA,IACIqG,KAAK,GAAG0G,WAAW,CAAC1G,KADxB;MAAA,IAEIC,IAAI,GAAGyG,WAAW,CAACzG,IAFvB;;MAIA,KAAK2D,UAAL,CAAgBC,KAAhB,EAAuBC,mBAAvB,EAA4CC,sBAA5C,EAAoE,CAApE,EAAuE0C,gBAAvE,EAAyFzC,cAAzF;;MAEA,IAAI2C,iBAAiB,GAAGnR,IAAI,CAACC,GAAL,CAASgR,gBAAgB,GAAG,CAA5B,EAA+BzG,KAA/B,CAAxB;;MAEA,IAAI,CAACP,wBAAD,IAA6BO,KAAK,GAAGyG,gBAAgB,GAAG,CAA5D,EAA+D;QAC7D,IAAIG,oBAAoB,GAAG,KAA3B;;QAEA,IAAI7C,sBAAsB,CAAC5D,IAAvB,GAA8B,CAAlC,EAAqC;UACnC,IAAIkE,YAAY,GAAGC,mBAAmB,GAAG,CAAH,GAAO,CAA7C,CADmC,CACa;;UAEhD,KAAK,IAAIhE,EAAE,GAAGqG,iBAAiB,GAAG,CAAlC,EAAqCrG,EAAE,GAAGmG,gBAA1C,EAA4DnG,EAAE,EAA9D,EAAkE;YAChE,IAAIyD,sBAAsB,CAACW,GAAvB,CAA2BpE,EAAE,GAAG+D,YAAhC,CAAJ,EAAmD;cACjD,IAAIwC,SAAS,GAAG,KAAKvR,sBAAL,CAA4BmR,gBAA5B,CAAhB;;cAEA,IAAIK,WAAW,GAAG,KAAKxR,sBAAL,CAA4BgL,EAA5B,CAAlB;;cAEA,IAAIyG,SAAS,GAAGD,WAAW,CAACvR,MAAZ,GAAqBsR,SAAS,CAACtR,MAA/B,IAAyC,KAAKL,KAAL,CAAW0I,kBAAX,GAAgC,CAAhC,GAAoCiJ,SAAS,CAACnR,MAAvF,CAAhB;cACAmO,KAAK,CAAChC,IAAN,EAAY,aAAavO,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;gBACjD2G,GAAG,EAAE,cAD4C;gBAEjD6M,KAAK,EAAE;kBACL,CAACG,SAAD,GAAaO;gBADR;cAF0C,CAA1B,CAAzB;;cAOA,KAAKnD,UAAL,CAAgBC,KAAhB,EAAuBC,mBAAvB,EAA4CC,sBAA5C,EAAoEzD,EAApE,EAAwEA,EAAxE,EAA4E0D,cAA5E;;cAEA,IAAIgD,UAAU,GAAG,KAAK1R,sBAAL,CAA4B0K,KAA5B,EAAmCzK,MAAnC,IAA6CuR,WAAW,CAACvR,MAAZ,GAAqBuR,WAAW,CAACpR,MAA9E,CAAjB;cACAmO,KAAK,CAAChC,IAAN,EAAY,aAAavO,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;gBACjD2G,GAAG,EAAE,eAD4C;gBAEjD6M,KAAK,EAAE;kBACL,CAACG,SAAD,GAAaQ;gBADR;cAF0C,CAA1B,CAAzB;cAMAJ,oBAAoB,GAAG,IAAvB;cACA;YACD;UACF;QACF;;QAED,IAAI,CAACA,oBAAL,EAA2B;UACzB,IAAIK,UAAU,GAAG,KAAK3R,sBAAL,CAA4BmR,gBAA5B,CAAjB;;UAEA,IAAIS,UAAU,GAAG,KAAK5R,sBAAL,CAA4B0K,KAA5B,EAAmCzK,MAAnC,IAA6C0R,UAAU,CAAC1R,MAAX,GAAoB0R,UAAU,CAACvR,MAA5E,CAAjB;;UAEAmO,KAAK,CAAChC,IAAN,EAAY,aAAavO,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;YACjD2G,GAAG,EAAE,cAD4C;YAEjD6M,KAAK,EAAE;cACL,CAACG,SAAD,GAAaU;YADR;UAF0C,CAA1B,CAAzB;QAMD;MACF;;MAED,KAAKtD,UAAL,CAAgBC,KAAhB,EAAuBC,mBAAvB,EAA4CC,sBAA5C,EAAoE4C,iBAApE,EAAuF1G,IAAvF,EAA6F+D,cAA7F;;MAEA,IAAI,CAAC,KAAKhJ,UAAL,CAAgBT,IAAjB,IAAyBzG,gBAA7B,EAA+C;QAC7CkC,OAAO,CAACC,IAAR,CAAa,gGAAgG,wCAA7G,EAAuJlC,yBAAvJ;QACA,KAAKiH,UAAL,CAAgBT,IAAhB,GAAuB,IAAvB;MACD;;MAED,IAAI,CAACkF,wBAAD,IAA6BQ,IAAI,GAAG9I,SAAS,GAAG,CAApD,EAAuD;QACrD,IAAIgQ,SAAS,GAAG,KAAK7R,sBAAL,CAA4B2K,IAA5B,CAAhB,CADqD,CACF;QACnD;QACA;;;QAGA,IAAIsE,GAAG,GAAG,KAAKrP,KAAL,CAAWoB,aAAX,GAA2Ba,SAAS,GAAG,CAAvC,GAA2C3B,IAAI,CAAC0K,GAAL,CAAS/I,SAAS,GAAG,CAArB,EAAwB,KAAKR,0BAA7B,CAArD;;QAEA,IAAIyQ,QAAQ,GAAG,KAAK9R,sBAAL,CAA4BiP,GAA5B,CAAf;;QAEA,IAAI8C,gBAAgB,GAAGD,QAAQ,CAAC7R,MAAT,GAAkB6R,QAAQ,CAAC1R,MAA3B,IAAqCyR,SAAS,CAAC5R,MAAV,GAAmB4R,SAAS,CAACzR,MAAlE,CAAvB;QACAmO,KAAK,CAAChC,IAAN,EAAY,aAAavO,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;UACjD2G,GAAG,EAAE,cAD4C;UAEjD6M,KAAK,EAAE;YACL,CAACG,SAAD,GAAaa;UADR;QAF0C,CAA1B,CAAzB;MAMD;IACF,CAzFD,MAyFO,IAAIxB,kBAAJ,EAAwB;MAC7B,IAAIyB,QAAQ,GAAG,aAAahU,KAAK,CAAC8S,cAAN,CAAqBP,kBAArB,IAA2CA,kBAA3C;MAC5B;MACA;MACA;MACAvS,KAAK,CAAC2I,aAAN,CAAoB4J,kBAApB,EAAwC,IAAxC,CAJA;;MAMAhC,KAAK,CAAChC,IAAN,EAAY,aAAavO,KAAK,CAACiU,YAAN,CAAmBD,QAAnB,EAA6B;QACpD9N,GAAG,EAAE,QAD+C;QAEpDyD,QAAQ,EAAEuK,KAAK,IAAI;UACjB,KAAKpK,cAAL,CAAoBoK,KAApB;;UAEA,IAAIF,QAAQ,CAACpS,KAAT,CAAe+H,QAAnB,EAA6B;YAC3BqK,QAAQ,CAACpS,KAAT,CAAe+H,QAAf,CAAwBuK,KAAxB;UACD;QACF,CARmD;QASpDnB,KAAK,EAAEzT,UAAU,CAAC0T,OAAX,CAAmBtC,cAAnB,EAAmCsD,QAAQ,CAACpS,KAAT,CAAemR,KAAlD;MAT6C,CAA7B,CAAzB;IAWD;;IAED,IAAIP,mBAAJ,EAAyB;MACvB,IAAI2B,SAAS,GAAG,aAAanU,KAAK,CAAC8S,cAAN,CAAqBN,mBAArB,IAA4CA,mBAA5C;MAC7B;MACA;MACA;MACAxS,KAAK,CAAC2I,aAAN,CAAoB6J,mBAApB,EAAyC,IAAzC,CAJA;;MAMAjC,KAAK,CAAChC,IAAN,EAAY,aAAavO,KAAK,CAAC2I,aAAN,CAAoB1I,kCAApB,EAAwD;QAC/EgF,OAAO,EAAE,KAAKgF,iBAAL,EADsE;QAE/E/D,GAAG,EAAE;MAF0E,CAAxD,EAGtB,aAAalG,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;QACxCoK,QAAQ,EAAE,KAAKI,eADyB;QAExCgJ,KAAK,EAAEzT,UAAU,CAAC0T,OAAX,CAAmBtC,cAAnB,EAAmC,KAAK9O,KAAL,CAAWwS,wBAA9C;MAFiC,CAA1B,EAGb;MACHD,SAJgB,CAHS,CAAzB;IAQD;;IAED,IAAIE,WAAW,GAAGrV,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK,KAAK4C,KAAV,CAAd,EAAgC,EAAhC,EAAoC;MACjE4I,mBAAmB,EAAE,KAAKL,oBADuC;MAEjER,QAAQ,EAAE,KAAKN,SAFkD;MAGjEuB,QAAQ,EAAE,KAAKD,SAHkD;MAIjEc,iBAAiB,EAAE,KAAKF,kBAJyC;MAKjEI,eAAe,EAAE,KAAKD,gBAL2C;MAMjEG,qBAAqB,EAAE,KAAKD,sBANqC;MAOjEG,mBAAmB,EAAE,KAAKD,oBAPuC;MAQjE3K,mBAAmB,EAAED,4BAA4B,CAAC,KAAKU,KAAL,CAAWT,mBAAZ,CARgB;MASjE;MACAmT,mBAAmB,EAAE,KAAK1S,KAAL,CAAW0S,mBAAX,KAAmChD,SAAnC,GAA+C,KAAK1P,KAAL,CAAW0S,mBAA1D,GAAgF,KAAK1S,KAAL,CAAWkN,QAV/C;MAWjE0B,mBAXiE;MAYjEuC,KAAK,EAAErC,cAAc,GAAG,CAACA,cAAD,EAAiB,KAAK9O,KAAL,CAAWmR,KAA5B,CAAH,GAAwC,KAAKnR,KAAL,CAAWmR;IAZP,CAApC,CAA/B;;IAeA,KAAKtN,QAAL,GAAgB,KAAKY,KAAL,CAAWsG,IAAX,GAAkB,KAAK/K,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,IAAnC,IAA2C,CAA7E;IACA,IAAIyS,QAAQ,GAAG,aAAavU,KAAK,CAAC2I,aAAN,CAAoBxI,8BAApB,EAAoD;MAC9EqN,KAAK,EAAE;QACLvI,OAAO,EAAE,IADJ;QAELuP,gBAAgB,EAAE,KAAK3O,iBAFlB;QAGLlF,UAAU,EAAED,mBAAmB,CAAC,KAAKkB,KAAL,CAAWjB,UAAZ,CAH1B;QAILqF,yBAAyB,EAAE,KAAKF,0BAJ3B;QAKL4I,mBAAmB,EAAE,KAAKzI,oBALrB;QAMLuJ,qBAAqB,EAAE,KAAKlJ,sBANvB;QAOLsJ,uBAAuB,EAAE,KAAK7I,wBAPzB;QAQLxB,SAAS,EAAE,KAAKH,aAAL;MARN;IADuE,CAApD,EAWzB,aAAapF,KAAK,CAACiU,YAAN,CAAmB,CAAC,KAAKrS,KAAL,CAAW6S,qBAAX,IAAoC,KAAKhM,6BAA1C,EAAyE4L,WAAzE,CAAnB,EAA0G;MACxHjQ,GAAG,EAAE,KAAKoE;IAD8G,CAA1G,EAEb+H,KAFa,CAXY,CAA5B;IAcA,IAAImE,GAAG,GAAGH,QAAV;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEI,IAAI,KAAK3S,KAAL,CAAW+S,KAAf,EAAsB;MACpB,OAAO,aAAa3U,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;QAC5CwT,KAAK,EAAEL,MAAM,CAACiC;MAD8B,CAA1B,EAEjBD,GAFiB,EAEZ,KAAKE,mBAAL,EAFY,CAApB;IAGD,CAJD,MAIO;MACL,OAAOF,GAAP;IACD;EACF;;EAEDG,kBAAkB,CAACC,SAAD,EAAY;IAC5B,IAAIC,YAAY,GAAG,KAAKnT,KAAxB;IAAA,IACIE,IAAI,GAAGiT,YAAY,CAACjT,IADxB;IAAA,IAEIkT,SAAS,GAAGD,YAAY,CAACC,SAF7B;;IAIA,IAAIlT,IAAI,KAAKgT,SAAS,CAAChT,IAAnB,IAA2BkT,SAAS,KAAKF,SAAS,CAACE,SAAvD,EAAkE;MAChE;MACA;MACA,KAAK3Q,kBAAL,CAAwBH,OAAxB,CAAgCsH,KAAK,IAAI;QACvCA,KAAK,CAACjH,iBAAN,CAAwB0Q,oBAAxB;MACD,CAFD;IAGD,CAX2B,CAW1B;IACF;IACA;IACA;IACA;IACA;;;IAGA,IAAIC,eAAe,GAAG,KAAKtN,gBAA3B;;IAEA,KAAKgC,4BAAL,GArB4B,CAqBS;IACrC;;;IAGA,IAAIsL,eAAJ,EAAqB;MACnB,KAAKtN,gBAAL,GAAwB,KAAxB;IACD;EACF;;EAED0D,iBAAiB,GAAG;IAClB,KAAKF,eAAL,CAAqB+J,gBAArB,CAAsC,KAAKvT,KAA3C,EAAkD,KAAKyE,KAAvD,EAA8D,KAAK/D,cAAnE;EACD;;EAEDmP,aAAa,CAACnI,CAAD,EAAIrE,OAAJ,EAAa/B,KAAb,EAAoB;IAC/B,IAAIwG,MAAM,GAAGJ,CAAC,CAACG,WAAF,CAAcC,MAA3B;IACA,IAAI0L,IAAI,GAAG;MACTnT,MAAM,EAAE,KAAK+I,aAAL,CAAmBtB,MAAnB,CADC;MAETtH,MAAM,EAAE,KAAKoH,aAAL,CAAmBE,MAAnB,CAFC;MAGTxG,KAHS;MAITkG,QAAQ,EAAE;IAJD,CAAX;IAMA,IAAID,IAAI,GAAG,KAAK3B,OAAL,CAAavC,OAAb,CAAX;;IAEA,IAAI,CAACkE,IAAD,IAASiM,IAAI,CAACnT,MAAL,KAAgBkH,IAAI,CAAClH,MAA9B,IAAwCmT,IAAI,CAAChT,MAAL,KAAgB+G,IAAI,CAAC/G,MAA7D,IAAuEc,KAAK,KAAKiG,IAAI,CAACjG,KAA1F,EAAiG;MAC/F,KAAKoF,gBAAL,IAAyB8M,IAAI,CAAChT,MAAL,IAAe+G,IAAI,GAAGA,IAAI,CAAC/G,MAAR,GAAiB,CAApC,CAAzB;MACA,KAAKmG,mBAAL,IAA4BY,IAAI,GAAG,CAAH,GAAO,CAAvC;MACA,KAAK5F,kBAAL,GAA0B,KAAK+E,gBAAL,GAAwB,KAAKC,mBAAvD;MACA,KAAKf,OAAL,CAAavC,OAAb,IAAwBmQ,IAAxB;MACA,KAAK/R,0BAAL,GAAkCnB,IAAI,CAACC,GAAL,CAAS,KAAKkB,0BAAd,EAA0CH,KAA1C,CAAlC;;MAEA,KAAK0G,4BAAL;IACD,CARD,MAQO;MACL,KAAKpC,OAAL,CAAavC,OAAb,EAAsBmE,QAAtB,GAAiC,IAAjC;IACD;;IAED,KAAKY,oCAAL,CAA0C/E,OAA1C;;IAEA,KAAKqG,iBAAL;;IAEA,KAAK9G,oBAAL,CAA0B,KAAK5C,KAAL,CAAWE,IAArC;EACD;;EAEDkI,oCAAoC,CAAC/E,OAAD,EAAU;IAC5C,IAAIiI,aAAa,GAAG,KAAK1G,wBAAL,CAA8BJ,GAA9B,CAAkCnB,OAAlC,CAApB;;IAEA,IAAIiI,aAAJ,EAAmB;MACjB,KAAK,IAAImI,UAAU,GAAGvW,+BAA+B,CAACoO,aAAD,CAAhD,EAAiEoI,MAAtE,EAA8E,CAAC,CAACA,MAAM,GAAGD,UAAU,EAApB,EAAwB/H,IAAvG,GAA8G;QAC5G,IAAIC,QAAQ,GAAG+H,MAAM,CAAC9H,KAAtB;;QAEA,IAAIrJ,SAAS,GAAG,KAAKF,iBAAL,CAAuBmC,GAAvB,CAA2BmH,QAA3B,CAAhB;;QAEApJ,SAAS,IAAIA,SAAS,CAACC,GAAvB,IAA8BD,SAAS,CAACC,GAAV,CAAcmF,qCAAd,EAA9B;MACD;IACF;EACF;;EAEDA,qCAAqC,GAAG;IACtC;IACA;IACA,IAAI;MACF,IAAI,CAAC,KAAK/G,UAAV,EAAsB;QACpB;MACD,CAHC,CAGA;MACF;;;MAGA,KAAKA,UAAL,CAAgB+S,aAAhB,CAA8B,KAAKvQ,OAAL,CAAagB,yBAAb,GAAyCpB,YAAzC,EAA9B,EAAuF,CAAChC,CAAD,EAAIC,CAAJ,EAAOuH,KAAP,EAAcC,MAAd,KAAyB;QAC9G,KAAKvC,gCAAL,GAAwC,KAAKkD,aAAL,CAAmB;UACzDpI,CADyD;UAEzDC;QAFyD,CAAnB,CAAxC;QAIA,KAAKP,cAAL,CAAoB0F,aAApB,GAAoC,KAAKwB,aAAL,CAAmB;UACrDY,KADqD;UAErDC;QAFqD,CAAnB,CAApC;;QAKA,IAAImL,aAAa,GAAG,KAAK/K,2BAAL,CAAiC,KAAKzF,OAAL,CAAawP,gBAAb,EAAjC,CAApB;;QAEA,IAAIiB,cAAc,GAAG,KAAKnT,cAAL,CAAoBC,aAApB,KAAsCiT,aAAa,CAACjT,aAApD,IAAqE,KAAKD,cAAL,CAAoBL,MAApB,KAA+BuT,aAAa,CAACvT,MAAvI;;QAEA,IAAIwT,cAAJ,EAAoB;UAClB,KAAKnT,cAAL,CAAoBC,aAApB,GAAoCiT,aAAa,CAACjT,aAAlD;UACA,KAAKD,cAAL,CAAoBL,MAApB,GAA6BuT,aAAa,CAACvT,MAA3C,CAFkB,CAEiC;UACnD;;UAEA,KAAKuE,wBAAL,CAA8BtC,OAA9B,CAAsCgJ,aAAa,IAAI;YACrD,IAAIA,aAAJ,EAAmB;cACjB,KAAK,IAAIwI,UAAU,GAAG5W,+BAA+B,CAACoO,aAAD,CAAhD,EAAiEyI,MAAtE,EAA8E,CAAC,CAACA,MAAM,GAAGD,UAAU,EAApB,EAAwBpI,IAAvG,GAA8G;gBAC5G,IAAIC,QAAQ,GAAGoI,MAAM,CAACnI,KAAtB;;gBAEA,IAAIrJ,SAAS,GAAG,KAAKF,iBAAL,CAAuBmC,GAAvB,CAA2BmH,QAA3B,CAAhB;;gBAEApJ,SAAS,IAAIA,SAAS,CAACC,GAAvB,IAA8BD,SAAS,CAACC,GAAV,CAAcmF,qCAAd,EAA9B;cACD;YACF;UACF,CAVD;QAWD;MACF,CA/BD,EA+BG3C,KAAK,IAAI;QACVlE,OAAO,CAACC,IAAR,CAAa,mEAAmE,8CAAhF;MACD,CAjCD;IAkCD,CAzCD,CAyCE,OAAOiE,KAAP,EAAc;MACdlE,OAAO,CAACC,IAAR,CAAa,sDAAb,EAAqEiE,KAAK,CAACgP,KAA3E;IACD;EACF;;EAED3L,iBAAiB,GAAG;IAClB,OAAO,KAAKnF,WAAL,KAAqB,SAA5B;EACD;;EAED8P,mBAAmB,GAAG;IACpB,IAAIiB,SAAS,GAAG,KAAKvT,cAAL,CAAoBC,aAApB,IAAqC,KAAKD,cAAL,CAAoB0F,aAApB,IAAqC,CAA1E,CAAhB;IACA,IAAI8N,cAAc,GAAG,EAArB;IACA,IAAIjS,SAAS,GAAG,KAAKjC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,IAAnC,CAAhB;;IAEA,KAAK,IAAIkL,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGnJ,SAAtB,EAAiCmJ,EAAE,EAAnC,EAAuC;MACrC,IAAIjL,KAAK,GAAG,KAAKC,sBAAL,CAA4BgL,EAA5B,CAAZ;MACA;AACN;AACA;;;MAGM,IAAIjL,KAAK,CAACqH,QAAV,EAAoB;QAClB0M,cAAc,CAACvH,IAAf,CAAoBxM,KAApB;MACD;IACF;;IAED,IAAIgU,SAAS,GAAG,KAAK/T,sBAAL,CAA4B,KAAKqE,KAAL,CAAWqG,KAAvC,EAA8CzK,MAA9D;;IAEA,IAAI+T,SAAS,GAAG,KAAKhU,sBAAL,CAA4B,KAAKqE,KAAL,CAAWsG,IAAvC,CAAhB;;IAEA,IAAIsJ,SAAS,GAAGD,SAAS,CAAC/T,MAAV,GAAmB+T,SAAS,CAAC5T,MAA7B,GAAsC2T,SAAtD;IACA,IAAIG,MAAM,GAAG,KAAK5T,cAAL,CAAoBL,MAAjC;IACA,IAAIkU,MAAM,GAAG,KAAK7T,cAAL,CAAoBC,aAAjC;IACA,OAAO,aAAavC,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;MAC5CwT,KAAK,EAAE,CAACL,MAAM,CAAC0D,gBAAR,EAA0B1D,MAAM,CAAC2D,YAAjC;IADqC,CAA1B,EAEjBP,cAAc,CAAC3H,GAAf,CAAmB,CAACmI,CAAD,EAAItJ,EAAJ,KAAW,aAAahN,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;MACtE2G,GAAG,EAAE,MAAM8G,EAD2D;MAEtE+F,KAAK,EAAE,CAACL,MAAM,CAAC0D,gBAAR,EAA0B1D,MAAM,CAAC6D,iBAAjC,EAAoD;QACzDC,GAAG,EAAEF,CAAC,CAACrU,MAAF,GAAW4T,SADyC;QAEzDxL,MAAM,EAAEiM,CAAC,CAAClU,MAAF,GAAWyT;MAFsC,CAApD;IAF+D,CAA1B,CAA3C,CAFiB,EAQf,aAAa7V,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;MAC1CwT,KAAK,EAAE,CAACL,MAAM,CAAC0D,gBAAR,EAA0B1D,MAAM,CAAC+D,qBAAjC,EAAwD;QAC7DD,GAAG,EAAET,SAAS,GAAGF,SAD4C;QAE7DxL,MAAM,EAAE4L,SAAS,GAAGJ;MAFyC,CAAxD;IADmC,CAA1B,CARE,EAahB,aAAa7V,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;MACzCwT,KAAK,EAAE,CAACL,MAAM,CAAC0D,gBAAR,EAA0B1D,MAAM,CAACgE,oBAAjC,EAAuD;QAC5DF,GAAG,EAAEN,MAAM,GAAGL,SAD8C;QAE5DxL,MAAM,EAAE8L,MAAM,GAAGN;MAF2C,CAAvD;IADkC,CAA1B,CAbG,CAApB;EAmBD;;EAEDrM,aAAa,CAACkB,OAAD,EAAU;IACrB,OAAO,CAAChK,mBAAmB,CAAC,KAAKkB,KAAL,CAAWjB,UAAZ,CAApB,GAA8C+J,OAAO,CAACL,MAAtD,GAA+DK,OAAO,CAACN,KAA9E;EACD;;EAEDY,aAAa,CAACN,OAAD,EAAU;IACrB,OAAO,CAAChK,mBAAmB,CAAC,KAAKkB,KAAL,CAAWjB,UAAZ,CAApB,GAA8C+J,OAAO,CAAC7H,CAAtD,GAA0D6H,OAAO,CAAC9H,CAAzE;EACD;;EAEDiH,sBAAsB,GAAG;IACvB,IAAI8M,aAAa,GAAG,KAAK/U,KAAzB;IAAA,IACIE,IAAI,GAAG6U,aAAa,CAAC7U,IADzB;IAAA,IAEID,YAAY,GAAG8U,aAAa,CAAC9U,YAFjC;IAAA,IAGI+U,YAAY,GAAGD,aAAa,CAACC,YAHjC;IAAA,IAII3V,qBAAqB,GAAG0V,aAAa,CAAC1V,qBAJ1C;IAKA,IAAI4V,qBAAqB,GAAG,KAAKvU,cAAjC;IAAA,IACI0F,aAAa,GAAG6O,qBAAqB,CAAC7O,aAD1C;IAAA,IAEIzF,aAAa,GAAGsU,qBAAqB,CAACtU,aAF1C;IAAA,IAGIN,MAAM,GAAG4U,qBAAqB,CAAC5U,MAHnC;IAIA,IAAIuK,eAAe,GAAGxE,aAAa,GAAGzF,aAAhB,GAAgCN,MAAtD;IACA,IAAI6U,SAAS,GAAG7V,qBAAqB,IAAI,IAAzB,GAAgCA,qBAAqB,GAAGsB,aAAxD,GAAwE,CAAxF;;IAEA,IAAIqU,YAAY,IAAI,KAAKvQ,KAAL,CAAWsG,IAAX,KAAoB9K,YAAY,CAACC,IAAD,CAAZ,GAAqB,CAAzD,IAA8D0K,eAAe,GAAGsK,SAAhF,IAA6F,KAAKxU,cAAL,CAAoB0F,aAApB,KAAsC,KAAKK,wBAA5I,EAAsK;MACpK;MACA,KAAKA,wBAAL,GAAgC,KAAK/F,cAAL,CAAoB0F,aAApD;MACA4O,YAAY,CAAC;QACXpK;MADW,CAAD,CAAZ;IAGD,CAND,MAMO,IAAIA,eAAe,GAAGsK,SAAtB,EAAiC;MACtC;MACA;MACA,KAAKzO,wBAAL,GAAgC,CAAhC;IACD;EACF;;EAEDuB,4BAA4B,GAAG;IAC7B,IAAImN,YAAY,GAAG,KAAK1Q,KAAxB;IAAA,IACIqG,KAAK,GAAGqK,YAAY,CAACrK,KADzB;IAAA,IAEIC,IAAI,GAAGoK,YAAY,CAACpK,IAFxB;IAGA,IAAIqK,qBAAqB,GAAG,KAAK1U,cAAjC;IAAA,IACIL,MAAM,GAAG+U,qBAAqB,CAAC/U,MADnC;IAAA,IAEIM,aAAa,GAAGyU,qBAAqB,CAACzU,aAF1C;IAAA,IAGI6F,QAAQ,GAAG4O,qBAAqB,CAAC5O,QAHrC;IAIA,IAAIvE,SAAS,GAAG,KAAKjC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,IAAnC,CAAhB;IACA,IAAImV,KAAK,GAAG,KAAZ;IACA,IAAIhW,qBAAqB,GAAGD,8BAA8B,CAAC,KAAKY,KAAL,CAAWX,qBAAZ,CAA1D;IACA,IAAIiW,kBAAkB,GAAGjW,qBAAqB,GAAGsB,aAAxB,GAAwC,CAAjE,CAX6B,CAWuC;IACpE;;IAEA,IAAImK,KAAK,GAAG,CAAZ,EAAe;MACb,IAAIyK,OAAO,GAAGlV,MAAM,GAAG,KAAKD,sBAAL,CAA4B0K,KAA5B,EAAmCzK,MAA1D;;MAEAgV,KAAK,GAAGA,KAAK,IAAIE,OAAO,GAAG,CAAnB,IAAwB/O,QAAQ,GAAG,CAAC,CAAZ,IAAiB+O,OAAO,GAAGD,kBAA3D;IACD,CAlB4B,CAkB3B;IACF;;;IAGA,IAAIvK,IAAI,GAAG9I,SAAS,GAAG,CAAvB,EAA0B;MACxB,IAAIuT,UAAU,GAAG,KAAKpV,sBAAL,CAA4B2K,IAA5B,EAAkC1K,MAAlC,IAA4CA,MAAM,GAAGM,aAArD,CAAjB;MACA0U,KAAK,GAAGA,KAAK,IAAIG,UAAU,GAAG,CAAtB,IAA2BhP,QAAQ,GAAG,CAAX,IAAgBgP,UAAU,GAAGF,kBAAhE;IACD,CAzB4B,CAyB3B;IACF;IACA;IACA;IACA;IACA;IACA;;;IAGA,IAAID,KAAK,KAAK,KAAK1T,kBAAL,IAA2B,KAAK3B,KAAL,CAAWoB,aAA3C,CAAL,IAAkE,CAAC,KAAK4E,gBAA5E,EAA8F;MAC5F,KAAKA,gBAAL,GAAwB,IAAxB,CAD4F,CAC9D;MAC9B;;MAEA,KAAKoG,2BAAL,CAAiC6B,OAAjC,CAAyC;QACvCC,KAAK,EAAE;MADgC,CAAzC;;MAIA,KAAK9D,oBAAL;;MAEA;IACD,CAXD,MAWO;MACL,KAAKgC,2BAAL,CAAiCqJ,QAAjC;IACD;EACF;;EAED7S,oBAAoB,CAAC1C,IAAD,EAAO;IACzB,IAAID,YAAY,GAAG,KAAKD,KAAL,CAAWC,YAA9B;;IAEA,KAAKwC,kBAAL,CAAwBH,OAAxB,CAAgCsH,KAAK,IAAI;MACvCA,KAAK,CAACjH,iBAAN,CAAwB+S,QAAxB,CAAiCzV,YAAY,CAACC,IAAD,CAA7C,EAAqD,KAAKQ,cAAL,CAAoBL,MAAzE,EAAiF,KAAKK,cAAL,CAAoBC,aAArG,EAAoH,KAAKsL,gBAAzH,EAA2I,KAAKJ,gBAAhJ,EAAkKjC,KAAK,CAAC8C,sBAAxK,EAAgM,KAAKjI,KAArM;IACD,CAFD;EAGD;;AAp3C+C;;AAw3ClD/E,eAAe,CAACiW,WAAhB,GAA8BrX,sBAA9B;;AAEA,MAAMmR,YAAN,SAA2BrR,KAAK,CAACwX,SAAjC,CAA2C;EACzC9R,WAAW,GAAG;IACZ,MAAM,GAAG+R,SAAT;IACA,KAAKpR,KAAL,GAAa;MACXqR,cAAc,EAAE;QACdC,WAAW,EAAE,KADC;QAEdC,WAAW,EAAE,KAAKhW,KAAL,CAAW8B;MAFV;IADL,CAAb;IAMA,KAAKmU,WAAL,GAAmB;MACjBC,SAAS,EAAE,MAAM;QACf,IAAIC,aAAa,GAAG,KAAKnW,KAAzB;QAAA,IACIqD,OAAO,GAAG8S,aAAa,CAAC9S,OAD5B;QAAA,IAEIiM,WAAW,GAAG6G,aAAa,CAAC7G,WAFhC;QAGA,KAAKtP,KAAL,CAAW4P,kBAAX,CAA8B,CAACvM,OAAD,EAAUiM,WAAV,CAA9B,EAAsD;UACpDyG,WAAW,EAAE;QADuC,CAAtD;MAGD,CARgB;MASjBK,WAAW,EAAE,MAAM;QACjB,IAAIC,aAAa,GAAG,KAAKrW,KAAzB;QAAA,IACIqD,OAAO,GAAGgT,aAAa,CAAChT,OAD5B;QAAA,IAEIiM,WAAW,GAAG+G,aAAa,CAAC/G,WAFhC;QAGA,KAAKtP,KAAL,CAAW4P,kBAAX,CAA8B,CAACvM,OAAD,EAAUiM,WAAV,CAA9B,EAAsD;UACpDyG,WAAW,EAAE;QADuC,CAAtD;MAGD,CAhBgB;MAiBjBO,WAAW,EAAE,CAACC,MAAD,EAASjR,QAAT,KAAsB;QACjC,IAAIkR,aAAa,GAAG,KAAKxW,KAAzB;QAAA,IACIqD,OAAO,GAAGmT,aAAa,CAACnT,OAD5B;QAAA,IAEIiM,WAAW,GAAGkH,aAAa,CAAClH,WAFhC;QAGA,KAAKtP,KAAL,CAAW4P,kBAAX,CAA8B,CAAC2G,MAAM,KAAK,SAAX,GAAuBjH,WAAvB,GAAqCjM,OAAtC,CAA9B,EAA8EiC,QAA9E;MACD;IAtBgB,CAAnB;EAwBD;;EAE8B,OAAxBkJ,wBAAwB,CAACxO,KAAD,EAAQyO,SAAR,EAAmB;IAChD,OAAO;MACLqH,cAAc,EAAE1Y,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKqR,SAAS,CAACqH,cAAf,CAAd,EAA8C,EAA9C,EAAkD;QAC7EE,WAAW,EAAEhW,KAAK,CAAC8B;MAD0D,CAAlD;IADxB,CAAP;EAKD,CAzCwC,CAyCvC;EACF;;;EAGA0D,oBAAoB,CAACF,QAAD,EAAW;IAC7B,KAAKmF,QAAL,CAAchG,KAAK,KAAK;MACtBqR,cAAc,EAAE1Y,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKqH,KAAK,CAACqR,cAAX,CAAd,EAA0CxQ,QAA1C;IADP,CAAL,CAAnB;EAGD;;EAEDyI,oBAAoB,GAAG;IACrB,KAAK/N,KAAL,CAAW8P,SAAX,CAAqB,KAAK9P,KAAL,CAAWqD,OAAhC;EACD;;EAEDoT,cAAc,CAACC,UAAD,EAAaC,iBAAb,EAAgC7U,IAAhC,EAAsCR,KAAtC,EAA6C;IACzD,IAAIoV,UAAU,IAAIC,iBAAlB,EAAqC;MACnC7V,OAAO,CAACC,IAAR,CAAa,0GAA0G,8BAAvH;IACD;;IAED,IAAI4V,iBAAJ,EAAuB;MACrB;AACN;AACA;;MAEM;AACN;AACA;MACM,OAAO,aAAavY,KAAK,CAAC2I,aAAN,CAAoB4P,iBAApB,EAAuC;QACzD7U,IADyD;QAEzDR,KAFyD;QAGzDsV,UAAU,EAAE,KAAKX;MAHwC,CAAvC,CAApB;IAKD;;IAED,IAAIS,UAAJ,EAAgB;MACd,OAAOA,UAAU,CAAC;QAChB5U,IADgB;QAEhBR,KAFgB;QAGhBsV,UAAU,EAAE,KAAKX;MAHD,CAAD,CAAjB;IAKD;;IAEDjY,SAAS,CAAC,KAAD,EAAQ,iGAAR,CAAT;EACD;;EAEDsS,MAAM,GAAG;IACP,IAAIuG,aAAa,GAAG,KAAK7W,KAAzB;IAAA,IACIiP,qBAAqB,GAAG4H,aAAa,CAAC5H,qBAD1C;IAAA,IAEIC,sBAAsB,GAAG2H,aAAa,CAAC3H,sBAF3C;IAAA,IAGIS,cAAc,GAAGkH,aAAa,CAAClH,cAHnC;IAAA,IAII5Q,UAAU,GAAG8X,aAAa,CAAC9X,UAJ/B;IAAA,IAKI+C,IAAI,GAAG+U,aAAa,CAAC/U,IALzB;IAAA,IAMIR,KAAK,GAAGuV,aAAa,CAACvV,KAN1B;IAAA,IAOIwN,cAAc,GAAG+H,aAAa,CAAC/H,cAPnC;IAAA,IAQIiB,WAAW,GAAG8G,aAAa,CAAC9G,WARhC;IASA,IAAI2G,UAAU,GAAG3G,WAAW,CAAC2G,UAA7B;IAAA,IACItV,aAAa,GAAG2O,WAAW,CAAC3O,aADhC;IAAA,IAEIuV,iBAAiB,GAAG5G,WAAW,CAAC4G,iBAFpC;;IAIA,IAAI1F,OAAO,GAAG,KAAKwF,cAAL,CAAoBC,UAApB,EAAgCC,iBAAhC,EAAmD7U,IAAnD,EAAyDR,KAAzD,CAAd;;IAEA,IAAIyG,QAAQ;IACZ;AACJ;AACA;IACI3G,aAAa,IAAI,CAAC2O,WAAW,CAACgD,KAA9B,IAAuC,CAACpD,cAAc,CAACmH,OAAf,EAAxC,GAAmEpH,SAAnE,GAA+E,KAAK1P,KAAL,CAAW+H,QAJ1F,CAhBO,CAoB6F;IACpG;;IAEA,IAAIgP,aAAa,GAAG7H,sBAAsB,IAAI,aAAa9Q,KAAK,CAAC2I,aAAN,CAAoBmI,sBAApB,EAA4C,KAAKzK,KAAL,CAAWqR,cAAvD,CAA3D;IACA,IAAIkB,SAAS,GAAGlI,cAAc,GAAG/P,UAAU,GAAG,CAAC+R,MAAM,CAACmG,UAAR,EAAoBnI,cAApB,CAAH,GAAyC,CAACgC,MAAM,CAACoG,aAAR,EAAuBpI,cAAvB,CAAtD,GAA+F/P,UAAU,GAAG,CAAC+R,MAAM,CAACqG,GAAR,EAAarI,cAAb,CAAH,GAAkCA,cAAzK;IACA,IAAIsI,MAAM,GAAG,CAACnI,qBAAD;IACb;;IAEA;AACJ;AACA;IACI7Q,KAAK,CAAC2I,aAAN,CAAoBpJ,IAApB,EAA0B;MACxBwT,KAAK,EAAE6F,SADiB;MAExBjP,QAAQ,EAAEA;IAFc,CAA1B,EAGGkJ,OAHH,EAGY8F,aAHZ,CANa,GASgB,aAAa3Y,KAAK,CAAC2I,aAAN,CAAoBkI,qBAApB,EAA2C9R,QAAQ,CAAC,EAAD,EAAK,KAAK6C,KAAV,EAAiB;MAC5GmR,KAAK,EAAE6F,SADqG;MAE5GjP,QAAQ,EAAEA;IAFkG,CAAjB,CAAnD,EAGtCkJ,OAHsC,EAG7B8F,aAH6B,CAT1C;IAaA,OAAO,aAAa3Y,KAAK,CAAC2I,aAAN,CAAoB1I,kCAApB,EAAwD;MAC1EgF,OAAO,EAAE,KAAKrD,KAAL,CAAWqD;IADsD,CAAxD,EAEjB+T,MAFiB,CAApB;EAGD;;AA/HwC;;AAmI3C,SAASnS,mBAAT,CAA6B1C,SAA7B,EAAwC;EACtC,IAAI8U,KAAK,GAAG,8BAA8B,eAAe9U,SAAS,CAACxD,UAAV,GAAuB,YAAvB,GAAsC,UAArD,IAAmE,MAAjG,KAA4G,kBAAkBwD,SAAS,CAAC+B,GAA5B,GAAkC,IAA9I,KAAuJ,kBAAkB/B,SAAS,CAACc,OAAnL,CAAZ;EACA,IAAIM,SAAS,GAAGpB,SAAS,CAACsL,eAA1B;;EAEA,OAAOlK,SAAP,EAAkB;IAChB0T,KAAK,IAAI,kBAAkB1T,SAAS,CAAC5E,UAAV,GAAuB,YAAvB,GAAsC,UAAxD,IAAsE,MAAtE,IAAgF,kBAAkB4E,SAAS,CAACJ,OAA5B,GAAsC,IAAtH,KAA+H,kBAAkBI,SAAS,CAACN,OAA3J,CAAT;IACAM,SAAS,GAAGA,SAAS,CAACD,MAAtB;EACD;;EAED,OAAO2T,KAAP;AACD;;AAED,IAAIvG,MAAM,GAAGpT,UAAU,CAAC4Z,MAAX,CAAkB;EAC7BtG,kBAAkB,EAAE;IAClBuG,SAAS,EAAE,CAAC;MACVC,MAAM,EAAE,CAAC;IADC,CAAD;EADO,CADS;EAM7BzG,oBAAoB,EAAE;IACpBwG,SAAS,EAAE,CAAC;MACVE,MAAM,EAAE,CAAC;IADC,CAAD;EADS,CANO;EAW7BN,GAAG,EAAE;IACHO,aAAa,EAAE;EADZ,CAXwB;EAc7BT,UAAU,EAAE;IACVS,aAAa,EAAE;EADL,CAdiB;EAiB7BR,aAAa,EAAE;IACbQ,aAAa,EAAE;EADF,CAjBc;EAoB7B3E,KAAK,EAAE;IACL4E,IAAI,EAAE;EADD,CApBsB;EAuB7BnD,gBAAgB,EAAE;IAChBoD,QAAQ,EAAE,UADM;IAEhBhD,GAAG,EAAE,CAFW;IAGhBiD,KAAK,EAAE;EAHS,CAvBW;EA4B7BpD,YAAY,EAAE;IACZqD,MAAM,EAAE,CADI;IAEZtP,KAAK,EAAE,EAFK;IAGZuP,WAAW,EAAE,MAHD;IAIZC,WAAW,EAAE;EAJD,CA5Be;EAkC7BrD,iBAAiB,EAAE;IACjBsD,IAAI,EAAE,CADW;IAEjBC,eAAe,EAAE;EAFA,CAlCU;EAsC7BrD,qBAAqB,EAAE;IACrBoD,IAAI,EAAE,CADe;IAErBF,WAAW,EAAE,OAFQ;IAGrBC,WAAW,EAAE;EAHQ,CAtCM;EA2C7BlD,oBAAoB,EAAE;IACpBmD,IAAI,EAAE,CADc;IAEpBF,WAAW,EAAE,KAFO;IAGpBC,WAAW,EAAE;EAHO;AA3CO,CAAlB,CAAb;AAiDA,eAAetY,eAAf"},"metadata":{},"sourceType":"module"}