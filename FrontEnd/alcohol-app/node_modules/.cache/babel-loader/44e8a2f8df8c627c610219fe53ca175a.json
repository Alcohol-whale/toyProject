{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1;\n/**\n * 2D Value for driving 2D animations, such as pan gestures. Almost identical\n * API to normal `Animated.Value`, but multiplexed.\n *\n * See https://reactnative.dev/docs/animatedvaluexy.html\n */\n\nclass AnimatedValueXY extends AnimatedWithChildren {\n  constructor(valueIn) {\n    super();\n    var value = valueIn || {\n      x: 0,\n      y: 0\n    }; // fixme: shouldn't need `: any`\n\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      this.x = new AnimatedValue(value.x);\n      this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initialized with an object of numbers or ' + 'AnimatedValues.');\n      this.x = value.x;\n      this.y = value.y;\n    }\n\n    this._listeners = {};\n  }\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#setvalue\n   */\n\n\n  setValue(value) {\n    this.x.setValue(value.x);\n    this.y.setValue(value.y);\n  }\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#setoffset\n   */\n\n\n  setOffset(offset) {\n    this.x.setOffset(offset.x);\n    this.y.setOffset(offset.y);\n  }\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#flattenoffset\n   */\n\n\n  flattenOffset() {\n    this.x.flattenOffset();\n    this.y.flattenOffset();\n  }\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#extractoffset\n   */\n\n\n  extractOffset() {\n    this.x.extractOffset();\n    this.y.extractOffset();\n  }\n\n  __getValue() {\n    return {\n      x: this.x.__getValue(),\n      y: this.y.__getValue()\n    };\n  }\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#resetanimation\n   */\n\n\n  resetAnimation(callback) {\n    this.x.resetAnimation();\n    this.y.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#stopanimation\n   */\n\n\n  stopAnimation(callback) {\n    this.x.stopAnimation();\n    this.y.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to synchronously read\n   * the value because it might be driven natively.\n   *\n   * Returns a string that serves as an identifier for the listener.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#addlistener\n   */\n\n\n  addListener(callback) {\n    var id = String(_uniqueId++);\n\n    var jointCallback = _ref => {\n      var number = _ref.value;\n      callback(this.__getValue());\n    };\n\n    this._listeners[id] = {\n      x: this.x.addListener(jointCallback),\n      y: this.y.addListener(jointCallback)\n    };\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#removelistener\n   */\n\n\n  removeListener(id) {\n    this.x.removeListener(this._listeners[id].x);\n    this.y.removeListener(this._listeners[id].y);\n    delete this._listeners[id];\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#removealllisteners\n   */\n\n\n  removeAllListeners() {\n    this.x.removeAllListeners();\n    this.y.removeAllListeners();\n    this._listeners = {};\n  }\n  /**\n   * Converts `{x, y}` into `{left, top}` for use in style.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#getlayout\n   */\n\n\n  getLayout() {\n    return {\n      left: this.x,\n      top: this.y\n    };\n  }\n  /**\n   * Converts `{x, y}` into a useable translation transform.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#gettranslatetransform\n   */\n\n\n  getTranslateTransform() {\n    return [{\n      translateX: this.x\n    }, {\n      translateY: this.y\n    }];\n  }\n\n}\n\nexport default AnimatedValueXY;","map":{"version":3,"names":["AnimatedValue","AnimatedWithChildren","invariant","_uniqueId","AnimatedValueXY","constructor","valueIn","value","x","y","_listeners","setValue","setOffset","offset","flattenOffset","extractOffset","__getValue","resetAnimation","callback","stopAnimation","addListener","id","String","jointCallback","_ref","number","removeListener","removeAllListeners","getLayout","left","top","getTranslateTransform","translateX","translateY"],"sources":["/Users/ilkwon_choi/Downloads/Alcohol/FrontEnd/alcohol-app/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedValueXY.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1;\n/**\n * 2D Value for driving 2D animations, such as pan gestures. Almost identical\n * API to normal `Animated.Value`, but multiplexed.\n *\n * See https://reactnative.dev/docs/animatedvaluexy.html\n */\n\nclass AnimatedValueXY extends AnimatedWithChildren {\n  constructor(valueIn) {\n    super();\n    var value = valueIn || {\n      x: 0,\n      y: 0\n    }; // fixme: shouldn't need `: any`\n\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      this.x = new AnimatedValue(value.x);\n      this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initialized with an object of numbers or ' + 'AnimatedValues.');\n      this.x = value.x;\n      this.y = value.y;\n    }\n\n    this._listeners = {};\n  }\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#setvalue\n   */\n\n\n  setValue(value) {\n    this.x.setValue(value.x);\n    this.y.setValue(value.y);\n  }\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#setoffset\n   */\n\n\n  setOffset(offset) {\n    this.x.setOffset(offset.x);\n    this.y.setOffset(offset.y);\n  }\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#flattenoffset\n   */\n\n\n  flattenOffset() {\n    this.x.flattenOffset();\n    this.y.flattenOffset();\n  }\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#extractoffset\n   */\n\n\n  extractOffset() {\n    this.x.extractOffset();\n    this.y.extractOffset();\n  }\n\n  __getValue() {\n    return {\n      x: this.x.__getValue(),\n      y: this.y.__getValue()\n    };\n  }\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#resetanimation\n   */\n\n\n  resetAnimation(callback) {\n    this.x.resetAnimation();\n    this.y.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#stopanimation\n   */\n\n\n  stopAnimation(callback) {\n    this.x.stopAnimation();\n    this.y.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to synchronously read\n   * the value because it might be driven natively.\n   *\n   * Returns a string that serves as an identifier for the listener.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#addlistener\n   */\n\n\n  addListener(callback) {\n    var id = String(_uniqueId++);\n\n    var jointCallback = _ref => {\n      var number = _ref.value;\n      callback(this.__getValue());\n    };\n\n    this._listeners[id] = {\n      x: this.x.addListener(jointCallback),\n      y: this.y.addListener(jointCallback)\n    };\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#removelistener\n   */\n\n\n  removeListener(id) {\n    this.x.removeListener(this._listeners[id].x);\n    this.y.removeListener(this._listeners[id].y);\n    delete this._listeners[id];\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#removealllisteners\n   */\n\n\n  removeAllListeners() {\n    this.x.removeAllListeners();\n    this.y.removeAllListeners();\n    this._listeners = {};\n  }\n  /**\n   * Converts `{x, y}` into `{left, top}` for use in style.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#getlayout\n   */\n\n\n  getLayout() {\n    return {\n      left: this.x,\n      top: this.y\n    };\n  }\n  /**\n   * Converts `{x, y}` into a useable translation transform.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html#gettranslatetransform\n   */\n\n\n  getTranslateTransform() {\n    return [{\n      translateX: this.x\n    }, {\n      translateY: this.y\n    }];\n  }\n\n}\n\nexport default AnimatedValueXY;"],"mappings":"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"},"metadata":{},"sourceType":"module"}