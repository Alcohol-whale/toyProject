{"ast":null,"code":"'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = function (cache) {\n  // eslint-disable-next-line func-names\n  return function (thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n}(Object.create(null));\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = val && val.buffer && isArrayBuffer(val.buffer);\n  }\n  return result;\n}\n\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\nvar isDate = kindOfTest('Date');\n\n/**\r\n * Determine if a value is a File\r\n *\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\nvar isFile = kindOfTest('File');\n\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\r\n * Determine if a value is a FileList\r\n *\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} thing The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (typeof FormData === 'function' && thing instanceof FormData || toString.call(thing) === pattern || isFunction(thing.toString) && thing.toString() === pattern);\n}\n\n/**\r\n * Determine if a value is a URLSearchParams object\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' || navigator.product === 'NativeScript' || navigator.product === 'NS')) {\n    return false;\n  }\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\nfunction merge( /* obj1, obj2, obj3, ... */\n) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\r\n * Inherit the prototype methods from one constructor into another\r\n * @param {function} constructor\r\n * @param {function} superConstructor\r\n * @param {object} [props]\r\n * @param {object} [descriptors]\r\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\r\n * Resolve object with deep prototype chain to a flat object\r\n * @param {Object} sourceObj source object\r\n * @param {Object} [destObj]\r\n * @param {Function} [filter]\r\n * @returns {Object}\r\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n  destObj = destObj || {};\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n  return destObj;\n}\n\n/*\r\n * determines whether a string ends with the characters of a specified string\r\n * @param {String} str\r\n * @param {String} searchString\r\n * @param {Number} [position= 0]\r\n * @returns {boolean}\r\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n/**\r\n * Returns new array from array like object\r\n * @param {*} [thing]\r\n * @returns {Array}\r\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = function (TypedArray) {\n  // eslint-disable-next-line func-names\n  return function (thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n}(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};","map":{"version":3,"names":["bind","require","toString","Object","prototype","kindOf","cache","thing","str","call","slice","toLowerCase","create","kindOfTest","type","isKindOf","isArray","val","Array","isUndefined","isBuffer","constructor","isArrayBuffer","isArrayBufferView","result","ArrayBuffer","isView","buffer","isString","isNumber","isObject","isPlainObject","getPrototypeOf","isDate","isFile","isBlob","isFileList","isFunction","isStream","pipe","isFormData","pattern","FormData","isURLSearchParams","trim","replace","isStandardBrowserEnv","navigator","product","window","document","forEach","obj","fn","i","l","length","key","hasOwnProperty","merge","assignValue","arguments","extend","a","b","thisArg","stripBOM","content","charCodeAt","inherits","superConstructor","props","descriptors","assign","toFlatObject","sourceObj","destObj","filter","prop","merged","getOwnPropertyNames","endsWith","searchString","position","String","undefined","lastIndex","indexOf","toArray","arr","isTypedArray","TypedArray","Uint8Array","module","exports"],"sources":["C:/Users/dlfrn/Downloads/myToyProj/toyProject/FrontEnd/alcohol-app/node_modules/axios/lib/utils.js"],"sourcesContent":["'use strict';\r\n\r\nvar bind = require('./helpers/bind');\r\n\r\n// utils is a library of generic helper functions non-specific to axios\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n// eslint-disable-next-line func-names\r\nvar kindOf = (function(cache) {\r\n  // eslint-disable-next-line func-names\r\n  return function(thing) {\r\n    var str = toString.call(thing);\r\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\r\n  };\r\n})(Object.create(null));\r\n\r\nfunction kindOfTest(type) {\r\n  type = type.toLowerCase();\r\n  return function isKindOf(thing) {\r\n    return kindOf(thing) === type;\r\n  };\r\n}\r\n\r\n/**\r\n * Determine if a value is an Array\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Array, otherwise false\r\n */\r\nfunction isArray(val) {\r\n  return Array.isArray(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is undefined\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if the value is undefined, otherwise false\r\n */\r\nfunction isUndefined(val) {\r\n  return typeof val === 'undefined';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Buffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Buffer, otherwise false\r\n */\r\nfunction isBuffer(val) {\r\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n}\r\n\r\n/**\r\n * Determine if a value is an ArrayBuffer\r\n *\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n */\r\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\r\n\r\n\r\n/**\r\n * Determine if a value is a view on an ArrayBuffer\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n */\r\nfunction isArrayBufferView(val) {\r\n  var result;\r\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n    result = ArrayBuffer.isView(val);\r\n  } else {\r\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Determine if a value is a String\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a String, otherwise false\r\n */\r\nfunction isString(val) {\r\n  return typeof val === 'string';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Number\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Number, otherwise false\r\n */\r\nfunction isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\n/**\r\n * Determine if a value is an Object\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is an Object, otherwise false\r\n */\r\nfunction isObject(val) {\r\n  return val !== null && typeof val === 'object';\r\n}\r\n\r\n/**\r\n * Determine if a value is a plain Object\r\n *\r\n * @param {Object} val The value to test\r\n * @return {boolean} True if value is a plain Object, otherwise false\r\n */\r\nfunction isPlainObject(val) {\r\n  if (kindOf(val) !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  var prototype = Object.getPrototypeOf(val);\r\n  return prototype === null || prototype === Object.prototype;\r\n}\r\n\r\n/**\r\n * Determine if a value is a Date\r\n *\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Date, otherwise false\r\n */\r\nvar isDate = kindOfTest('Date');\r\n\r\n/**\r\n * Determine if a value is a File\r\n *\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nvar isFile = kindOfTest('File');\r\n\r\n/**\r\n * Determine if a value is a Blob\r\n *\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Blob, otherwise false\r\n */\r\nvar isBlob = kindOfTest('Blob');\r\n\r\n/**\r\n * Determine if a value is a FileList\r\n *\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a File, otherwise false\r\n */\r\nvar isFileList = kindOfTest('FileList');\r\n\r\n/**\r\n * Determine if a value is a Function\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Function, otherwise false\r\n */\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\n/**\r\n * Determine if a value is a Stream\r\n *\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a Stream, otherwise false\r\n */\r\nfunction isStream(val) {\r\n  return isObject(val) && isFunction(val.pipe);\r\n}\r\n\r\n/**\r\n * Determine if a value is a FormData\r\n *\r\n * @param {Object} thing The value to test\r\n * @returns {boolean} True if value is an FormData, otherwise false\r\n */\r\nfunction isFormData(thing) {\r\n  var pattern = '[object FormData]';\r\n  return thing && (\r\n    (typeof FormData === 'function' && thing instanceof FormData) ||\r\n    toString.call(thing) === pattern ||\r\n    (isFunction(thing.toString) && thing.toString() === pattern)\r\n  );\r\n}\r\n\r\n/**\r\n * Determine if a value is a URLSearchParams object\r\n * @function\r\n * @param {Object} val The value to test\r\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n */\r\nvar isURLSearchParams = kindOfTest('URLSearchParams');\r\n\r\n/**\r\n * Trim excess whitespace off the beginning and end of a string\r\n *\r\n * @param {String} str The String to trim\r\n * @returns {String} The String freed of excess whitespace\r\n */\r\nfunction trim(str) {\r\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\r\n}\r\n\r\n/**\r\n * Determine if we're running in a standard browser environment\r\n *\r\n * This allows axios to run in a web worker, and react-native.\r\n * Both environments support XMLHttpRequest, but not fully standard globals.\r\n *\r\n * web workers:\r\n *  typeof window -> undefined\r\n *  typeof document -> undefined\r\n *\r\n * react-native:\r\n *  navigator.product -> 'ReactNative'\r\n * nativescript\r\n *  navigator.product -> 'NativeScript' or 'NS'\r\n */\r\nfunction isStandardBrowserEnv() {\r\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n                                           navigator.product === 'NativeScript' ||\r\n                                           navigator.product === 'NS')) {\r\n    return false;\r\n  }\r\n  return (\r\n    typeof window !== 'undefined' &&\r\n    typeof document !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Iterate over an Array or an Object invoking a function for each item.\r\n *\r\n * If `obj` is an Array callback will be called passing\r\n * the value, index, and complete array for each item.\r\n *\r\n * If 'obj' is an Object callback will be called passing\r\n * the value, key, and complete object for each property.\r\n *\r\n * @param {Object|Array} obj The object to iterate\r\n * @param {Function} fn The callback to invoke for each item\r\n */\r\nfunction forEach(obj, fn) {\r\n  // Don't bother if no value provided\r\n  if (obj === null || typeof obj === 'undefined') {\r\n    return;\r\n  }\r\n\r\n  // Force an array if not already something iterable\r\n  if (typeof obj !== 'object') {\r\n    /*eslint no-param-reassign:0*/\r\n    obj = [obj];\r\n  }\r\n\r\n  if (isArray(obj)) {\r\n    // Iterate over array values\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      fn.call(null, obj[i], i, obj);\r\n    }\r\n  } else {\r\n    // Iterate over object keys\r\n    for (var key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        fn.call(null, obj[key], key, obj);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Accepts varargs expecting each argument to be an object, then\r\n * immutably merges the properties of each object and returns result.\r\n *\r\n * When multiple objects contain the same key the later object in\r\n * the arguments list will take precedence.\r\n *\r\n * Example:\r\n *\r\n * ```js\r\n * var result = merge({foo: 123}, {foo: 456});\r\n * console.log(result.foo); // outputs 456\r\n * ```\r\n *\r\n * @param {Object} obj1 Object to merge\r\n * @returns {Object} Result of all merge properties\r\n */\r\nfunction merge(/* obj1, obj2, obj3, ... */) {\r\n  var result = {};\r\n  function assignValue(val, key) {\r\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\r\n      result[key] = merge(result[key], val);\r\n    } else if (isPlainObject(val)) {\r\n      result[key] = merge({}, val);\r\n    } else if (isArray(val)) {\r\n      result[key] = val.slice();\r\n    } else {\r\n      result[key] = val;\r\n    }\r\n  }\r\n\r\n  for (var i = 0, l = arguments.length; i < l; i++) {\r\n    forEach(arguments[i], assignValue);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Extends object a by mutably adding to it the properties of object b.\r\n *\r\n * @param {Object} a The object to be extended\r\n * @param {Object} b The object to copy properties from\r\n * @param {Object} thisArg The object to bind function to\r\n * @return {Object} The resulting value of object a\r\n */\r\nfunction extend(a, b, thisArg) {\r\n  forEach(b, function assignValue(val, key) {\r\n    if (thisArg && typeof val === 'function') {\r\n      a[key] = bind(val, thisArg);\r\n    } else {\r\n      a[key] = val;\r\n    }\r\n  });\r\n  return a;\r\n}\r\n\r\n/**\r\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\r\n *\r\n * @param {string} content with BOM\r\n * @return {string} content value without BOM\r\n */\r\nfunction stripBOM(content) {\r\n  if (content.charCodeAt(0) === 0xFEFF) {\r\n    content = content.slice(1);\r\n  }\r\n  return content;\r\n}\r\n\r\n/**\r\n * Inherit the prototype methods from one constructor into another\r\n * @param {function} constructor\r\n * @param {function} superConstructor\r\n * @param {object} [props]\r\n * @param {object} [descriptors]\r\n */\r\n\r\nfunction inherits(constructor, superConstructor, props, descriptors) {\r\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\r\n  constructor.prototype.constructor = constructor;\r\n  props && Object.assign(constructor.prototype, props);\r\n}\r\n\r\n/**\r\n * Resolve object with deep prototype chain to a flat object\r\n * @param {Object} sourceObj source object\r\n * @param {Object} [destObj]\r\n * @param {Function} [filter]\r\n * @returns {Object}\r\n */\r\n\r\nfunction toFlatObject(sourceObj, destObj, filter) {\r\n  var props;\r\n  var i;\r\n  var prop;\r\n  var merged = {};\r\n\r\n  destObj = destObj || {};\r\n\r\n  do {\r\n    props = Object.getOwnPropertyNames(sourceObj);\r\n    i = props.length;\r\n    while (i-- > 0) {\r\n      prop = props[i];\r\n      if (!merged[prop]) {\r\n        destObj[prop] = sourceObj[prop];\r\n        merged[prop] = true;\r\n      }\r\n    }\r\n    sourceObj = Object.getPrototypeOf(sourceObj);\r\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\r\n\r\n  return destObj;\r\n}\r\n\r\n/*\r\n * determines whether a string ends with the characters of a specified string\r\n * @param {String} str\r\n * @param {String} searchString\r\n * @param {Number} [position= 0]\r\n * @returns {boolean}\r\n */\r\nfunction endsWith(str, searchString, position) {\r\n  str = String(str);\r\n  if (position === undefined || position > str.length) {\r\n    position = str.length;\r\n  }\r\n  position -= searchString.length;\r\n  var lastIndex = str.indexOf(searchString, position);\r\n  return lastIndex !== -1 && lastIndex === position;\r\n}\r\n\r\n\r\n/**\r\n * Returns new array from array like object\r\n * @param {*} [thing]\r\n * @returns {Array}\r\n */\r\nfunction toArray(thing) {\r\n  if (!thing) return null;\r\n  var i = thing.length;\r\n  if (isUndefined(i)) return null;\r\n  var arr = new Array(i);\r\n  while (i-- > 0) {\r\n    arr[i] = thing[i];\r\n  }\r\n  return arr;\r\n}\r\n\r\n// eslint-disable-next-line func-names\r\nvar isTypedArray = (function(TypedArray) {\r\n  // eslint-disable-next-line func-names\r\n  return function(thing) {\r\n    return TypedArray && thing instanceof TypedArray;\r\n  };\r\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\r\n\r\nmodule.exports = {\r\n  isArray: isArray,\r\n  isArrayBuffer: isArrayBuffer,\r\n  isBuffer: isBuffer,\r\n  isFormData: isFormData,\r\n  isArrayBufferView: isArrayBufferView,\r\n  isString: isString,\r\n  isNumber: isNumber,\r\n  isObject: isObject,\r\n  isPlainObject: isPlainObject,\r\n  isUndefined: isUndefined,\r\n  isDate: isDate,\r\n  isFile: isFile,\r\n  isBlob: isBlob,\r\n  isFunction: isFunction,\r\n  isStream: isStream,\r\n  isURLSearchParams: isURLSearchParams,\r\n  isStandardBrowserEnv: isStandardBrowserEnv,\r\n  forEach: forEach,\r\n  merge: merge,\r\n  extend: extend,\r\n  trim: trim,\r\n  stripBOM: stripBOM,\r\n  inherits: inherits,\r\n  toFlatObject: toFlatObject,\r\n  kindOf: kindOf,\r\n  kindOfTest: kindOfTest,\r\n  endsWith: endsWith,\r\n  toArray: toArray,\r\n  isTypedArray: isTypedArray,\r\n  isFileList: isFileList\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}