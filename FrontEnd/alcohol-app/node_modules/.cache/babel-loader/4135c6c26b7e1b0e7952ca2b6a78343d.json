{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1; // Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\n\nclass AnimatedNode {\n  __attach() {}\n\n  __detach() {\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  }\n\n  __getValue() {}\n\n  __getAnimatedValue() {\n    return this.__getValue();\n  }\n\n  __addChild(child) {}\n\n  __removeChild(child) {}\n\n  __getChildren() {\n    return [];\n  }\n  /* Methods and props used by native Animated impl */\n\n\n  constructor() {\n    this._listeners = {};\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#addlistener\n   */\n\n\n  addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removelistener\n   */\n\n\n  removeListener(id) {\n    delete this._listeners[id];\n\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removealllisteners\n   */\n\n\n  removeAllListeners() {\n    this._listeners = {};\n\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n\n  hasListeners() {\n    return !!Object.keys(this._listeners).length;\n  }\n\n  _startListeningToNativeValueUpdates() {\n    if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n      return;\n    }\n\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n\n      this._stopListeningForNativeValueUpdates();\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', data => {\n      if (data.tag !== this.__getNativeTag()) {\n        return;\n      }\n\n      this._onAnimatedValueUpdateReceived(data.value);\n    });\n  }\n\n  _onAnimatedValueUpdateReceived(value) {\n    this.__callListeners(value);\n  }\n\n  __callListeners(value) {\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value\n      });\n    }\n  }\n\n  _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  }\n\n  __getNativeTag() {\n    var _this$__nativeTag;\n\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n    var nativeTag = (_this$__nativeTag = this.__nativeTag) !== null && _this$__nativeTag !== void 0 ? _this$__nativeTag : NativeAnimatedHelper.generateNewNodeTag();\n\n    if (this.__nativeTag == null) {\n      this.__nativeTag = nativeTag;\n      NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n\n    return nativeTag;\n  }\n\n  __getNativeConfig() {\n    throw new Error('This JS animated node type cannot be used as native animated node');\n  }\n\n  toJSON() {\n    return this.__getValue();\n  }\n\n}\n\nexport default AnimatedNode;","map":{"version":3,"names":["NativeAnimatedHelper","NativeAnimatedAPI","API","invariant","_uniqueId","AnimatedNode","__attach","__detach","__isNative","__nativeTag","dropAnimatedNode","undefined","__getValue","__getAnimatedValue","__addChild","child","__removeChild","__getChildren","constructor","_listeners","__makeNative","Error","hasListeners","_startListeningToNativeValueUpdates","addListener","callback","id","String","removeListener","_stopListeningForNativeValueUpdates","removeAllListeners","Object","keys","length","__nativeAnimatedValueListener","__shouldUpdateListenersForNewNativeTag","startListeningToAnimatedNodeValue","__getNativeTag","nativeEventEmitter","data","tag","_onAnimatedValueUpdateReceived","value","__callListeners","_key","remove","stopListeningToAnimatedNodeValue","_this$__nativeTag","assertNativeAnimatedModule","nativeTag","generateNewNodeTag","createAnimatedNode","__getNativeConfig","toJSON"],"sources":["/Users/ilkwon_choi/Downloads/Alcohol/FrontEnd/alcohol-app/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedNode.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1; // Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\n\nclass AnimatedNode {\n  __attach() {}\n\n  __detach() {\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  }\n\n  __getValue() {}\n\n  __getAnimatedValue() {\n    return this.__getValue();\n  }\n\n  __addChild(child) {}\n\n  __removeChild(child) {}\n\n  __getChildren() {\n    return [];\n  }\n  /* Methods and props used by native Animated impl */\n\n\n  constructor() {\n    this._listeners = {};\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#addlistener\n   */\n\n\n  addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removelistener\n   */\n\n\n  removeListener(id) {\n    delete this._listeners[id];\n\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removealllisteners\n   */\n\n\n  removeAllListeners() {\n    this._listeners = {};\n\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n\n  hasListeners() {\n    return !!Object.keys(this._listeners).length;\n  }\n\n  _startListeningToNativeValueUpdates() {\n    if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n      return;\n    }\n\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n\n      this._stopListeningForNativeValueUpdates();\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', data => {\n      if (data.tag !== this.__getNativeTag()) {\n        return;\n      }\n\n      this._onAnimatedValueUpdateReceived(data.value);\n    });\n  }\n\n  _onAnimatedValueUpdateReceived(value) {\n    this.__callListeners(value);\n  }\n\n  __callListeners(value) {\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value\n      });\n    }\n  }\n\n  _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  }\n\n  __getNativeTag() {\n    var _this$__nativeTag;\n\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n    var nativeTag = (_this$__nativeTag = this.__nativeTag) !== null && _this$__nativeTag !== void 0 ? _this$__nativeTag : NativeAnimatedHelper.generateNewNodeTag();\n\n    if (this.__nativeTag == null) {\n      this.__nativeTag = nativeTag;\n      NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n\n    return nativeTag;\n  }\n\n  __getNativeConfig() {\n    throw new Error('This JS animated node type cannot be used as native animated node');\n  }\n\n  toJSON() {\n    return this.__getValue();\n  }\n\n}\n\nexport default AnimatedNode;"],"mappings":"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"},"metadata":{},"sourceType":"module"}