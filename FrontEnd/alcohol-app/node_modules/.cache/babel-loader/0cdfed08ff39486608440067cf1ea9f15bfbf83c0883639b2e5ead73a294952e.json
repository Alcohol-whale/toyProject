{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1; // Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\n\nclass AnimatedNode {\n  __attach() {}\n  __detach() {\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  }\n  __getValue() {}\n  __getAnimatedValue() {\n    return this.__getValue();\n  }\n  __addChild(child) {}\n  __removeChild(child) {}\n  __getChildren() {\n    return [];\n  }\n  /* Methods and props used by native Animated impl */\n\n  constructor() {\n    this._listeners = {};\n  }\n  __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#addlistener\n   */\n\n  addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removelistener\n   */\n\n  removeListener(id) {\n    delete this._listeners[id];\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removealllisteners\n   */\n\n  removeAllListeners() {\n    this._listeners = {};\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  hasListeners() {\n    return !!Object.keys(this._listeners).length;\n  }\n  _startListeningToNativeValueUpdates() {\n    if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n      return;\n    }\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n      this._stopListeningForNativeValueUpdates();\n    }\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', data => {\n      if (data.tag !== this.__getNativeTag()) {\n        return;\n      }\n      this._onAnimatedValueUpdateReceived(data.value);\n    });\n  }\n  _onAnimatedValueUpdateReceived(value) {\n    this.__callListeners(value);\n  }\n  __callListeners(value) {\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value\n      });\n    }\n  }\n  _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n    this.__nativeAnimatedValueListener.remove();\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  }\n  __getNativeTag() {\n    var _this$__nativeTag;\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n    var nativeTag = (_this$__nativeTag = this.__nativeTag) !== null && _this$__nativeTag !== void 0 ? _this$__nativeTag : NativeAnimatedHelper.generateNewNodeTag();\n    if (this.__nativeTag == null) {\n      this.__nativeTag = nativeTag;\n      NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n    return nativeTag;\n  }\n  __getNativeConfig() {\n    throw new Error('This JS animated node type cannot be used as native animated node');\n  }\n  toJSON() {\n    return this.__getValue();\n  }\n}\nexport default AnimatedNode;","map":{"version":3,"names":["NativeAnimatedHelper","NativeAnimatedAPI","API","invariant","_uniqueId","AnimatedNode","__attach","__detach","__isNative","__nativeTag","dropAnimatedNode","undefined","__getValue","__getAnimatedValue","__addChild","child","__removeChild","__getChildren","constructor","_listeners","__makeNative","Error","hasListeners","_startListeningToNativeValueUpdates","addListener","callback","id","String","removeListener","_stopListeningForNativeValueUpdates","removeAllListeners","Object","keys","length","__nativeAnimatedValueListener","__shouldUpdateListenersForNewNativeTag","startListeningToAnimatedNodeValue","__getNativeTag","nativeEventEmitter","data","tag","_onAnimatedValueUpdateReceived","value","__callListeners","_key","remove","stopListeningToAnimatedNodeValue","_this$__nativeTag","assertNativeAnimatedModule","nativeTag","generateNewNodeTag","createAnimatedNode","__getNativeConfig","toJSON"],"sources":["C:/Users/dlfrn/Downloads/myToyProj/toyProject/FrontEnd/alcohol-app/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedNode.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar NativeAnimatedAPI = NativeAnimatedHelper.API;\nimport invariant from 'fbjs/lib/invariant';\nvar _uniqueId = 1; // Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\n\nclass AnimatedNode {\n  __attach() {}\n\n  __detach() {\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  }\n\n  __getValue() {}\n\n  __getAnimatedValue() {\n    return this.__getValue();\n  }\n\n  __addChild(child) {}\n\n  __removeChild(child) {}\n\n  __getChildren() {\n    return [];\n  }\n  /* Methods and props used by native Animated impl */\n\n\n  constructor() {\n    this._listeners = {};\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#addlistener\n   */\n\n\n  addListener(callback) {\n    var id = String(_uniqueId++);\n    this._listeners[id] = callback;\n\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n\n    return id;\n  }\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removelistener\n   */\n\n\n  removeListener(id) {\n    delete this._listeners[id];\n\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvalue.html#removealllisteners\n   */\n\n\n  removeAllListeners() {\n    this._listeners = {};\n\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n\n  hasListeners() {\n    return !!Object.keys(this._listeners).length;\n  }\n\n  _startListeningToNativeValueUpdates() {\n    if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n      return;\n    }\n\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n\n      this._stopListeningForNativeValueUpdates();\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', data => {\n      if (data.tag !== this.__getNativeTag()) {\n        return;\n      }\n\n      this._onAnimatedValueUpdateReceived(data.value);\n    });\n  }\n\n  _onAnimatedValueUpdateReceived(value) {\n    this.__callListeners(value);\n  }\n\n  __callListeners(value) {\n    for (var _key in this._listeners) {\n      this._listeners[_key]({\n        value\n      });\n    }\n  }\n\n  _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  }\n\n  __getNativeTag() {\n    var _this$__nativeTag;\n\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n    var nativeTag = (_this$__nativeTag = this.__nativeTag) !== null && _this$__nativeTag !== void 0 ? _this$__nativeTag : NativeAnimatedHelper.generateNewNodeTag();\n\n    if (this.__nativeTag == null) {\n      this.__nativeTag = nativeTag;\n      NativeAnimatedHelper.API.createAnimatedNode(nativeTag, this.__getNativeConfig());\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n\n    return nativeTag;\n  }\n\n  __getNativeConfig() {\n    throw new Error('This JS animated node type cannot be used as native animated node');\n  }\n\n  toJSON() {\n    return this.__getValue();\n  }\n\n}\n\nexport default AnimatedNode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}