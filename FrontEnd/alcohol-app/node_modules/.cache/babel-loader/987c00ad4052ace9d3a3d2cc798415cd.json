{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport Platform from '../../../exports/Platform';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'fbjs/lib/invariant';\n/**\n * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n * will be notified (via `addListener` and `removeListeners`) when the listener\n * count changes to manage \"native memory\".\n *\n * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n * This means event names must be globally unique, and it means that call sites\n * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n */\n\nexport default class NativeEventEmitter {\n  constructor(nativeModule) {\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n      this._nativeModule = nativeModule;\n    }\n  }\n\n  addListener(eventType, listener, context) {\n    var _this$_nativeModule;\n\n    (_this$_nativeModule = this._nativeModule) == null ? void 0 : _this$_nativeModule.addListener(eventType);\n    var subscription = RCTDeviceEventEmitter.addListener(eventType, listener, context);\n    return {\n      remove: () => {\n        if (subscription != null) {\n          var _this$_nativeModule2;\n\n          (_this$_nativeModule2 = this._nativeModule) == null ? void 0 : _this$_nativeModule2.removeListeners(1); // $FlowFixMe[incompatible-use]\n\n          subscription.remove();\n          subscription = null;\n        }\n      }\n    };\n  }\n  /**\n   * @deprecated Use `remove` on the EventSubscription from `addListener`.\n   */\n\n\n  removeListener(eventType, listener) {\n    var _this$_nativeModule3;\n\n    (_this$_nativeModule3 = this._nativeModule) == null ? void 0 : _this$_nativeModule3.removeListeners(1); // NOTE: This will report a deprecation notice via `console.error`.\n    // $FlowFixMe[prop-missing] - `removeListener` exists but is deprecated.\n\n    RCTDeviceEventEmitter.removeListener(eventType, listener);\n  }\n\n  emit(eventType) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    } // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n    // included for completeness.\n\n\n    RCTDeviceEventEmitter.emit(eventType, ...args);\n  }\n\n  removeAllListeners(eventType) {\n    var _this$_nativeModule4;\n\n    invariant(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n    (_this$_nativeModule4 = this._nativeModule) == null ? void 0 : _this$_nativeModule4.removeListeners(this.listenerCount(eventType));\n    RCTDeviceEventEmitter.removeAllListeners(eventType);\n  }\n\n  listenerCount(eventType) {\n    return RCTDeviceEventEmitter.listenerCount(eventType);\n  }\n\n}","map":{"version":3,"names":["Platform","RCTDeviceEventEmitter","invariant","NativeEventEmitter","constructor","nativeModule","OS","_nativeModule","addListener","eventType","listener","context","_this$_nativeModule","subscription","remove","_this$_nativeModule2","removeListeners","removeListener","_this$_nativeModule3","emit","_len","arguments","length","args","Array","_key","removeAllListeners","_this$_nativeModule4","listenerCount"],"sources":["/Users/ilkwon_choi/Downloads/Alcohol/FrontEnd/alcohol-app/node_modules/react-native-web/dist/vendor/react-native/NativeEventEmitter/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport Platform from '../../../exports/Platform';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'fbjs/lib/invariant';\n\n/**\n * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n * will be notified (via `addListener` and `removeListeners`) when the listener\n * count changes to manage \"native memory\".\n *\n * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n * This means event names must be globally unique, and it means that call sites\n * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n */\nexport default class NativeEventEmitter {\n  constructor(nativeModule) {\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n      this._nativeModule = nativeModule;\n    }\n  }\n\n  addListener(eventType, listener, context) {\n    var _this$_nativeModule;\n\n    (_this$_nativeModule = this._nativeModule) == null ? void 0 : _this$_nativeModule.addListener(eventType);\n    var subscription = RCTDeviceEventEmitter.addListener(eventType, listener, context);\n    return {\n      remove: () => {\n        if (subscription != null) {\n          var _this$_nativeModule2;\n\n          (_this$_nativeModule2 = this._nativeModule) == null ? void 0 : _this$_nativeModule2.removeListeners(1); // $FlowFixMe[incompatible-use]\n\n          subscription.remove();\n          subscription = null;\n        }\n      }\n    };\n  }\n  /**\n   * @deprecated Use `remove` on the EventSubscription from `addListener`.\n   */\n\n\n  removeListener(eventType, listener) {\n    var _this$_nativeModule3;\n\n    (_this$_nativeModule3 = this._nativeModule) == null ? void 0 : _this$_nativeModule3.removeListeners(1); // NOTE: This will report a deprecation notice via `console.error`.\n    // $FlowFixMe[prop-missing] - `removeListener` exists but is deprecated.\n\n    RCTDeviceEventEmitter.removeListener(eventType, listener);\n  }\n\n  emit(eventType) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n    // included for completeness.\n    RCTDeviceEventEmitter.emit(eventType, ...args);\n  }\n\n  removeAllListeners(eventType) {\n    var _this$_nativeModule4;\n\n    invariant(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n    (_this$_nativeModule4 = this._nativeModule) == null ? void 0 : _this$_nativeModule4.removeListeners(this.listenerCount(eventType));\n    RCTDeviceEventEmitter.removeAllListeners(eventType);\n  }\n\n  listenerCount(eventType) {\n    return RCTDeviceEventEmitter.listenerCount(eventType);\n  }\n\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,QAAP,MAAqB,2BAArB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,kBAAN,CAAyB;EACtCC,WAAW,CAACC,YAAD,EAAe;IACxB,IAAIL,QAAQ,CAACM,EAAT,KAAgB,KAApB,EAA2B;MACzBJ,SAAS,CAACG,YAAY,IAAI,IAAjB,EAAuB,0DAAvB,CAAT;MACA,KAAKE,aAAL,GAAqBF,YAArB;IACD;EACF;;EAEDG,WAAW,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,OAAtB,EAA+B;IACxC,IAAIC,mBAAJ;;IAEA,CAACA,mBAAmB,GAAG,KAAKL,aAA5B,KAA8C,IAA9C,GAAqD,KAAK,CAA1D,GAA8DK,mBAAmB,CAACJ,WAApB,CAAgCC,SAAhC,CAA9D;IACA,IAAII,YAAY,GAAGZ,qBAAqB,CAACO,WAAtB,CAAkCC,SAAlC,EAA6CC,QAA7C,EAAuDC,OAAvD,CAAnB;IACA,OAAO;MACLG,MAAM,EAAE,MAAM;QACZ,IAAID,YAAY,IAAI,IAApB,EAA0B;UACxB,IAAIE,oBAAJ;;UAEA,CAACA,oBAAoB,GAAG,KAAKR,aAA7B,KAA+C,IAA/C,GAAsD,KAAK,CAA3D,GAA+DQ,oBAAoB,CAACC,eAArB,CAAqC,CAArC,CAA/D,CAHwB,CAGgF;;UAExGH,YAAY,CAACC,MAAb;UACAD,YAAY,GAAG,IAAf;QACD;MACF;IAVI,CAAP;EAYD;EACD;AACF;AACA;;;EAGEI,cAAc,CAACR,SAAD,EAAYC,QAAZ,EAAsB;IAClC,IAAIQ,oBAAJ;;IAEA,CAACA,oBAAoB,GAAG,KAAKX,aAA7B,KAA+C,IAA/C,GAAsD,KAAK,CAA3D,GAA+DW,oBAAoB,CAACF,eAArB,CAAqC,CAArC,CAA/D,CAHkC,CAGsE;IACxG;;IAEAf,qBAAqB,CAACgB,cAAtB,CAAqCR,SAArC,EAAgDC,QAAhD;EACD;;EAEDS,IAAI,CAACV,SAAD,EAAY;IACd,KAAK,IAAIW,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEK,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGL,IAA9F,EAAoGK,IAAI,EAAxG,EAA4G;MAC1GF,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;IACD,CAHa,CAKd;IACA;;;IACAxB,qBAAqB,CAACkB,IAAtB,CAA2BV,SAA3B,EAAsC,GAAGc,IAAzC;EACD;;EAEDG,kBAAkB,CAACjB,SAAD,EAAY;IAC5B,IAAIkB,oBAAJ;;IAEAzB,SAAS,CAACO,SAAS,IAAI,IAAd,EAAoB,wEAApB,CAAT;IACA,CAACkB,oBAAoB,GAAG,KAAKpB,aAA7B,KAA+C,IAA/C,GAAsD,KAAK,CAA3D,GAA+DoB,oBAAoB,CAACX,eAArB,CAAqC,KAAKY,aAAL,CAAmBnB,SAAnB,CAArC,CAA/D;IACAR,qBAAqB,CAACyB,kBAAtB,CAAyCjB,SAAzC;EACD;;EAEDmB,aAAa,CAACnB,SAAD,EAAY;IACvB,OAAOR,qBAAqB,CAAC2B,aAAtB,CAAoCnB,SAApC,CAAP;EACD;;AA5DqC"},"metadata":{},"sourceType":"module"}