{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent } from '../AnimatedEvent';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedStyle from './AnimatedStyle';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport findNodeHandle from '../../../../exports/findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, callback) {\n    super();\n\n    if (props.style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: new AnimatedStyle(props.style)\n      });\n    }\n\n    this._props = props;\n    this._callback = callback;\n\n    this.__attach();\n  }\n\n  __getValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative || value instanceof AnimatedStyle) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          props[key] = value.__getValue();\n        }\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n\n    return props;\n  }\n\n  __getAnimatedValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n\n    return props;\n  }\n\n  __attach() {\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n\n    super.__detach();\n  }\n\n  update() {\n    this._callback();\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n\n    this._animatedView = animatedView;\n\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __disconnectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __restoreDefaultValues() {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n\n  __getNativeConfig() {\n    var propsConfig = {};\n\n    for (var propKey in this._props) {\n      var value = this._props[propKey];\n\n      if (value instanceof AnimatedNode) {\n        value.__makeNative();\n\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n\n    return {\n      type: 'props',\n      props: propsConfig\n    };\n  }\n\n}\n\nexport default AnimatedProps;","map":{"version":3,"names":["_objectSpread","AnimatedEvent","AnimatedNode","AnimatedStyle","NativeAnimatedHelper","findNodeHandle","invariant","AnimatedProps","constructor","props","callback","style","_props","_callback","__attach","__getValue","key","value","__isNative","__getHandler","__getAnimatedValue","__addChild","__detach","_animatedView","__disconnectAnimatedView","__removeChild","update","__makeNative","__connectAnimatedView","setNativeView","animatedView","nativeViewTag","API","connectAnimatedNodeToView","__getNativeTag","disconnectAnimatedNodeFromView","__restoreDefaultValues","restoreDefaultValues","__getNativeConfig","propsConfig","propKey","type"],"sources":["/Users/ilkwon_choi/Downloads/Alcohol/FrontEnd/alcohol-app/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedProps.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent } from '../AnimatedEvent';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedStyle from './AnimatedStyle';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport findNodeHandle from '../../../../exports/findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, callback) {\n    super();\n\n    if (props.style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: new AnimatedStyle(props.style)\n      });\n    }\n\n    this._props = props;\n    this._callback = callback;\n\n    this.__attach();\n  }\n\n  __getValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative || value instanceof AnimatedStyle) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          props[key] = value.__getValue();\n        }\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n\n    return props;\n  }\n\n  __getAnimatedValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n\n    return props;\n  }\n\n  __attach() {\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n\n    super.__detach();\n  }\n\n  update() {\n    this._callback();\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n\n    this._animatedView = animatedView;\n\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __disconnectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __restoreDefaultValues() {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n\n  __getNativeConfig() {\n    var propsConfig = {};\n\n    for (var propKey in this._props) {\n      var value = this._props[propKey];\n\n      if (value instanceof AnimatedNode) {\n        value.__makeNative();\n\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n\n    return {\n      type: 'props',\n      props: propsConfig\n    };\n  }\n\n}\n\nexport default AnimatedProps;"],"mappings":"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"},"metadata":{},"sourceType":"module"}