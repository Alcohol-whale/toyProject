{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport EventEmitter from '../../vendor/react-native/emitter/_EventEmitter';\nimport canUseDOM from '../../modules/canUseDom'; // Android 4.4 browser\n\nvar isPrefixed = canUseDOM && !document.hasOwnProperty('hidden') && document.hasOwnProperty('webkitHidden');\nvar EVENT_TYPES = ['change', 'memoryWarning'];\nvar VISIBILITY_CHANGE_EVENT = isPrefixed ? 'webkitvisibilitychange' : 'visibilitychange';\nvar VISIBILITY_STATE_PROPERTY = isPrefixed ? 'webkitVisibilityState' : 'visibilityState';\nvar AppStates = {\n  BACKGROUND: 'background',\n  ACTIVE: 'active'\n};\nvar changeEmitter = null;\nexport default class AppState {\n  static get currentState() {\n    if (!AppState.isAvailable) {\n      return AppStates.ACTIVE;\n    }\n\n    switch (document[VISIBILITY_STATE_PROPERTY]) {\n      case 'hidden':\n      case 'prerender':\n      case 'unloaded':\n        return AppStates.BACKGROUND;\n\n      default:\n        return AppStates.ACTIVE;\n    }\n  }\n\n  static addEventListener(type, handler) {\n    if (AppState.isAvailable) {\n      invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to subscribe to unknown event: \"%s\"', type);\n\n      if (type === 'change') {\n        if (!changeEmitter) {\n          changeEmitter = new EventEmitter();\n          document.addEventListener(VISIBILITY_CHANGE_EVENT, () => {\n            if (changeEmitter) {\n              changeEmitter.emit('change', AppState.currentState);\n            }\n          }, false);\n        }\n\n        return changeEmitter.addListener(type, handler);\n      }\n    }\n  }\n\n  static removeEventListener(type, handler) {\n    if (AppState.isAvailable) {\n      console.error(\"AppState.removeListener('\" + type + \"', ...): Method has been \" + 'deprecated. Please instead use `remove()` on the subscription ' + 'returned by `AppState.addEventListener`.');\n      invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to remove listener for unknown event: \"%s\"', type);\n\n      if (type === 'change' && changeEmitter) {\n        changeEmitter.removeListener(handler);\n      }\n    }\n  }\n\n}\nAppState.isAvailable = canUseDOM && document[VISIBILITY_STATE_PROPERTY];","map":{"version":3,"names":["invariant","EventEmitter","canUseDOM","isPrefixed","document","hasOwnProperty","EVENT_TYPES","VISIBILITY_CHANGE_EVENT","VISIBILITY_STATE_PROPERTY","AppStates","BACKGROUND","ACTIVE","changeEmitter","AppState","currentState","isAvailable","addEventListener","type","handler","indexOf","emit","addListener","removeEventListener","console","error","removeListener"],"sources":["/Users/ilkwon_choi/Downloads/Alcohol/FrontEnd/alcohol-app/node_modules/react-native-web/dist/exports/AppState/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport EventEmitter from '../../vendor/react-native/emitter/_EventEmitter';\nimport canUseDOM from '../../modules/canUseDom'; // Android 4.4 browser\n\nvar isPrefixed = canUseDOM && !document.hasOwnProperty('hidden') && document.hasOwnProperty('webkitHidden');\nvar EVENT_TYPES = ['change', 'memoryWarning'];\nvar VISIBILITY_CHANGE_EVENT = isPrefixed ? 'webkitvisibilitychange' : 'visibilitychange';\nvar VISIBILITY_STATE_PROPERTY = isPrefixed ? 'webkitVisibilityState' : 'visibilityState';\nvar AppStates = {\n  BACKGROUND: 'background',\n  ACTIVE: 'active'\n};\nvar changeEmitter = null;\nexport default class AppState {\n  static get currentState() {\n    if (!AppState.isAvailable) {\n      return AppStates.ACTIVE;\n    }\n\n    switch (document[VISIBILITY_STATE_PROPERTY]) {\n      case 'hidden':\n      case 'prerender':\n      case 'unloaded':\n        return AppStates.BACKGROUND;\n\n      default:\n        return AppStates.ACTIVE;\n    }\n  }\n\n  static addEventListener(type, handler) {\n    if (AppState.isAvailable) {\n      invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to subscribe to unknown event: \"%s\"', type);\n\n      if (type === 'change') {\n        if (!changeEmitter) {\n          changeEmitter = new EventEmitter();\n          document.addEventListener(VISIBILITY_CHANGE_EVENT, () => {\n            if (changeEmitter) {\n              changeEmitter.emit('change', AppState.currentState);\n            }\n          }, false);\n        }\n\n        return changeEmitter.addListener(type, handler);\n      }\n    }\n  }\n\n  static removeEventListener(type, handler) {\n    if (AppState.isAvailable) {\n      console.error(\"AppState.removeListener('\" + type + \"', ...): Method has been \" + 'deprecated. Please instead use `remove()` on the subscription ' + 'returned by `AppState.addEventListener`.');\n      invariant(EVENT_TYPES.indexOf(type) !== -1, 'Trying to remove listener for unknown event: \"%s\"', type);\n\n      if (type === 'change' && changeEmitter) {\n        changeEmitter.removeListener(handler);\n      }\n    }\n  }\n\n}\nAppState.isAvailable = canUseDOM && document[VISIBILITY_STATE_PROPERTY];"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,iDAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CAAiD;;AAEjD,IAAIC,UAAU,GAAGD,SAAS,IAAI,CAACE,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAd,IAAmDD,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAApE;AACA,IAAIC,WAAW,GAAG,CAAC,QAAD,EAAW,eAAX,CAAlB;AACA,IAAIC,uBAAuB,GAAGJ,UAAU,GAAG,wBAAH,GAA8B,kBAAtE;AACA,IAAIK,yBAAyB,GAAGL,UAAU,GAAG,uBAAH,GAA6B,iBAAvE;AACA,IAAIM,SAAS,GAAG;EACdC,UAAU,EAAE,YADE;EAEdC,MAAM,EAAE;AAFM,CAAhB;AAIA,IAAIC,aAAa,GAAG,IAApB;AACA,eAAe,MAAMC,QAAN,CAAe;EACL,WAAZC,YAAY,GAAG;IACxB,IAAI,CAACD,QAAQ,CAACE,WAAd,EAA2B;MACzB,OAAON,SAAS,CAACE,MAAjB;IACD;;IAED,QAAQP,QAAQ,CAACI,yBAAD,CAAhB;MACE,KAAK,QAAL;MACA,KAAK,WAAL;MACA,KAAK,UAAL;QACE,OAAOC,SAAS,CAACC,UAAjB;;MAEF;QACE,OAAOD,SAAS,CAACE,MAAjB;IAPJ;EASD;;EAEsB,OAAhBK,gBAAgB,CAACC,IAAD,EAAOC,OAAP,EAAgB;IACrC,IAAIL,QAAQ,CAACE,WAAb,EAA0B;MACxBf,SAAS,CAACM,WAAW,CAACa,OAAZ,CAAoBF,IAApB,MAA8B,CAAC,CAAhC,EAAmC,4CAAnC,EAAiFA,IAAjF,CAAT;;MAEA,IAAIA,IAAI,KAAK,QAAb,EAAuB;QACrB,IAAI,CAACL,aAAL,EAAoB;UAClBA,aAAa,GAAG,IAAIX,YAAJ,EAAhB;UACAG,QAAQ,CAACY,gBAAT,CAA0BT,uBAA1B,EAAmD,MAAM;YACvD,IAAIK,aAAJ,EAAmB;cACjBA,aAAa,CAACQ,IAAd,CAAmB,QAAnB,EAA6BP,QAAQ,CAACC,YAAtC;YACD;UACF,CAJD,EAIG,KAJH;QAKD;;QAED,OAAOF,aAAa,CAACS,WAAd,CAA0BJ,IAA1B,EAAgCC,OAAhC,CAAP;MACD;IACF;EACF;;EAEyB,OAAnBI,mBAAmB,CAACL,IAAD,EAAOC,OAAP,EAAgB;IACxC,IAAIL,QAAQ,CAACE,WAAb,EAA0B;MACxBQ,OAAO,CAACC,KAAR,CAAc,8BAA8BP,IAA9B,GAAqC,2BAArC,GAAmE,gEAAnE,GAAsI,0CAApJ;MACAjB,SAAS,CAACM,WAAW,CAACa,OAAZ,CAAoBF,IAApB,MAA8B,CAAC,CAAhC,EAAmC,mDAAnC,EAAwFA,IAAxF,CAAT;;MAEA,IAAIA,IAAI,KAAK,QAAT,IAAqBL,aAAzB,EAAwC;QACtCA,aAAa,CAACa,cAAd,CAA6BP,OAA7B;MACD;IACF;EACF;;AA7C2B;AAgD9BL,QAAQ,CAACE,WAAT,GAAuBb,SAAS,IAAIE,QAAQ,CAACI,yBAAD,CAA5C"},"metadata":{},"sourceType":"module"}