{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\nvar shouldInit = canUseDOM;\nexport default class Dimensions {\n  static get(dimension) {\n    if (shouldInit) {\n      shouldInit = false;\n\n      Dimensions._update();\n    }\n\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  }\n\n  static set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  }\n\n  static _update() {\n    if (!canUseDOM) {\n      return;\n    }\n\n    var win = window;\n    var docEl = win.document.documentElement;\n    dimensions.window = {\n      fontScale: 1,\n      height: docEl.clientHeight,\n      scale: win.devicePixelRatio || 1,\n      width: docEl.clientWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(handler => handler(dimensions));\n    }\n  }\n\n  static addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n    return {\n      remove: () => {\n        this.removeEventListener(type, handler);\n      }\n    };\n  }\n\n  static removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(_handler => _handler !== handler);\n    }\n  }\n\n}\n\nif (canUseDOM) {\n  window.addEventListener('resize', Dimensions._update, false);\n}","map":{"version":3,"names":["invariant","canUseDOM","dimensions","window","fontScale","height","scale","width","screen","listeners","shouldInit","Dimensions","get","dimension","_update","set","initialDimensions","win","docEl","document","documentElement","clientHeight","devicePixelRatio","clientWidth","Array","isArray","forEach","handler","addEventListener","type","push","remove","removeEventListener","filter","_handler"],"sources":["/Users/ilkwon_choi/Downloads/Alcohol/FrontEnd/alcohol-app/node_modules/react-native-web/dist/exports/Dimensions/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\nvar shouldInit = canUseDOM;\nexport default class Dimensions {\n  static get(dimension) {\n    if (shouldInit) {\n      shouldInit = false;\n\n      Dimensions._update();\n    }\n\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  }\n\n  static set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  }\n\n  static _update() {\n    if (!canUseDOM) {\n      return;\n    }\n\n    var win = window;\n    var docEl = win.document.documentElement;\n    dimensions.window = {\n      fontScale: 1,\n      height: docEl.clientHeight,\n      scale: win.devicePixelRatio || 1,\n      width: docEl.clientWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(handler => handler(dimensions));\n    }\n  }\n\n  static addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n    return {\n      remove: () => {\n        this.removeEventListener(type, handler);\n      }\n    };\n  }\n\n  static removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(_handler => _handler !== handler);\n    }\n  }\n\n}\n\nif (canUseDOM) {\n  window.addEventListener('resize', Dimensions._update, false);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}