{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar initialURL = canUseDOM ? window.location.href : '';\nclass Linking {\n  constructor() {\n    this._eventCallbacks = {};\n    this.addEventListener = (event, callback) => {\n      if (!this._eventCallbacks[event]) {\n        this._eventCallbacks[event] = [callback];\n        return;\n      }\n      this._eventCallbacks[event].push(callback);\n    };\n    this.removeEventListener = (event, callback) => {\n      var callbacks = this._eventCallbacks[event];\n      var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n      this._eventCallbacks[event] = filteredCallbacks;\n    };\n  }\n  _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n    var listeners = this._eventCallbacks[event];\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(listener => {\n        listener(...data);\n      });\n    }\n  }\n  /**\n   * Adds a event listener for the specified event. The callback will be called when the\n   * said event is dispatched.\n   */\n\n  canOpenURL() {\n    return Promise.resolve(true);\n  }\n  getInitialURL() {\n    return Promise.resolve(initialURL);\n  }\n  /**\n   * Try to open the given url in a secure fashion. The method returns a Promise object.\n   * If a target is passed (including undefined) that target will be used, otherwise '_blank'.\n   * If the url opens, the promise is resolved. If not, the promise is rejected.\n   * Dispatches the `onOpen` event if `url` is opened successfully.\n   */\n\n  openURL(url, target) {\n    if (arguments.length === 1) {\n      target = '_blank';\n    }\n    try {\n      open(url, target);\n      this._dispatchEvent('onOpen', url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n}\nvar open = (url, target) => {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, target, 'noopener');\n    }\n  }\n};\nexport default new Linking();","map":{"version":3,"names":["invariant","canUseDOM","initialURL","window","location","href","Linking","constructor","_eventCallbacks","addEventListener","event","callback","push","removeEventListener","callbacks","filteredCallbacks","filter","c","toString","_dispatchEvent","_len","arguments","length","data","Array","_key","listeners","isArray","map","listener","canOpenURL","Promise","resolve","getInitialURL","openURL","url","target","open","e","reject","_validateURL","urlToOpen","URL","indexOf"],"sources":["C:/Users/dlfrn/Downloads/myToyProj/toyProject/FrontEnd/alcohol-app/node_modules/react-native-web/dist/exports/Linking/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar initialURL = canUseDOM ? window.location.href : '';\n\nclass Linking {\n  constructor() {\n    this._eventCallbacks = {};\n\n    this.addEventListener = (event, callback) => {\n      if (!this._eventCallbacks[event]) {\n        this._eventCallbacks[event] = [callback];\n        return;\n      }\n\n      this._eventCallbacks[event].push(callback);\n    };\n\n    this.removeEventListener = (event, callback) => {\n      var callbacks = this._eventCallbacks[event];\n      var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n      this._eventCallbacks[event] = filteredCallbacks;\n    };\n  }\n\n  _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n\n    var listeners = this._eventCallbacks[event];\n\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(listener => {\n        listener(...data);\n      });\n    }\n  }\n  /**\n   * Adds a event listener for the specified event. The callback will be called when the\n   * said event is dispatched.\n   */\n\n\n  canOpenURL() {\n    return Promise.resolve(true);\n  }\n\n  getInitialURL() {\n    return Promise.resolve(initialURL);\n  }\n  /**\n   * Try to open the given url in a secure fashion. The method returns a Promise object.\n   * If a target is passed (including undefined) that target will be used, otherwise '_blank'.\n   * If the url opens, the promise is resolved. If not, the promise is rejected.\n   * Dispatches the `onOpen` event if `url` is opened successfully.\n   */\n\n\n  openURL(url, target) {\n    if (arguments.length === 1) {\n      target = '_blank';\n    }\n\n    try {\n      open(url, target);\n\n      this._dispatchEvent('onOpen', url);\n\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n\n}\n\nvar open = (url, target) => {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, target, 'noopener');\n    }\n  }\n};\n\nexport default new Linking();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}