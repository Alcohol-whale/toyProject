{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"numColumns\", \"columnWrapperStyle\", \"removeClippedSubviews\"];\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport Platform from '../../../exports/Platform';\nimport deepDiffer from '../deepDiffer';\nimport * as React from 'react';\nimport View from '../../../exports/View';\nimport VirtualizedList from '../VirtualizedList';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport invariant from 'fbjs/lib/invariant';\nimport { keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n// removeClippedSubviewsOrDefault(this.props.removeClippedSubviews)\n\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews) {\n  return removeClippedSubviews !== null && removeClippedSubviews !== void 0 ? removeClippedSubviews : Platform.OS === 'android';\n} // numColumnsOrDefault(this.props.numColumns)\n\n\nfunction numColumnsOrDefault(numColumns) {\n  return numColumns !== null && numColumns !== void 0 ? numColumns : 1;\n}\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\n\n\nclass FlatList extends React.PureComponent {\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  scrollToEnd(params) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n\n\n  scrollToIndex(params) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n\n\n  scrollToItem(params) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n\n\n  scrollToOffset(params) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n\n\n  recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n\n\n  flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n\n\n  getScrollResponder() {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  }\n  /**\n   * Provides a reference to the underlying host component\n   */\n\n\n  getNativeScrollRef() {\n    if (this._listRef) {\n      /* $FlowFixMe[incompatible-return] Suppresses errors found when fixing\n       * TextInput typing */\n      return this._listRef.getScrollRef();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  }\n\n  setNativeProps(props) {\n    if (this._listRef) {\n      this._listRef.setNativeProps(props);\n    }\n  }\n\n  constructor(_props) {\n    super(_props);\n    this._virtualizedListPairs = [];\n\n    this._captureRef = ref => {\n      this._listRef = ref;\n    };\n\n    this._getItem = (data, index) => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n\n      if (numColumns > 1) {\n        var ret = [];\n\n        for (var kk = 0; kk < numColumns; kk++) {\n          var _item = data[index * numColumns + kk];\n\n          if (_item != null) {\n            ret.push(_item);\n          }\n        }\n\n        return ret;\n      } else {\n        return data[index];\n      }\n    };\n\n    this._getItemCount = data => {\n      if (data) {\n        var numColumns = numColumnsOrDefault(this.props.numColumns);\n        return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n      } else {\n        return 0;\n      }\n    };\n\n    this._keyExtractor = (items, index) => {\n      var _this$props$keyExtrac;\n\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var keyExtractor = (_this$props$keyExtrac = this.props.keyExtractor) !== null && _this$props$keyExtrac !== void 0 ? _this$props$keyExtrac : defaultKeyExtractor;\n\n      if (numColumns > 1) {\n        if (Array.isArray(items)) {\n          return items.map((item, kk) => keyExtractor(item, index * numColumns + kk)).join(':');\n        } else {\n          invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);\n        }\n      } else {\n        // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array\n        return keyExtractor(items, index);\n      }\n    };\n\n    this._renderer = () => {\n      var _this$props = this.props,\n          ListItemComponent = _this$props.ListItemComponent,\n          renderItem = _this$props.renderItem,\n          columnWrapperStyle = _this$props.columnWrapperStyle;\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var virtualizedListRenderKey = ListItemComponent ? 'ListItemComponent' : 'renderItem';\n\n      var renderer = props => {\n        if (ListItemComponent) {\n          // $FlowFixMe[not-a-component] Component isn't valid\n          // $FlowFixMe[incompatible-type-arg] Component isn't valid\n          // $FlowFixMe[incompatible-return] Component isn't valid\n          return /*#__PURE__*/React.createElement(ListItemComponent, props);\n        } else if (renderItem) {\n          // $FlowFixMe[incompatible-call]\n          return renderItem(props);\n        } else {\n          return null;\n        }\n      };\n\n      return {\n        /* $FlowFixMe[invalid-computed-prop] (>=0.111.0 site=react_native_fb)\n         * This comment suppresses an error found when Flow v0.111 was deployed.\n         * To see the error, delete this comment and run Flow. */\n        [virtualizedListRenderKey]: info => {\n          if (numColumns > 1) {\n            var _item2 = info.item,\n                _index = info.index;\n            invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');\n            return /*#__PURE__*/React.createElement(View, {\n              style: StyleSheet.compose(styles.row, columnWrapperStyle)\n            }, _item2.map((it, kk) => {\n              var element = renderer({\n                item: it,\n                index: _index * numColumns + kk,\n                separators: info.separators\n              });\n              return element != null ? /*#__PURE__*/React.createElement(React.Fragment, {\n                key: kk\n              }, element) : null;\n            }));\n          } else {\n            return renderer(info);\n          }\n        }\n      };\n    };\n\n    this._checkProps(this.props);\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._virtualizedListPairs = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityConfig: pair.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(pair.onViewableItemsChanged)\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._virtualizedListPairs.push({\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        viewabilityConfig: this.props.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(this.props.onViewableItemsChanged)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    invariant(prevProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');\n    invariant(prevProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');\n    invariant(!deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig), 'Changing viewabilityConfig on the fly is not supported');\n    invariant(prevProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');\n\n    this._checkProps(this.props);\n  }\n\n  _checkProps(props) {\n    var getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        horizontal = props.horizontal,\n        columnWrapperStyle = props.columnWrapperStyle,\n        onViewableItemsChanged = props.onViewableItemsChanged,\n        viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');\n\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');\n    }\n\n    invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');\n  }\n\n  _pushMultiColumnViewable(arr, v) {\n    var _this$props$keyExtrac2;\n\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    var keyExtractor = (_this$props$keyExtrac2 = this.props.keyExtractor) !== null && _this$props$keyExtrac2 !== void 0 ? _this$props$keyExtrac2 : defaultKeyExtractor;\n    v.item.forEach((item, ii) => {\n      invariant(v.index != null, 'Missing index!');\n      var index = v.index * numColumns + ii;\n      arr.push(_objectSpread(_objectSpread({}, v), {}, {\n        item,\n        key: keyExtractor(item, index),\n        index\n      }));\n    });\n  }\n\n  _createOnViewableItemsChanged(onViewableItemsChanged) {\n    return info => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          var changed = [];\n          var viewableItems = [];\n          info.viewableItems.forEach(v => this._pushMultiColumnViewable(viewableItems, v));\n          info.changed.forEach(v => this._pushMultiColumnViewable(changed, v));\n          onViewableItemsChanged({\n            viewableItems,\n            changed\n          });\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  }\n\n  render() {\n    var _this$props2 = this.props,\n        numColumns = _this$props2.numColumns,\n        columnWrapperStyle = _this$props2.columnWrapperStyle,\n        _removeClippedSubviews = _this$props2.removeClippedSubviews,\n        restProps = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n\n    return /*#__PURE__*/React.createElement(VirtualizedList, _extends({}, restProps, {\n      getItem: this._getItem,\n      getItemCount: this._getItemCount,\n      keyExtractor: this._keyExtractor,\n      ref: this._captureRef,\n      viewabilityConfigCallbackPairs: this._virtualizedListPairs,\n      removeClippedSubviews: removeClippedSubviewsOrDefault(_removeClippedSubviews)\n    }, this._renderer()));\n  }\n\n}\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  }\n});\nexport default FlatList;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_objectSpread","_excluded","Platform","deepDiffer","React","View","VirtualizedList","StyleSheet","invariant","keyExtractor","defaultKeyExtractor","removeClippedSubviewsOrDefault","removeClippedSubviews","OS","numColumnsOrDefault","numColumns","FlatList","PureComponent","scrollToEnd","params","_listRef","scrollToIndex","scrollToItem","scrollToOffset","recordInteraction","flashScrollIndicators","getScrollResponder","getNativeScrollRef","getScrollRef","getScrollableNode","setNativeProps","props","constructor","_props","_virtualizedListPairs","_captureRef","ref","_getItem","data","index","ret","kk","_item","push","_getItemCount","Math","ceil","length","_keyExtractor","items","_this$props$keyExtrac","Array","isArray","map","item","join","_renderer","_this$props","ListItemComponent","renderItem","columnWrapperStyle","virtualizedListRenderKey","renderer","createElement","info","_item2","_index","style","compose","styles","row","it","element","separators","Fragment","key","_checkProps","viewabilityConfigCallbackPairs","pair","viewabilityConfig","onViewableItemsChanged","_createOnViewableItemsChanged","componentDidUpdate","prevProps","getItem","getItemCount","horizontal","_pushMultiColumnViewable","arr","v","_this$props$keyExtrac2","forEach","ii","changed","viewableItems","render","_this$props2","_removeClippedSubviews","restProps","create","flexDirection"],"sources":["/Users/ilkwon_choi/Downloads/Alcohol/FrontEnd/alcohol-app/node_modules/react-native-web/dist/vendor/react-native/FlatList/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"numColumns\", \"columnWrapperStyle\", \"removeClippedSubviews\"];\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport Platform from '../../../exports/Platform';\nimport deepDiffer from '../deepDiffer';\nimport * as React from 'react';\nimport View from '../../../exports/View';\nimport VirtualizedList from '../VirtualizedList';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport invariant from 'fbjs/lib/invariant';\nimport { keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n// removeClippedSubviewsOrDefault(this.props.removeClippedSubviews)\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews) {\n  return removeClippedSubviews !== null && removeClippedSubviews !== void 0 ? removeClippedSubviews : Platform.OS === 'android';\n} // numColumnsOrDefault(this.props.numColumns)\n\n\nfunction numColumnsOrDefault(numColumns) {\n  return numColumns !== null && numColumns !== void 0 ? numColumns : 1;\n}\n\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nclass FlatList extends React.PureComponent {\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  scrollToEnd(params) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n\n\n  scrollToIndex(params) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n\n\n  scrollToItem(params) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n\n\n  scrollToOffset(params) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n\n\n  recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n\n\n  flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n\n\n  getScrollResponder() {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  }\n  /**\n   * Provides a reference to the underlying host component\n   */\n\n\n  getNativeScrollRef() {\n    if (this._listRef) {\n      /* $FlowFixMe[incompatible-return] Suppresses errors found when fixing\n       * TextInput typing */\n      return this._listRef.getScrollRef();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  }\n\n  setNativeProps(props) {\n    if (this._listRef) {\n      this._listRef.setNativeProps(props);\n    }\n  }\n\n  constructor(_props) {\n    super(_props);\n    this._virtualizedListPairs = [];\n\n    this._captureRef = ref => {\n      this._listRef = ref;\n    };\n\n    this._getItem = (data, index) => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n\n      if (numColumns > 1) {\n        var ret = [];\n\n        for (var kk = 0; kk < numColumns; kk++) {\n          var _item = data[index * numColumns + kk];\n\n          if (_item != null) {\n            ret.push(_item);\n          }\n        }\n\n        return ret;\n      } else {\n        return data[index];\n      }\n    };\n\n    this._getItemCount = data => {\n      if (data) {\n        var numColumns = numColumnsOrDefault(this.props.numColumns);\n        return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n      } else {\n        return 0;\n      }\n    };\n\n    this._keyExtractor = (items, index) => {\n      var _this$props$keyExtrac;\n\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var keyExtractor = (_this$props$keyExtrac = this.props.keyExtractor) !== null && _this$props$keyExtrac !== void 0 ? _this$props$keyExtrac : defaultKeyExtractor;\n\n      if (numColumns > 1) {\n        if (Array.isArray(items)) {\n          return items.map((item, kk) => keyExtractor(item, index * numColumns + kk)).join(':');\n        } else {\n          invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);\n        }\n      } else {\n        // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array\n        return keyExtractor(items, index);\n      }\n    };\n\n    this._renderer = () => {\n      var _this$props = this.props,\n          ListItemComponent = _this$props.ListItemComponent,\n          renderItem = _this$props.renderItem,\n          columnWrapperStyle = _this$props.columnWrapperStyle;\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var virtualizedListRenderKey = ListItemComponent ? 'ListItemComponent' : 'renderItem';\n\n      var renderer = props => {\n        if (ListItemComponent) {\n          // $FlowFixMe[not-a-component] Component isn't valid\n          // $FlowFixMe[incompatible-type-arg] Component isn't valid\n          // $FlowFixMe[incompatible-return] Component isn't valid\n          return /*#__PURE__*/React.createElement(ListItemComponent, props);\n        } else if (renderItem) {\n          // $FlowFixMe[incompatible-call]\n          return renderItem(props);\n        } else {\n          return null;\n        }\n      };\n\n      return {\n        /* $FlowFixMe[invalid-computed-prop] (>=0.111.0 site=react_native_fb)\n         * This comment suppresses an error found when Flow v0.111 was deployed.\n         * To see the error, delete this comment and run Flow. */\n        [virtualizedListRenderKey]: info => {\n          if (numColumns > 1) {\n            var _item2 = info.item,\n                _index = info.index;\n            invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');\n            return /*#__PURE__*/React.createElement(View, {\n              style: StyleSheet.compose(styles.row, columnWrapperStyle)\n            }, _item2.map((it, kk) => {\n              var element = renderer({\n                item: it,\n                index: _index * numColumns + kk,\n                separators: info.separators\n              });\n              return element != null ? /*#__PURE__*/React.createElement(React.Fragment, {\n                key: kk\n              }, element) : null;\n            }));\n          } else {\n            return renderer(info);\n          }\n        }\n      };\n    };\n\n    this._checkProps(this.props);\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._virtualizedListPairs = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityConfig: pair.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(pair.onViewableItemsChanged)\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._virtualizedListPairs.push({\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        viewabilityConfig: this.props.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(this.props.onViewableItemsChanged)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    invariant(prevProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');\n    invariant(prevProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');\n    invariant(!deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig), 'Changing viewabilityConfig on the fly is not supported');\n    invariant(prevProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');\n\n    this._checkProps(this.props);\n  }\n\n  _checkProps(props) {\n    var getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        horizontal = props.horizontal,\n        columnWrapperStyle = props.columnWrapperStyle,\n        onViewableItemsChanged = props.onViewableItemsChanged,\n        viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');\n\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');\n    }\n\n    invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');\n  }\n\n  _pushMultiColumnViewable(arr, v) {\n    var _this$props$keyExtrac2;\n\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    var keyExtractor = (_this$props$keyExtrac2 = this.props.keyExtractor) !== null && _this$props$keyExtrac2 !== void 0 ? _this$props$keyExtrac2 : defaultKeyExtractor;\n    v.item.forEach((item, ii) => {\n      invariant(v.index != null, 'Missing index!');\n      var index = v.index * numColumns + ii;\n      arr.push(_objectSpread(_objectSpread({}, v), {}, {\n        item,\n        key: keyExtractor(item, index),\n        index\n      }));\n    });\n  }\n\n  _createOnViewableItemsChanged(onViewableItemsChanged) {\n    return info => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          var changed = [];\n          var viewableItems = [];\n          info.viewableItems.forEach(v => this._pushMultiColumnViewable(viewableItems, v));\n          info.changed.forEach(v => this._pushMultiColumnViewable(changed, v));\n          onViewableItemsChanged({\n            viewableItems,\n            changed\n          });\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  }\n\n  render() {\n    var _this$props2 = this.props,\n        numColumns = _this$props2.numColumns,\n        columnWrapperStyle = _this$props2.columnWrapperStyle,\n        _removeClippedSubviews = _this$props2.removeClippedSubviews,\n        restProps = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n\n    return /*#__PURE__*/React.createElement(VirtualizedList, _extends({}, restProps, {\n      getItem: this._getItem,\n      getItemCount: this._getItemCount,\n      keyExtractor: this._keyExtractor,\n      ref: this._captureRef,\n      viewabilityConfigCallbackPairs: this._virtualizedListPairs,\n      removeClippedSubviews: removeClippedSubviewsOrDefault(_removeClippedSubviews)\n    }, this._renderer()));\n  }\n\n}\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  }\n});\nexport default FlatList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}