{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styleq = void 0;\nvar cache = new WeakMap();\nvar compiledKey = '$$css';\n\nfunction createStyleq(options) {\n  var disableCache;\n  var disableMix;\n  var transform;\n\n  if (options != null) {\n    disableCache = options.disableCache === true;\n    disableMix = options.disableMix === true;\n    transform = options.transform;\n  }\n\n  return function styleq() {\n    // Keep track of property commits to the className\n    var definedProperties = []; // The className and inline style to build up\n\n    var className = '';\n    var inlineStyle = null; // The current position in the cache graph\n\n    var nextCache = disableCache ? null : cache; // This way of creating an array from arguments is fastest\n\n    var styles = new Array(arguments.length);\n\n    for (var i = 0; i < arguments.length; i++) {\n      styles[i] = arguments[i];\n    } // Iterate over styles from last to first\n\n\n    while (styles.length > 0) {\n      var possibleStyle = styles.pop(); // Skip empty items\n\n      if (possibleStyle == null || possibleStyle === false) {\n        continue;\n      } // Push nested styles back onto the stack to be processed\n\n\n      if (Array.isArray(possibleStyle)) {\n        for (var _i = 0; _i < possibleStyle.length; _i++) {\n          styles.push(possibleStyle[_i]);\n        }\n\n        continue;\n      } // Process an individual style object\n\n\n      var style = transform != null ? transform(possibleStyle) : possibleStyle;\n\n      if (style[compiledKey]) {\n        // Build up the class names defined by this object\n        var classNameChunk = ''; // Check the cache to see if we've already done this work\n\n        if (nextCache != null && nextCache.has(style)) {\n          // Cache: read\n          var cacheEntry = nextCache.get(style);\n\n          if (cacheEntry != null) {\n            classNameChunk = cacheEntry[0]; // $FlowIgnore\n\n            definedProperties.push.apply(definedProperties, cacheEntry[1]);\n            nextCache = cacheEntry[2];\n          }\n        } // Update the chunks with data from this object\n        else {\n          // The properties defined by this object\n          var definedPropertiesChunk = [];\n\n          for (var prop in style) {\n            var value = style[prop];\n            if (prop === compiledKey) continue; // Each property value is used as an HTML class name\n            // { 'debug.string': 'debug.string', opacity: 's-jskmnoqp' }\n\n            if (typeof value === 'string') {\n              // Only add to chunks if this property hasn't already been seen\n              if (!definedProperties.includes(prop)) {\n                classNameChunk += classNameChunk ? ' ' + value : value;\n                definedProperties.push(prop);\n\n                if (nextCache != null) {\n                  definedPropertiesChunk.push(prop);\n                }\n              }\n            } // If we encounter a value that isn't a string\n            else {\n              console.error(\"styleq: \".concat(prop, \" typeof \").concat(value, \" is not \\\"string\\\".\"));\n            }\n          } // Cache: write\n\n\n          if (nextCache != null) {\n            // Create the next WeakMap for this sequence of styles\n            var weakMap = new WeakMap();\n            nextCache.set(style, [classNameChunk, definedPropertiesChunk, weakMap]);\n            nextCache = weakMap;\n          }\n        } // Order of classes in chunks matches property-iteration order of style\n        // object. Order of chunks matches passed order of styles from first to\n        // last (which we iterate over in reverse).\n\n\n        if (classNameChunk) {\n          className = className ? classNameChunk + ' ' + className : classNameChunk;\n        }\n      } // ----- DYNAMIC: Process inline style object -----\n      else {\n        if (disableMix) {\n          if (inlineStyle == null) {\n            inlineStyle = {};\n          }\n\n          inlineStyle = Object.assign({}, style, inlineStyle);\n        } else {\n          var subStyle = null;\n\n          for (var _prop in style) {\n            var _value = style[_prop];\n\n            if (_value !== undefined) {\n              if (!definedProperties.includes(_prop)) {\n                if (_value != null) {\n                  if (inlineStyle == null) {\n                    inlineStyle = {};\n                  }\n\n                  if (subStyle == null) {\n                    subStyle = {};\n                  }\n\n                  subStyle[_prop] = _value;\n                }\n\n                definedProperties.push(_prop); // Cache is unnecessary overhead if results can't be reused.\n\n                nextCache = null;\n              }\n            }\n          }\n\n          if (subStyle != null) {\n            inlineStyle = Object.assign(subStyle, inlineStyle);\n          }\n        }\n      }\n    }\n\n    var styleProps = [className, inlineStyle];\n    return styleProps;\n  };\n}\n\nvar styleq = createStyleq();\nexports.styleq = styleq;\nstyleq.factory = createStyleq;","map":{"version":3,"names":["Object","defineProperty","exports","value","styleq","cache","WeakMap","compiledKey","createStyleq","options","disableCache","disableMix","transform","definedProperties","className","inlineStyle","nextCache","styles","Array","arguments","length","i","possibleStyle","pop","isArray","_i","push","style","classNameChunk","has","cacheEntry","get","apply","definedPropertiesChunk","prop","includes","console","error","concat","weakMap","set","assign","subStyle","_prop","_value","undefined","styleProps","factory"],"sources":["/Users/ilkwon_choi/Downloads/Alcohol/FrontEnd/alcohol-app/node_modules/styleq/dist/styleq.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styleq = void 0;\nvar cache = new WeakMap();\nvar compiledKey = '$$css';\n\nfunction createStyleq(options) {\n  var disableCache;\n  var disableMix;\n  var transform;\n\n  if (options != null) {\n    disableCache = options.disableCache === true;\n    disableMix = options.disableMix === true;\n    transform = options.transform;\n  }\n\n  return function styleq() {\n    // Keep track of property commits to the className\n    var definedProperties = []; // The className and inline style to build up\n\n    var className = '';\n    var inlineStyle = null; // The current position in the cache graph\n\n    var nextCache = disableCache ? null : cache; // This way of creating an array from arguments is fastest\n\n    var styles = new Array(arguments.length);\n\n    for (var i = 0; i < arguments.length; i++) {\n      styles[i] = arguments[i];\n    } // Iterate over styles from last to first\n\n\n    while (styles.length > 0) {\n      var possibleStyle = styles.pop(); // Skip empty items\n\n      if (possibleStyle == null || possibleStyle === false) {\n        continue;\n      } // Push nested styles back onto the stack to be processed\n\n\n      if (Array.isArray(possibleStyle)) {\n        for (var _i = 0; _i < possibleStyle.length; _i++) {\n          styles.push(possibleStyle[_i]);\n        }\n\n        continue;\n      } // Process an individual style object\n\n\n      var style = transform != null ? transform(possibleStyle) : possibleStyle;\n\n      if (style[compiledKey]) {\n        // Build up the class names defined by this object\n        var classNameChunk = ''; // Check the cache to see if we've already done this work\n\n        if (nextCache != null && nextCache.has(style)) {\n          // Cache: read\n          var cacheEntry = nextCache.get(style);\n\n          if (cacheEntry != null) {\n            classNameChunk = cacheEntry[0]; // $FlowIgnore\n\n            definedProperties.push.apply(definedProperties, cacheEntry[1]);\n            nextCache = cacheEntry[2];\n          }\n        } // Update the chunks with data from this object\n        else {\n          // The properties defined by this object\n          var definedPropertiesChunk = [];\n\n          for (var prop in style) {\n            var value = style[prop];\n            if (prop === compiledKey) continue; // Each property value is used as an HTML class name\n            // { 'debug.string': 'debug.string', opacity: 's-jskmnoqp' }\n\n            if (typeof value === 'string') {\n              // Only add to chunks if this property hasn't already been seen\n              if (!definedProperties.includes(prop)) {\n                classNameChunk += classNameChunk ? ' ' + value : value;\n                definedProperties.push(prop);\n\n                if (nextCache != null) {\n                  definedPropertiesChunk.push(prop);\n                }\n              }\n            } // If we encounter a value that isn't a string\n            else {\n              console.error(\"styleq: \".concat(prop, \" typeof \").concat(value, \" is not \\\"string\\\".\"));\n            }\n          } // Cache: write\n\n\n          if (nextCache != null) {\n            // Create the next WeakMap for this sequence of styles\n            var weakMap = new WeakMap();\n            nextCache.set(style, [classNameChunk, definedPropertiesChunk, weakMap]);\n            nextCache = weakMap;\n          }\n        } // Order of classes in chunks matches property-iteration order of style\n        // object. Order of chunks matches passed order of styles from first to\n        // last (which we iterate over in reverse).\n\n\n        if (classNameChunk) {\n          className = className ? classNameChunk + ' ' + className : classNameChunk;\n        }\n      } // ----- DYNAMIC: Process inline style object -----\n      else {\n        if (disableMix) {\n          if (inlineStyle == null) {\n            inlineStyle = {};\n          }\n\n          inlineStyle = Object.assign({}, style, inlineStyle);\n        } else {\n          var subStyle = null;\n\n          for (var _prop in style) {\n            var _value = style[_prop];\n\n            if (_value !== undefined) {\n              if (!definedProperties.includes(_prop)) {\n                if (_value != null) {\n                  if (inlineStyle == null) {\n                    inlineStyle = {};\n                  }\n\n                  if (subStyle == null) {\n                    subStyle = {};\n                  }\n\n                  subStyle[_prop] = _value;\n                }\n\n                definedProperties.push(_prop); // Cache is unnecessary overhead if results can't be reused.\n\n                nextCache = null;\n              }\n            }\n          }\n\n          if (subStyle != null) {\n            inlineStyle = Object.assign(subStyle, inlineStyle);\n          }\n        }\n      }\n    }\n\n    var styleProps = [className, inlineStyle];\n    return styleProps;\n  };\n}\n\nvar styleq = createStyleq();\nexports.styleq = styleq;\nstyleq.factory = createStyleq;"],"mappings":"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"},"metadata":{},"sourceType":"script"}