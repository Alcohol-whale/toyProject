{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent } from '../AnimatedEvent';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedStyle from './AnimatedStyle';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport findNodeHandle from '../../../../exports/findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, callback) {\n    super();\n    if (props.style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: new AnimatedStyle(props.style)\n      });\n    }\n    this._props = props;\n    this._callback = callback;\n    this.__attach();\n  }\n  __getValue() {\n    var props = {};\n    for (var key in this._props) {\n      var value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative || value instanceof AnimatedStyle) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          props[key] = value.__getValue();\n        }\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n  __getAnimatedValue() {\n    var props = {};\n    for (var key in this._props) {\n      var value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n    return props;\n  }\n  __attach() {\n    for (var key in this._props) {\n      var value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n  __detach() {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n    for (var key in this._props) {\n      var value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n    super.__detach();\n  }\n  update() {\n    this._callback();\n  }\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n      for (var key in this._props) {\n        var value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n  __connectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n  }\n  __disconnectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n  }\n  __restoreDefaultValues() {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n  __getNativeConfig() {\n    var propsConfig = {};\n    for (var propKey in this._props) {\n      var value = this._props[propKey];\n      if (value instanceof AnimatedNode) {\n        value.__makeNative();\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n    return {\n      type: 'props',\n      props: propsConfig\n    };\n  }\n}\nexport default AnimatedProps;","map":{"version":3,"names":["_objectSpread","AnimatedEvent","AnimatedNode","AnimatedStyle","NativeAnimatedHelper","findNodeHandle","invariant","AnimatedProps","constructor","props","callback","style","_props","_callback","__attach","__getValue","key","value","__isNative","__getHandler","__getAnimatedValue","__addChild","__detach","_animatedView","__disconnectAnimatedView","__removeChild","update","__makeNative","__connectAnimatedView","setNativeView","animatedView","nativeViewTag","API","connectAnimatedNodeToView","__getNativeTag","disconnectAnimatedNodeFromView","__restoreDefaultValues","restoreDefaultValues","__getNativeConfig","propsConfig","propKey","type"],"sources":["C:/Users/dlfrn/Downloads/myToyProj/toyProject/FrontEnd/alcohol-app/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedProps.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent } from '../AnimatedEvent';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedStyle from './AnimatedStyle';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport findNodeHandle from '../../../../exports/findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, callback) {\n    super();\n\n    if (props.style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: new AnimatedStyle(props.style)\n      });\n    }\n\n    this._props = props;\n    this._callback = callback;\n\n    this.__attach();\n  }\n\n  __getValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative || value instanceof AnimatedStyle) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          props[key] = value.__getValue();\n        }\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n\n    return props;\n  }\n\n  __getAnimatedValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n\n    return props;\n  }\n\n  __attach() {\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n\n    super.__detach();\n  }\n\n  update() {\n    this._callback();\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n\n    this._animatedView = animatedView;\n\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __disconnectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __restoreDefaultValues() {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n\n  __getNativeConfig() {\n    var propsConfig = {};\n\n    for (var propKey in this._props) {\n      var value = this._props[propKey];\n\n      if (value instanceof AnimatedNode) {\n        value.__makeNative();\n\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n\n    return {\n      type: 'props',\n      props: propsConfig\n    };\n  }\n\n}\n\nexport default AnimatedProps;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}