{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent, attachNativeEvent } from './AnimatedEvent';\nimport AnimatedAddition from './nodes/AnimatedAddition';\nimport AnimatedDiffClamp from './nodes/AnimatedDiffClamp';\nimport AnimatedDivision from './nodes/AnimatedDivision';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedModulo from './nodes/AnimatedModulo';\nimport AnimatedMultiplication from './nodes/AnimatedMultiplication';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedProps from './nodes/AnimatedProps';\nimport AnimatedSubtraction from './nodes/AnimatedSubtraction';\nimport AnimatedTracking from './nodes/AnimatedTracking';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\nimport DecayAnimation from './animations/DecayAnimation';\nimport SpringAnimation from './animations/SpringAnimation';\nimport TimingAnimation from './animations/TimingAnimation';\nimport createAnimatedComponent from './createAnimatedComponent';\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete(...arguments);\n      callback && callback(...arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n    var configY = _objectSpread({}, config);\n    for (var key in config) {\n      var _config$key = config[key],\n        x = _config$key.x,\n        y = _config$key.y;\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY); // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  }\n  return null;\n};\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n        current++;\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n        animations[current].start(onComplete);\n      };\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach((animation, idx) => {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0; // Make sure we only call stop() at most once for each animation\n\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n      animations.forEach((animation, idx) => {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach((animation, idx) => {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach((animation, idx) => {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\nvar delay = function delay(time) {\n  // Would be nice to make a specialized implementation\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map((animation, i) => {\n    return sequence([delay(time * i), animation]);\n  }));\n};\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$iterations = _ref.iterations,\n    iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n    _ref$resetBeforeItera = _ref.resetBeforeIteration,\n    resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart(result) {\n        if (result === void 0) {\n          result = {\n            finished: true\n          };\n        }\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart(); // Start looping recursively on the js thread\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event(...arguments);\n      listener(...arguments);\n    };\n  }\n}\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n/**\n * The `Animated` library is designed to make animations fluid, powerful, and\n * easy to build and maintain. `Animated` focuses on declarative relationships\n * between inputs and outputs, with configurable transforms in between, and\n * simple `start`/`stop` methods to control time-based animation execution.\n * If additional transforms are added, be sure to include them in\n * AnimatedMock.js as well.\n *\n * See https://reactnative.dev/docs/animated.html\n */\n\nexport default {\n  /**\n   * Standard value class for driving animations.  Typically initialized with\n   * `new Animated.Value(0);`\n   *\n   * See https://reactnative.dev/docs/animated.html#value\n   */\n  Value: AnimatedValue,\n  /**\n   * 2D value class for driving 2D animations, such as pan gestures.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html\n   */\n  ValueXY: AnimatedValueXY,\n  /**\n   * Exported to use the Interpolation type in flow.\n   *\n   * See https://reactnative.dev/docs/animated.html#interpolation\n   */\n  Interpolation: AnimatedInterpolation,\n  /**\n   * Exported for ease of type checking. All animated values derive from this\n   * class.\n   *\n   * See https://reactnative.dev/docs/animated.html#node\n   */\n  Node: AnimatedNode,\n  /**\n   * Animates a value from an initial velocity to zero based on a decay\n   * coefficient.\n   *\n   * See https://reactnative.dev/docs/animated.html#decay\n   */\n  decay,\n  /**\n   * Animates a value along a timed easing curve. The Easing module has tons of\n   * predefined curves, or you can use your own function.\n   *\n   * See https://reactnative.dev/docs/animated.html#timing\n   */\n  timing,\n  /**\n   * Animates a value according to an analytical spring model based on\n   * damped harmonic oscillation.\n   *\n   * See https://reactnative.dev/docs/animated.html#spring\n   */\n  spring,\n  /**\n   * Creates a new Animated value composed from two Animated values added\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#add\n   */\n  add,\n  /**\n   * Creates a new Animated value composed by subtracting the second Animated\n   * value from the first Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#subtract\n   */\n  subtract,\n  /**\n   * Creates a new Animated value composed by dividing the first Animated value\n   * by the second Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#divide\n   */\n  divide,\n  /**\n   * Creates a new Animated value composed from two Animated values multiplied\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#multiply\n   */\n  multiply,\n  /**\n   * Creates a new Animated value that is the (non-negative) modulo of the\n   * provided Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#modulo\n   */\n  modulo,\n  /**\n   * Create a new Animated value that is limited between 2 values. It uses the\n   * difference between the last value so even if the value is far from the\n   * bounds it will start changing when the value starts getting closer again.\n   *\n   * See https://reactnative.dev/docs/animated.html#diffclamp\n   */\n  diffClamp,\n  /**\n   * Starts an animation after the given delay.\n   *\n   * See https://reactnative.dev/docs/animated.html#delay\n   */\n  delay,\n  /**\n   * Starts an array of animations in order, waiting for each to complete\n   * before starting the next. If the current running animation is stopped, no\n   * following animations will be started.\n   *\n   * See https://reactnative.dev/docs/animated.html#sequence\n   */\n  sequence,\n  /**\n   * Starts an array of animations all at the same time. By default, if one\n   * of the animations is stopped, they will all be stopped. You can override\n   * this with the `stopTogether` flag.\n   *\n   * See https://reactnative.dev/docs/animated.html#parallel\n   */\n  parallel,\n  /**\n   * Array of animations may run in parallel (overlap), but are started in\n   * sequence with successive delays.  Nice for doing trailing effects.\n   *\n   * See https://reactnative.dev/docs/animated.html#stagger\n   */\n  stagger,\n  /**\n   * Loops a given animation continuously, so that each time it reaches the\n   * end, it resets and begins again from the start.\n   *\n   * See https://reactnative.dev/docs/animated.html#loop\n   */\n  loop,\n  /**\n   * Takes an array of mappings and extracts values from each arg accordingly,\n   * then calls `setValue` on the mapped outputs.\n   *\n   * See https://reactnative.dev/docs/animated.html#event\n   */\n  event,\n  /**\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\n   *\n   * See https://reactnative.dev/docs/animated.html#createanimatedcomponent\n   */\n  createAnimatedComponent,\n  /**\n   * Imperative API to attach an animated value to an event on a view. Prefer\n   * using `Animated.event` with `useNativeDrive: true` if possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#attachnativeevent\n   */\n  attachNativeEvent,\n  /**\n   * Advanced imperative API for snooping on animated events that are passed in\n   * through props. Use values directly where possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#forkevent\n   */\n  forkEvent,\n  unforkEvent,\n  /**\n   * Expose Event class, so it can be used as a type for type checkers.\n   */\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};","map":{"version":3,"names":["_objectSpread","AnimatedEvent","attachNativeEvent","AnimatedAddition","AnimatedDiffClamp","AnimatedDivision","AnimatedInterpolation","AnimatedModulo","AnimatedMultiplication","AnimatedNode","AnimatedProps","AnimatedSubtraction","AnimatedTracking","AnimatedValue","AnimatedValueXY","DecayAnimation","SpringAnimation","TimingAnimation","createAnimatedComponent","add","a","b","subtract","divide","multiply","modulo","modulus","diffClamp","min","max","_combineCallbacks","callback","config","onComplete","arguments","maybeVectorAnim","value","anim","configX","configY","key","_config$key","x","y","undefined","aX","aY","parallel","stopTogether","spring","_start","start","animatedValue","configuration","singleValue","singleConfig","stopTracking","toValue","track","animate","stop","stopAnimation","reset","resetAnimation","_startNativeLoop","iterations","_isUsingNativeDriver","useNativeDriver","timing","_start2","decay","_start3","sequence","animations","current","result","finished","length","forEach","animation","idx","Error","doneCount","hasEnded","cb","endResult","delay","time","duration","stagger","map","i","loop","_temp","_ref","_ref$iterations","_ref$resetBeforeItera","resetBeforeIteration","isFinished","iterationsSoFar","restart","forkEvent","event","listener","__addListener","unforkEvent","__removeListener","argMapping","animatedEvent","__isNative","__getHandler","Value","ValueXY","Interpolation","Node","Event","__PropsOnlyForTests"],"sources":["C:/Users/dlfrn/Downloads/myToyProj/toyProject/FrontEnd/alcohol-app/node_modules/react-native-web/dist/vendor/react-native/Animated/AnimatedImplementation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent, attachNativeEvent } from './AnimatedEvent';\nimport AnimatedAddition from './nodes/AnimatedAddition';\nimport AnimatedDiffClamp from './nodes/AnimatedDiffClamp';\nimport AnimatedDivision from './nodes/AnimatedDivision';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedModulo from './nodes/AnimatedModulo';\nimport AnimatedMultiplication from './nodes/AnimatedMultiplication';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedProps from './nodes/AnimatedProps';\nimport AnimatedSubtraction from './nodes/AnimatedSubtraction';\nimport AnimatedTracking from './nodes/AnimatedTracking';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\nimport DecayAnimation from './animations/DecayAnimation';\nimport SpringAnimation from './animations/SpringAnimation';\nimport TimingAnimation from './animations/TimingAnimation';\nimport createAnimatedComponent from './createAnimatedComponent';\n\nvar add = function add(a, b) {\n  return new AnimatedAddition(a, b);\n};\n\nvar subtract = function subtract(a, b) {\n  return new AnimatedSubtraction(a, b);\n};\n\nvar divide = function divide(a, b) {\n  return new AnimatedDivision(a, b);\n};\n\nvar multiply = function multiply(a, b) {\n  return new AnimatedMultiplication(a, b);\n};\n\nvar modulo = function modulo(a, modulus) {\n  return new AnimatedModulo(a, modulus);\n};\n\nvar diffClamp = function diffClamp(a, min, max) {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nvar _combineCallbacks = function _combineCallbacks(callback, config) {\n  if (callback && config.onComplete) {\n    return function () {\n      config.onComplete && config.onComplete(...arguments);\n      callback && callback(...arguments);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nvar maybeVectorAnim = function maybeVectorAnim(value, config, anim) {\n  if (value instanceof AnimatedValueXY) {\n    var configX = _objectSpread({}, config);\n\n    var configY = _objectSpread({}, config);\n\n    for (var key in config) {\n      var _config$key = config[key],\n          x = _config$key.x,\n          y = _config$key.y;\n\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n\n    var aX = anim(value.x, configX);\n    var aY = anim(value.y, configY); // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n\n    return parallel([aX, aY], {\n      stopTogether: false\n    });\n  }\n\n  return null;\n};\n\nvar spring = function spring(value, config) {\n  var _start = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, SpringAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, spring) || {\n    start: function start(callback) {\n      _start(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n\n      _start(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar timing = function timing(value, config) {\n  var _start2 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(new AnimatedTracking(singleValue, configuration.toValue, TimingAnimation, singleConfig, callback));\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return maybeVectorAnim(value, config, timing) || {\n    start: function start(callback) {\n      _start2(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n\n      _start2(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar decay = function decay(value, config) {\n  var _start3 = function start(animatedValue, configuration, callback) {\n    callback = _combineCallbacks(callback, configuration);\n    var singleValue = animatedValue;\n    var singleConfig = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return maybeVectorAnim(value, config, decay) || {\n    start: function start(callback) {\n      _start3(value, config, callback);\n    },\n    stop: function stop() {\n      value.stopAnimation();\n    },\n    reset: function reset() {\n      value.resetAnimation();\n    },\n    _startNativeLoop: function _startNativeLoop(iterations) {\n      var singleConfig = _objectSpread(_objectSpread({}, config), {}, {\n        iterations\n      });\n\n      _start3(value, singleConfig);\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return config.useNativeDriver || false;\n    }\n  };\n};\n\nvar sequence = function sequence(animations) {\n  var current = 0;\n  return {\n    start: function start(callback) {\n      var onComplete = function onComplete(result) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        animations[current].start(onComplete);\n      }\n    },\n    stop: function stop() {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n    reset: function reset() {\n      animations.forEach((animation, idx) => {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.sequence animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n};\n\nvar parallel = function parallel(animations, config) {\n  var doneCount = 0; // Make sure we only call stop() at most once for each animation\n\n  var hasEnded = {};\n  var stopTogether = !(config && config.stopTogether === false);\n  var result = {\n    start: function start(callback) {\n      if (doneCount === animations.length) {\n        callback && callback({\n          finished: true\n        });\n        return;\n      }\n\n      animations.forEach((animation, idx) => {\n        var cb = function cb(endResult) {\n          hasEnded[idx] = true;\n          doneCount++;\n\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({\n            finished: true\n          });\n        } else {\n          animation.start(cb);\n        }\n      });\n    },\n    stop: function stop() {\n      animations.forEach((animation, idx) => {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n    reset: function reset() {\n      animations.forEach((animation, idx) => {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.parallel animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return false;\n    }\n  };\n  return result;\n};\n\nvar delay = function delay(time) {\n  // Would be nice to make a specialized implementation\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false\n  });\n};\n\nvar stagger = function stagger(time, animations) {\n  return parallel(animations.map((animation, i) => {\n    return sequence([delay(time * i), animation]);\n  }));\n};\n\nvar loop = function loop(animation, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$iterations = _ref.iterations,\n      iterations = _ref$iterations === void 0 ? -1 : _ref$iterations,\n      _ref$resetBeforeItera = _ref.resetBeforeIteration,\n      resetBeforeIteration = _ref$resetBeforeItera === void 0 ? true : _ref$resetBeforeItera;\n\n  var isFinished = false;\n  var iterationsSoFar = 0;\n  return {\n    start: function start(callback) {\n      var restart = function restart(result) {\n        if (result === void 0) {\n          result = {\n            finished: true\n          };\n        }\n\n        if (isFinished || iterationsSoFar === iterations || result.finished === false) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart);\n        }\n      };\n\n      if (!animation || iterations === 0) {\n        callback && callback({\n          finished: true\n        });\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart(); // Start looping recursively on the js thread\n        }\n      }\n    },\n    stop: function stop() {\n      isFinished = true;\n      animation.stop();\n    },\n    reset: function reset() {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n    _startNativeLoop: function _startNativeLoop() {\n      throw new Error('Loops run using the native driver cannot contain Animated.loop animations');\n    },\n    _isUsingNativeDriver: function _isUsingNativeDriver() {\n      return animation._isUsingNativeDriver();\n    }\n  };\n};\n\nfunction forkEvent(event, listener) {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n\n    return event;\n  } else {\n    return function () {\n      typeof event === 'function' && event(...arguments);\n      listener(...arguments);\n    };\n  }\n}\n\nfunction unforkEvent(event, listener) {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nvar event = function event(argMapping, config) {\n  var animatedEvent = new AnimatedEvent(argMapping, config);\n\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n/**\n * The `Animated` library is designed to make animations fluid, powerful, and\n * easy to build and maintain. `Animated` focuses on declarative relationships\n * between inputs and outputs, with configurable transforms in between, and\n * simple `start`/`stop` methods to control time-based animation execution.\n * If additional transforms are added, be sure to include them in\n * AnimatedMock.js as well.\n *\n * See https://reactnative.dev/docs/animated.html\n */\n\n\nexport default {\n  /**\n   * Standard value class for driving animations.  Typically initialized with\n   * `new Animated.Value(0);`\n   *\n   * See https://reactnative.dev/docs/animated.html#value\n   */\n  Value: AnimatedValue,\n\n  /**\n   * 2D value class for driving 2D animations, such as pan gestures.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy.html\n   */\n  ValueXY: AnimatedValueXY,\n\n  /**\n   * Exported to use the Interpolation type in flow.\n   *\n   * See https://reactnative.dev/docs/animated.html#interpolation\n   */\n  Interpolation: AnimatedInterpolation,\n\n  /**\n   * Exported for ease of type checking. All animated values derive from this\n   * class.\n   *\n   * See https://reactnative.dev/docs/animated.html#node\n   */\n  Node: AnimatedNode,\n\n  /**\n   * Animates a value from an initial velocity to zero based on a decay\n   * coefficient.\n   *\n   * See https://reactnative.dev/docs/animated.html#decay\n   */\n  decay,\n\n  /**\n   * Animates a value along a timed easing curve. The Easing module has tons of\n   * predefined curves, or you can use your own function.\n   *\n   * See https://reactnative.dev/docs/animated.html#timing\n   */\n  timing,\n\n  /**\n   * Animates a value according to an analytical spring model based on\n   * damped harmonic oscillation.\n   *\n   * See https://reactnative.dev/docs/animated.html#spring\n   */\n  spring,\n\n  /**\n   * Creates a new Animated value composed from two Animated values added\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#add\n   */\n  add,\n\n  /**\n   * Creates a new Animated value composed by subtracting the second Animated\n   * value from the first Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#subtract\n   */\n  subtract,\n\n  /**\n   * Creates a new Animated value composed by dividing the first Animated value\n   * by the second Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#divide\n   */\n  divide,\n\n  /**\n   * Creates a new Animated value composed from two Animated values multiplied\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated.html#multiply\n   */\n  multiply,\n\n  /**\n   * Creates a new Animated value that is the (non-negative) modulo of the\n   * provided Animated value.\n   *\n   * See https://reactnative.dev/docs/animated.html#modulo\n   */\n  modulo,\n\n  /**\n   * Create a new Animated value that is limited between 2 values. It uses the\n   * difference between the last value so even if the value is far from the\n   * bounds it will start changing when the value starts getting closer again.\n   *\n   * See https://reactnative.dev/docs/animated.html#diffclamp\n   */\n  diffClamp,\n\n  /**\n   * Starts an animation after the given delay.\n   *\n   * See https://reactnative.dev/docs/animated.html#delay\n   */\n  delay,\n\n  /**\n   * Starts an array of animations in order, waiting for each to complete\n   * before starting the next. If the current running animation is stopped, no\n   * following animations will be started.\n   *\n   * See https://reactnative.dev/docs/animated.html#sequence\n   */\n  sequence,\n\n  /**\n   * Starts an array of animations all at the same time. By default, if one\n   * of the animations is stopped, they will all be stopped. You can override\n   * this with the `stopTogether` flag.\n   *\n   * See https://reactnative.dev/docs/animated.html#parallel\n   */\n  parallel,\n\n  /**\n   * Array of animations may run in parallel (overlap), but are started in\n   * sequence with successive delays.  Nice for doing trailing effects.\n   *\n   * See https://reactnative.dev/docs/animated.html#stagger\n   */\n  stagger,\n\n  /**\n   * Loops a given animation continuously, so that each time it reaches the\n   * end, it resets and begins again from the start.\n   *\n   * See https://reactnative.dev/docs/animated.html#loop\n   */\n  loop,\n\n  /**\n   * Takes an array of mappings and extracts values from each arg accordingly,\n   * then calls `setValue` on the mapped outputs.\n   *\n   * See https://reactnative.dev/docs/animated.html#event\n   */\n  event,\n\n  /**\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\n   *\n   * See https://reactnative.dev/docs/animated.html#createanimatedcomponent\n   */\n  createAnimatedComponent,\n\n  /**\n   * Imperative API to attach an animated value to an event on a view. Prefer\n   * using `Animated.event` with `useNativeDrive: true` if possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#attachnativeevent\n   */\n  attachNativeEvent,\n\n  /**\n   * Advanced imperative API for snooping on animated events that are passed in\n   * through props. Use values directly where possible.\n   *\n   * See https://reactnative.dev/docs/animated.html#forkevent\n   */\n  forkEvent,\n  unforkEvent,\n\n  /**\n   * Expose Event class, so it can be used as a type for type checkers.\n   */\n  Event: AnimatedEvent,\n  __PropsOnlyForTests: AnimatedProps\n};"],"mappings":"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ACzCqG,KAAK,CAACE,aAAa,CAACD,QAAQ,CAAC;IAE7B,OAAOD,KAAK;EACd,CAAC,MAAM;IACL,OAAO,YAAY;MACjB,OAAOA,KAAK,KAAK,UAAU,IAAIA,KAAK,CAAC,GAAGpE,SAAS,CAAC;MAClDqE,QAAQ,CAAC,GAAGrE,SAAS,CAAC;IACxB,CAAC;EACH;AACF;AAEA,SAASuE,WAAWA,CAACH,KAAK,EAAEC,QAAQ,EAAE;EACpC,IAAID,KAAK,IAAIA,KAAK,YAAYrG,aAAa,EAAE;IAC3CqG,KAAK,CAACI,gBAAgB,CAACH,QAAQ,CAAC;EAClC;AACF;AAEA,IAAID,KAAK,GAAG,SAASA,KAAKA,CAACK,UAAU,EAAE3E,MAAM,EAAE;EAC7C,IAAI4E,aAAa,GAAG,IAAI3G,aAAa,CAAC0G,UAAU,EAAE3E,MAAM,CAAC;EAEzD,IAAI4E,aAAa,CAACC,UAAU,EAAE;IAC5B,OAAOD,aAAa;EACtB,CAAC,MAAM;IACL,OAAOA,aAAa,CAACE,YAAY,CAAC,CAAC;EACrC;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAe;EACb;AACF;AACA;AACA;AACA;AACA;EACEC,KAAK,EAAElG,aAAa;EAEpB;AACF;AACA;AACA;AACA;EACEmG,OAAO,EAAElG,eAAe;EAExB;AACF;AACA;AACA;AACA;EACEmG,aAAa,EAAE3G,qBAAqB;EAEpC;AACF;AACA;AACA;AACA;AACA;EACE4G,IAAI,EAAEzG,YAAY;EAElB;AACF;AACA;AACA;AACA;AACA;EACE6D,KAAK;EAEL;AACF;AACA;AACA;AACA;AACA;EACEF,MAAM;EAEN;AACF;AACA;AACA;AACA;AACA;EACEnB,MAAM;EAEN;AACF;AACA;AACA;AACA;AACA;EACE9B,GAAG;EAEH;AACF;AACA;AACA;AACA;AACA;EACEG,QAAQ;EAER;AACF;AACA;AACA;AACA;AACA;EACEC,MAAM;EAEN;AACF;AACA;AACA;AACA;AACA;EACEC,QAAQ;EAER;AACF;AACA;AACA;AACA;AACA;EACEC,MAAM;EAEN;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,SAAS;EAET;AACF;AACA;AACA;AACA;EACE2D,KAAK;EAEL;AACF;AACA;AACA;AACA;AACA;AACA;EACEd,QAAQ;EAER;AACF;AACA;AACA;AACA;AACA;AACA;EACEzB,QAAQ;EAER;AACF;AACA;AACA;AACA;AACA;EACE0C,OAAO;EAEP;AACF;AACA;AACA;AACA;AACA;EACEG,IAAI;EAEJ;AACF;AACA;AACA;AACA;AACA;EACEU,KAAK;EAEL;AACF;AACA;AACA;AACA;EACEpF,uBAAuB;EAEvB;AACF;AACA;AACA;AACA;AACA;EACEhB,iBAAiB;EAEjB;AACF;AACA;AACA;AACA;AACA;EACEmG,SAAS;EACTI,WAAW;EAEX;AACF;AACA;EACEU,KAAK,EAAElH,aAAa;EACpBmH,mBAAmB,EAAE1G;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}