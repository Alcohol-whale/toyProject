{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport requestIdleCallback, { cancelIdleCallback } from '../../modules/requestIdleCallback';\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n  /**\n   * Schedule a function to run after all interactions have completed.\n   */\n  runAfterInteractions(task) {\n    var handle;\n    var promise = new Promise(resolve => {\n      handle = requestIdleCallback(() => {\n        if (task) {\n          resolve(task());\n        } else {\n          resolve();\n        }\n      });\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: () => {\n        cancelIdleCallback(handle);\n      }\n    };\n  },\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle() {\n    return 1;\n  },\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n  },\n  addListener: () => {}\n};\nexport default InteractionManager;","map":{"version":3,"names":["invariant","requestIdleCallback","cancelIdleCallback","InteractionManager","Events","interactionStart","interactionComplete","runAfterInteractions","task","handle","promise","Promise","resolve","then","bind","done","cancel","createInteractionHandle","clearInteractionHandle","addListener"],"sources":["C:/Users/dlfrn/Downloads/myToyProj/toyProject/FrontEnd/alcohol-app/node_modules/react-native-web/dist/exports/InteractionManager/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport invariant from 'fbjs/lib/invariant';\nimport requestIdleCallback, { cancelIdleCallback } from '../../modules/requestIdleCallback';\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n\n  /**\n   * Schedule a function to run after all interactions have completed.\n   */\n  runAfterInteractions(task) {\n    var handle;\n    var promise = new Promise(resolve => {\n      handle = requestIdleCallback(() => {\n        if (task) {\n          resolve(task());\n        } else {\n          resolve();\n        }\n      });\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: () => {\n        cancelIdleCallback(handle);\n      }\n    };\n  },\n\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle() {\n    return 1;\n  },\n\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n  },\n\n  addListener: () => {}\n};\nexport default InteractionManager;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,mBAAmB,IAAIC,kBAAkB,QAAQ,mCAAmC;AAC3F,IAAIC,kBAAkB,GAAG;EACvBC,MAAM,EAAE;IACNC,gBAAgB,EAAE,kBAAkB;IACpCC,mBAAmB,EAAE;EACvB,CAAC;EAED;AACF;AACA;EACEC,oBAAoBA,CAACC,IAAI,EAAE;IACzB,IAAIC,MAAM;IACV,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAACC,OAAO,IAAI;MACnCH,MAAM,GAAGR,mBAAmB,CAAC,MAAM;QACjC,IAAIO,IAAI,EAAE;UACRI,OAAO,CAACJ,IAAI,CAAC,CAAC,CAAC;QACjB,CAAC,MAAM;UACLI,OAAO,CAAC,CAAC;QACX;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAO;MACLC,IAAI,EAAEH,OAAO,CAACG,IAAI,CAACC,IAAI,CAACJ,OAAO,CAAC;MAChCK,IAAI,EAAEL,OAAO,CAACG,IAAI,CAACC,IAAI,CAACJ,OAAO,CAAC;MAChCM,MAAM,EAAEA,CAAA,KAAM;QACZd,kBAAkB,CAACO,MAAM,CAAC;MAC5B;IACF,CAAC;EACH,CAAC;EAED;AACF;AACA;EACEQ,uBAAuBA,CAAA,EAAG;IACxB,OAAO,CAAC;EACV,CAAC;EAED;AACF;AACA;EACEC,sBAAsBA,CAACT,MAAM,EAAE;IAC7BT,SAAS,CAAC,CAAC,CAACS,MAAM,EAAE,iCAAiC,CAAC;EACxD,CAAC;EAEDU,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC;AACD,eAAehB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}